/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the ApimPolicyFullData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApimPolicyFullData{}

// ApimPolicyFullData struct for ApimPolicyFullData
type ApimPolicyFullData struct {
	Policies []ApimPolicyFull `json:"policies,omitempty"`
	Tiers *ApimPolicyFullDataTiers `json:"tiers,omitempty"`
}

// NewApimPolicyFullData instantiates a new ApimPolicyFullData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApimPolicyFullData() *ApimPolicyFullData {
	this := ApimPolicyFullData{}
	return &this
}

// NewApimPolicyFullDataWithDefaults instantiates a new ApimPolicyFullData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApimPolicyFullDataWithDefaults() *ApimPolicyFullData {
	this := ApimPolicyFullData{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *ApimPolicyFullData) GetPolicies() []ApimPolicyFull {
	if o == nil || IsNil(o.Policies) {
		var ret []ApimPolicyFull
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFullData) GetPoliciesOk() ([]ApimPolicyFull, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ApimPolicyFullData) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []ApimPolicyFull and assigns it to the Policies field.
func (o *ApimPolicyFullData) SetPolicies(v []ApimPolicyFull) {
	o.Policies = v
}

// GetTiers returns the Tiers field value if set, zero value otherwise.
func (o *ApimPolicyFullData) GetTiers() ApimPolicyFullDataTiers {
	if o == nil || IsNil(o.Tiers) {
		var ret ApimPolicyFullDataTiers
		return ret
	}
	return *o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFullData) GetTiersOk() (*ApimPolicyFullDataTiers, bool) {
	if o == nil || IsNil(o.Tiers) {
		return nil, false
	}
	return o.Tiers, true
}

// HasTiers returns a boolean if a field has been set.
func (o *ApimPolicyFullData) HasTiers() bool {
	if o != nil && !IsNil(o.Tiers) {
		return true
	}

	return false
}

// SetTiers gets a reference to the given ApimPolicyFullDataTiers and assigns it to the Tiers field.
func (o *ApimPolicyFullData) SetTiers(v ApimPolicyFullDataTiers) {
	o.Tiers = &v
}

func (o ApimPolicyFullData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApimPolicyFullData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	if !IsNil(o.Tiers) {
		toSerialize["tiers"] = o.Tiers
	}
	return toSerialize, nil
}

type NullableApimPolicyFullData struct {
	value *ApimPolicyFullData
	isSet bool
}

func (v NullableApimPolicyFullData) Get() *ApimPolicyFullData {
	return v.value
}

func (v *NullableApimPolicyFullData) Set(val *ApimPolicyFullData) {
	v.value = val
	v.isSet = true
}

func (v NullableApimPolicyFullData) IsSet() bool {
	return v.isSet
}

func (v *NullableApimPolicyFullData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApimPolicyFullData(val *ApimPolicyFullData) *NullableApimPolicyFullData {
	return &NullableApimPolicyFullData{value: val, isSet: true}
}

func (v NullableApimPolicyFullData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApimPolicyFullData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


