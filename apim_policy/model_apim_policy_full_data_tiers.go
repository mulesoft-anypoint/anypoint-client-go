/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the ApimPolicyFullDataTiers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApimPolicyFullDataTiers{}

// ApimPolicyFullDataTiers struct for ApimPolicyFullDataTiers
type ApimPolicyFullDataTiers struct {
	Values []ApimPolicyFullDataTiersValuesInner `json:"values,omitempty"`
	Version *int64 `json:"version,omitempty"`
}

// NewApimPolicyFullDataTiers instantiates a new ApimPolicyFullDataTiers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApimPolicyFullDataTiers() *ApimPolicyFullDataTiers {
	this := ApimPolicyFullDataTiers{}
	return &this
}

// NewApimPolicyFullDataTiersWithDefaults instantiates a new ApimPolicyFullDataTiers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApimPolicyFullDataTiersWithDefaults() *ApimPolicyFullDataTiers {
	this := ApimPolicyFullDataTiers{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ApimPolicyFullDataTiers) GetValues() []ApimPolicyFullDataTiersValuesInner {
	if o == nil || IsNil(o.Values) {
		var ret []ApimPolicyFullDataTiersValuesInner
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFullDataTiers) GetValuesOk() ([]ApimPolicyFullDataTiersValuesInner, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ApimPolicyFullDataTiers) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []ApimPolicyFullDataTiersValuesInner and assigns it to the Values field.
func (o *ApimPolicyFullDataTiers) SetValues(v []ApimPolicyFullDataTiersValuesInner) {
	o.Values = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ApimPolicyFullDataTiers) GetVersion() int64 {
	if o == nil || IsNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFullDataTiers) GetVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ApimPolicyFullDataTiers) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *ApimPolicyFullDataTiers) SetVersion(v int64) {
	o.Version = &v
}

func (o ApimPolicyFullDataTiers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApimPolicyFullDataTiers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableApimPolicyFullDataTiers struct {
	value *ApimPolicyFullDataTiers
	isSet bool
}

func (v NullableApimPolicyFullDataTiers) Get() *ApimPolicyFullDataTiers {
	return v.value
}

func (v *NullableApimPolicyFullDataTiers) Set(val *ApimPolicyFullDataTiers) {
	v.value = val
	v.isSet = true
}

func (v NullableApimPolicyFullDataTiers) IsSet() bool {
	return v.isSet
}

func (v *NullableApimPolicyFullDataTiers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApimPolicyFullDataTiers(val *ApimPolicyFullDataTiers) *NullableApimPolicyFullDataTiers {
	return &NullableApimPolicyFullDataTiers{value: val, isSet: true}
}

func (v NullableApimPolicyFullDataTiers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApimPolicyFullDataTiers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


