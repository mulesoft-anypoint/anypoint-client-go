/*
Exchange Client Apps

Description of the Exchange Client Applications API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package exchange_client_apps

import (
	"encoding/json"
)

// checks if the ClientApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientApp{}

// ClientApp struct for ClientApp
type ClientApp struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Url NullableString `json:"url,omitempty"`
	Description NullableString `json:"description,omitempty"`
	MasterOrganizationId *string `json:"masterOrganizationId,omitempty"`
	ClientId *string `json:"clientId,omitempty"`
	ClientSecret *string `json:"clientSecret,omitempty"`
	GrantTypes []string `json:"grantTypes,omitempty"`
	RedirectUri []string `json:"redirectUri,omitempty"`
	ClientProvider *ClientAppClientProvider `json:"clientProvider,omitempty"`
}

// NewClientApp instantiates a new ClientApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientApp() *ClientApp {
	this := ClientApp{}
	return &this
}

// NewClientAppWithDefaults instantiates a new ClientApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientAppWithDefaults() *ClientApp {
	this := ClientApp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClientApp) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClientApp) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ClientApp) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClientApp) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClientApp) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClientApp) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientApp) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientApp) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ClientApp) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ClientApp) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *ClientApp) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ClientApp) UnsetUrl() {
	o.Url.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientApp) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientApp) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ClientApp) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ClientApp) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ClientApp) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ClientApp) UnsetDescription() {
	o.Description.Unset()
}

// GetMasterOrganizationId returns the MasterOrganizationId field value if set, zero value otherwise.
func (o *ClientApp) GetMasterOrganizationId() string {
	if o == nil || IsNil(o.MasterOrganizationId) {
		var ret string
		return ret
	}
	return *o.MasterOrganizationId
}

// GetMasterOrganizationIdOk returns a tuple with the MasterOrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetMasterOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.MasterOrganizationId) {
		return nil, false
	}
	return o.MasterOrganizationId, true
}

// HasMasterOrganizationId returns a boolean if a field has been set.
func (o *ClientApp) HasMasterOrganizationId() bool {
	if o != nil && !IsNil(o.MasterOrganizationId) {
		return true
	}

	return false
}

// SetMasterOrganizationId gets a reference to the given string and assigns it to the MasterOrganizationId field.
func (o *ClientApp) SetMasterOrganizationId(v string) {
	o.MasterOrganizationId = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ClientApp) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ClientApp) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *ClientApp) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *ClientApp) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *ClientApp) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *ClientApp) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetGrantTypes returns the GrantTypes field value if set, zero value otherwise.
func (o *ClientApp) GetGrantTypes() []string {
	if o == nil || IsNil(o.GrantTypes) {
		var ret []string
		return ret
	}
	return o.GrantTypes
}

// GetGrantTypesOk returns a tuple with the GrantTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetGrantTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantTypes) {
		return nil, false
	}
	return o.GrantTypes, true
}

// HasGrantTypes returns a boolean if a field has been set.
func (o *ClientApp) HasGrantTypes() bool {
	if o != nil && !IsNil(o.GrantTypes) {
		return true
	}

	return false
}

// SetGrantTypes gets a reference to the given []string and assigns it to the GrantTypes field.
func (o *ClientApp) SetGrantTypes(v []string) {
	o.GrantTypes = v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *ClientApp) GetRedirectUri() []string {
	if o == nil || IsNil(o.RedirectUri) {
		var ret []string
		return ret
	}
	return o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetRedirectUriOk() ([]string, bool) {
	if o == nil || IsNil(o.RedirectUri) {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *ClientApp) HasRedirectUri() bool {
	if o != nil && !IsNil(o.RedirectUri) {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given []string and assigns it to the RedirectUri field.
func (o *ClientApp) SetRedirectUri(v []string) {
	o.RedirectUri = v
}

// GetClientProvider returns the ClientProvider field value if set, zero value otherwise.
func (o *ClientApp) GetClientProvider() ClientAppClientProvider {
	if o == nil || IsNil(o.ClientProvider) {
		var ret ClientAppClientProvider
		return ret
	}
	return *o.ClientProvider
}

// GetClientProviderOk returns a tuple with the ClientProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetClientProviderOk() (*ClientAppClientProvider, bool) {
	if o == nil || IsNil(o.ClientProvider) {
		return nil, false
	}
	return o.ClientProvider, true
}

// HasClientProvider returns a boolean if a field has been set.
func (o *ClientApp) HasClientProvider() bool {
	if o != nil && !IsNil(o.ClientProvider) {
		return true
	}

	return false
}

// SetClientProvider gets a reference to the given ClientAppClientProvider and assigns it to the ClientProvider field.
func (o *ClientApp) SetClientProvider(v ClientAppClientProvider) {
	o.ClientProvider = &v
}

func (o ClientApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.MasterOrganizationId) {
		toSerialize["masterOrganizationId"] = o.MasterOrganizationId
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.GrantTypes) {
		toSerialize["grantTypes"] = o.GrantTypes
	}
	if !IsNil(o.RedirectUri) {
		toSerialize["redirectUri"] = o.RedirectUri
	}
	if !IsNil(o.ClientProvider) {
		toSerialize["clientProvider"] = o.ClientProvider
	}
	return toSerialize, nil
}

type NullableClientApp struct {
	value *ClientApp
	isSet bool
}

func (v NullableClientApp) Get() *ClientApp {
	return v.value
}

func (v *NullableClientApp) Set(val *ClientApp) {
	v.value = val
	v.isSet = true
}

func (v NullableClientApp) IsSet() bool {
	return v.isSet
}

func (v *NullableClientApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientApp(val *ClientApp) *NullableClientApp {
	return &NullableClientApp{value: val, isSet: true}
}

func (v NullableClientApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


