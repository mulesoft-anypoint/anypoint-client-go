/*
Exchange Client Apps

Description of the Exchange Client Applications API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package exchange_client_apps

import (
	"encoding/json"
)

// checks if the ClientAppContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientAppContract{}

// ClientAppContract struct for ClientAppContract
type ClientAppContract struct {
	Id *int32 `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	RequestedTier *ClientAppContractRequestedTier `json:"requestedTier,omitempty"`
}

// NewClientAppContract instantiates a new ClientAppContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientAppContract() *ClientAppContract {
	this := ClientAppContract{}
	return &this
}

// NewClientAppContractWithDefaults instantiates a new ClientAppContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientAppContractWithDefaults() *ClientAppContract {
	this := ClientAppContract{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClientAppContract) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppContract) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClientAppContract) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ClientAppContract) SetId(v int32) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClientAppContract) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppContract) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClientAppContract) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClientAppContract) SetStatus(v string) {
	o.Status = &v
}

// GetRequestedTier returns the RequestedTier field value if set, zero value otherwise.
func (o *ClientAppContract) GetRequestedTier() ClientAppContractRequestedTier {
	if o == nil || IsNil(o.RequestedTier) {
		var ret ClientAppContractRequestedTier
		return ret
	}
	return *o.RequestedTier
}

// GetRequestedTierOk returns a tuple with the RequestedTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppContract) GetRequestedTierOk() (*ClientAppContractRequestedTier, bool) {
	if o == nil || IsNil(o.RequestedTier) {
		return nil, false
	}
	return o.RequestedTier, true
}

// HasRequestedTier returns a boolean if a field has been set.
func (o *ClientAppContract) HasRequestedTier() bool {
	if o != nil && !IsNil(o.RequestedTier) {
		return true
	}

	return false
}

// SetRequestedTier gets a reference to the given ClientAppContractRequestedTier and assigns it to the RequestedTier field.
func (o *ClientAppContract) SetRequestedTier(v ClientAppContractRequestedTier) {
	o.RequestedTier = &v
}

func (o ClientAppContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAppContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.RequestedTier) {
		toSerialize["requestedTier"] = o.RequestedTier
	}
	return toSerialize, nil
}

type NullableClientAppContract struct {
	value *ClientAppContract
	isSet bool
}

func (v NullableClientAppContract) Get() *ClientAppContract {
	return v.value
}

func (v *NullableClientAppContract) Set(val *ClientAppContract) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAppContract) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAppContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAppContract(val *ClientAppContract) *NullableClientAppContract {
	return &NullableClientAppContract{value: val, isSet: true}
}

func (v NullableClientAppContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAppContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


