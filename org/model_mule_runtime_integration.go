/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the MuleRuntimeIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MuleRuntimeIntegration{}

// MuleRuntimeIntegration struct for MuleRuntimeIntegration
type MuleRuntimeIntegration struct {
	// Mule Runtime Integration enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Flows
	Flows *int32 `json:"flows,omitempty"`
	// Messages
	Messages *int32 `json:"messages,omitempty"`
	// Throughput
	Throughput *int32 `json:"throughput,omitempty"`
}

// NewMuleRuntimeIntegration instantiates a new MuleRuntimeIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMuleRuntimeIntegration() *MuleRuntimeIntegration {
	this := MuleRuntimeIntegration{}
	var enabled bool = false
	this.Enabled = &enabled
	var flows int32 = 0
	this.Flows = &flows
	var messages int32 = 0
	this.Messages = &messages
	var throughput int32 = 0
	this.Throughput = &throughput
	return &this
}

// NewMuleRuntimeIntegrationWithDefaults instantiates a new MuleRuntimeIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMuleRuntimeIntegrationWithDefaults() *MuleRuntimeIntegration {
	this := MuleRuntimeIntegration{}
	var enabled bool = false
	this.Enabled = &enabled
	var flows int32 = 0
	this.Flows = &flows
	var messages int32 = 0
	this.Messages = &messages
	var throughput int32 = 0
	this.Throughput = &throughput
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MuleRuntimeIntegration) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuleRuntimeIntegration) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MuleRuntimeIntegration) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MuleRuntimeIntegration) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFlows returns the Flows field value if set, zero value otherwise.
func (o *MuleRuntimeIntegration) GetFlows() int32 {
	if o == nil || IsNil(o.Flows) {
		var ret int32
		return ret
	}
	return *o.Flows
}

// GetFlowsOk returns a tuple with the Flows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuleRuntimeIntegration) GetFlowsOk() (*int32, bool) {
	if o == nil || IsNil(o.Flows) {
		return nil, false
	}
	return o.Flows, true
}

// HasFlows returns a boolean if a field has been set.
func (o *MuleRuntimeIntegration) HasFlows() bool {
	if o != nil && !IsNil(o.Flows) {
		return true
	}

	return false
}

// SetFlows gets a reference to the given int32 and assigns it to the Flows field.
func (o *MuleRuntimeIntegration) SetFlows(v int32) {
	o.Flows = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *MuleRuntimeIntegration) GetMessages() int32 {
	if o == nil || IsNil(o.Messages) {
		var ret int32
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuleRuntimeIntegration) GetMessagesOk() (*int32, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *MuleRuntimeIntegration) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given int32 and assigns it to the Messages field.
func (o *MuleRuntimeIntegration) SetMessages(v int32) {
	o.Messages = &v
}

// GetThroughput returns the Throughput field value if set, zero value otherwise.
func (o *MuleRuntimeIntegration) GetThroughput() int32 {
	if o == nil || IsNil(o.Throughput) {
		var ret int32
		return ret
	}
	return *o.Throughput
}

// GetThroughputOk returns a tuple with the Throughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuleRuntimeIntegration) GetThroughputOk() (*int32, bool) {
	if o == nil || IsNil(o.Throughput) {
		return nil, false
	}
	return o.Throughput, true
}

// HasThroughput returns a boolean if a field has been set.
func (o *MuleRuntimeIntegration) HasThroughput() bool {
	if o != nil && !IsNil(o.Throughput) {
		return true
	}

	return false
}

// SetThroughput gets a reference to the given int32 and assigns it to the Throughput field.
func (o *MuleRuntimeIntegration) SetThroughput(v int32) {
	o.Throughput = &v
}

func (o MuleRuntimeIntegration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MuleRuntimeIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Flows) {
		toSerialize["flows"] = o.Flows
	}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if !IsNil(o.Throughput) {
		toSerialize["throughput"] = o.Throughput
	}
	return toSerialize, nil
}

type NullableMuleRuntimeIntegration struct {
	value *MuleRuntimeIntegration
	isSet bool
}

func (v NullableMuleRuntimeIntegration) Get() *MuleRuntimeIntegration {
	return v.value
}

func (v *NullableMuleRuntimeIntegration) Set(val *MuleRuntimeIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableMuleRuntimeIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableMuleRuntimeIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMuleRuntimeIntegration(val *MuleRuntimeIntegration) *NullableMuleRuntimeIntegration {
	return &NullableMuleRuntimeIntegration{value: val, isSet: true}
}

func (v NullableMuleRuntimeIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMuleRuntimeIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


