/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the PartnersProductionEntitlement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnersProductionEntitlement{}

// PartnersProductionEntitlement Partners Production entitlements
type PartnersProductionEntitlement struct {
	// Partners Production assigned
	Assigned *int32 `json:"assigned,omitempty"`
}

// NewPartnersProductionEntitlement instantiates a new PartnersProductionEntitlement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnersProductionEntitlement() *PartnersProductionEntitlement {
	this := PartnersProductionEntitlement{}
	var assigned int32 = 0
	this.Assigned = &assigned
	return &this
}

// NewPartnersProductionEntitlementWithDefaults instantiates a new PartnersProductionEntitlement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnersProductionEntitlementWithDefaults() *PartnersProductionEntitlement {
	this := PartnersProductionEntitlement{}
	var assigned int32 = 0
	this.Assigned = &assigned
	return &this
}

// GetAssigned returns the Assigned field value if set, zero value otherwise.
func (o *PartnersProductionEntitlement) GetAssigned() int32 {
	if o == nil || IsNil(o.Assigned) {
		var ret int32
		return ret
	}
	return *o.Assigned
}

// GetAssignedOk returns a tuple with the Assigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnersProductionEntitlement) GetAssignedOk() (*int32, bool) {
	if o == nil || IsNil(o.Assigned) {
		return nil, false
	}
	return o.Assigned, true
}

// HasAssigned returns a boolean if a field has been set.
func (o *PartnersProductionEntitlement) HasAssigned() bool {
	if o != nil && !IsNil(o.Assigned) {
		return true
	}

	return false
}

// SetAssigned gets a reference to the given int32 and assigns it to the Assigned field.
func (o *PartnersProductionEntitlement) SetAssigned(v int32) {
	o.Assigned = &v
}

func (o PartnersProductionEntitlement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnersProductionEntitlement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assigned) {
		toSerialize["assigned"] = o.Assigned
	}
	return toSerialize, nil
}

type NullablePartnersProductionEntitlement struct {
	value *PartnersProductionEntitlement
	isSet bool
}

func (v NullablePartnersProductionEntitlement) Get() *PartnersProductionEntitlement {
	return v.value
}

func (v *NullablePartnersProductionEntitlement) Set(val *PartnersProductionEntitlement) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnersProductionEntitlement) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnersProductionEntitlement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnersProductionEntitlement(val *PartnersProductionEntitlement) *NullablePartnersProductionEntitlement {
	return &NullablePartnersProductionEntitlement{value: val, isSet: true}
}

func (v NullablePartnersProductionEntitlement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnersProductionEntitlement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


