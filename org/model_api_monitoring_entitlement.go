/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the ApiMonitoringEntitlement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMonitoringEntitlement{}

// ApiMonitoringEntitlement struct for ApiMonitoringEntitlement
type ApiMonitoringEntitlement struct {
	// Schedules
	Schedules *int32 `json:"schedules,omitempty"`
}

// NewApiMonitoringEntitlement instantiates a new ApiMonitoringEntitlement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMonitoringEntitlement() *ApiMonitoringEntitlement {
	this := ApiMonitoringEntitlement{}
	return &this
}

// NewApiMonitoringEntitlementWithDefaults instantiates a new ApiMonitoringEntitlement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMonitoringEntitlementWithDefaults() *ApiMonitoringEntitlement {
	this := ApiMonitoringEntitlement{}
	return &this
}

// GetSchedules returns the Schedules field value if set, zero value otherwise.
func (o *ApiMonitoringEntitlement) GetSchedules() int32 {
	if o == nil || IsNil(o.Schedules) {
		var ret int32
		return ret
	}
	return *o.Schedules
}

// GetSchedulesOk returns a tuple with the Schedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringEntitlement) GetSchedulesOk() (*int32, bool) {
	if o == nil || IsNil(o.Schedules) {
		return nil, false
	}
	return o.Schedules, true
}

// HasSchedules returns a boolean if a field has been set.
func (o *ApiMonitoringEntitlement) HasSchedules() bool {
	if o != nil && !IsNil(o.Schedules) {
		return true
	}

	return false
}

// SetSchedules gets a reference to the given int32 and assigns it to the Schedules field.
func (o *ApiMonitoringEntitlement) SetSchedules(v int32) {
	o.Schedules = &v
}

func (o ApiMonitoringEntitlement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMonitoringEntitlement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schedules) {
		toSerialize["schedules"] = o.Schedules
	}
	return toSerialize, nil
}

type NullableApiMonitoringEntitlement struct {
	value *ApiMonitoringEntitlement
	isSet bool
}

func (v NullableApiMonitoringEntitlement) Get() *ApiMonitoringEntitlement {
	return v.value
}

func (v *NullableApiMonitoringEntitlement) Set(val *ApiMonitoringEntitlement) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMonitoringEntitlement) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMonitoringEntitlement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMonitoringEntitlement(val *ApiMonitoringEntitlement) *NullableApiMonitoringEntitlement {
	return &NullableApiMonitoringEntitlement{value: val, isSet: true}
}

func (v NullableApiMonitoringEntitlement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMonitoringEntitlement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


