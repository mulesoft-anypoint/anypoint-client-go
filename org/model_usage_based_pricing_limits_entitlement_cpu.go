/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the UsageBasedPricingLimitsEntitlementCpu type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsageBasedPricingLimitsEntitlementCpu{}

// UsageBasedPricingLimitsEntitlementCpu struct for UsageBasedPricingLimitsEntitlementCpu
type UsageBasedPricingLimitsEntitlementCpu struct {
	// Base
	Base *int32 `json:"base,omitempty"`
	// Extra
	Extra *int32 `json:"extra,omitempty"`
}

// NewUsageBasedPricingLimitsEntitlementCpu instantiates a new UsageBasedPricingLimitsEntitlementCpu object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageBasedPricingLimitsEntitlementCpu() *UsageBasedPricingLimitsEntitlementCpu {
	this := UsageBasedPricingLimitsEntitlementCpu{}
	var base int32 = 0
	this.Base = &base
	var extra int32 = 0
	this.Extra = &extra
	return &this
}

// NewUsageBasedPricingLimitsEntitlementCpuWithDefaults instantiates a new UsageBasedPricingLimitsEntitlementCpu object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageBasedPricingLimitsEntitlementCpuWithDefaults() *UsageBasedPricingLimitsEntitlementCpu {
	this := UsageBasedPricingLimitsEntitlementCpu{}
	var base int32 = 0
	this.Base = &base
	var extra int32 = 0
	this.Extra = &extra
	return &this
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *UsageBasedPricingLimitsEntitlementCpu) GetBase() int32 {
	if o == nil || IsNil(o.Base) {
		var ret int32
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageBasedPricingLimitsEntitlementCpu) GetBaseOk() (*int32, bool) {
	if o == nil || IsNil(o.Base) {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *UsageBasedPricingLimitsEntitlementCpu) HasBase() bool {
	if o != nil && !IsNil(o.Base) {
		return true
	}

	return false
}

// SetBase gets a reference to the given int32 and assigns it to the Base field.
func (o *UsageBasedPricingLimitsEntitlementCpu) SetBase(v int32) {
	o.Base = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *UsageBasedPricingLimitsEntitlementCpu) GetExtra() int32 {
	if o == nil || IsNil(o.Extra) {
		var ret int32
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageBasedPricingLimitsEntitlementCpu) GetExtraOk() (*int32, bool) {
	if o == nil || IsNil(o.Extra) {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *UsageBasedPricingLimitsEntitlementCpu) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given int32 and assigns it to the Extra field.
func (o *UsageBasedPricingLimitsEntitlementCpu) SetExtra(v int32) {
	o.Extra = &v
}

func (o UsageBasedPricingLimitsEntitlementCpu) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsageBasedPricingLimitsEntitlementCpu) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Base) {
		toSerialize["base"] = o.Base
	}
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	return toSerialize, nil
}

type NullableUsageBasedPricingLimitsEntitlementCpu struct {
	value *UsageBasedPricingLimitsEntitlementCpu
	isSet bool
}

func (v NullableUsageBasedPricingLimitsEntitlementCpu) Get() *UsageBasedPricingLimitsEntitlementCpu {
	return v.value
}

func (v *NullableUsageBasedPricingLimitsEntitlementCpu) Set(val *UsageBasedPricingLimitsEntitlementCpu) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageBasedPricingLimitsEntitlementCpu) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageBasedPricingLimitsEntitlementCpu) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageBasedPricingLimitsEntitlementCpu(val *UsageBasedPricingLimitsEntitlementCpu) *NullableUsageBasedPricingLimitsEntitlementCpu {
	return &NullableUsageBasedPricingLimitsEntitlementCpu{value: val, isSet: true}
}

func (v NullableUsageBasedPricingLimitsEntitlementCpu) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageBasedPricingLimitsEntitlementCpu) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


