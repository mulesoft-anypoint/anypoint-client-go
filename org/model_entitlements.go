/*
Organization API

Description of the Organization API

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the Entitlements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Entitlements{}

// Entitlements Business Group entitlements
type Entitlements struct {
	AngGovernance *AngGovernance `json:"angGovernance,omitempty"`
	AnypointSecurityEdgePolicies *EnablementResourceEntitlement `json:"anypointSecurityEdgePolicies,omitempty"`
	AnypointSecurityTokenization *EnablementResourceEntitlement `json:"anypointSecurityTokenization,omitempty"`
	ApiCommunityManager *EnablementResourceEntitlement `json:"apiCommunityManager,omitempty"`
	ApiMonitoring *ApiMonitoring `json:"apiMonitoring,omitempty"`
	ApiQuery *ApiQuery `json:"apiQuery,omitempty"`
	ApiQueryC360 *EnablementResourceEntitlement `json:"apiQueryC360,omitempty"`
	Apis *EnablementResourceEntitlement `json:"apis,omitempty"`
	// AppViz entitlements
	AppViz *bool `json:"appViz,omitempty"`
	// ARM Alerts entitlements
	ArmAlerts *bool `json:"armAlerts,omitempty"`
	// Autoscaling entitlements
	Autoscaling *bool `json:"autoscaling,omitempty"`
	Cam *EnablementResourceEntitlement `json:"cam,omitempty"`
	// Create Environments entitlements
	CreateEnvironments *bool `json:"createEnvironments,omitempty"`
	// Create Sub Orgs entitlements
	CreateSubOrgs *bool `json:"createSubOrgs,omitempty"`
	Crowd *Crowd `json:"crowd,omitempty"`
	CrowdSelfServiceMigration *EnablementResourceEntitlement `json:"crowdSelfServiceMigration,omitempty"`
	DesignCenter *DesignCenter `json:"designCenter,omitempty"`
	Exchange2 *EnablementResourceEntitlement `json:"exchange2,omitempty"`
	// External Identity entitlements
	ExternalIdentity *bool `json:"externalIdentity,omitempty"`
	Gateways *GatewaysEntitlement `json:"gateways,omitempty"`
	GlobalDeployment *EnablementResourceEntitlement `json:"globalDeployment,omitempty"`
	Hybrid *EnablementResourceEntitlement `json:"hybrid,omitempty"`
	// Hybrid auto-discover properties
	HybridAutoDiscoverProperties *bool `json:"hybridAutoDiscoverProperties,omitempty"`
	// Hybrid Insight entitlements
	HybridInsight *bool `json:"hybridInsight,omitempty"`
	KpiDashboard *EnablementResourceEntitlement `json:"kpiDashboard,omitempty"`
	LoadBalancer *LoadBalancerEntitlement `json:"loadBalancer,omitempty"`
	Messaging *MessagingEntitlement `json:"messaging,omitempty"`
	MonitoringCenter *MonitoringCenterEntitlement `json:"monitoringCenter,omitempty"`
	MqAdvancedFeatures *EnablementResourceEntitlement `json:"mqAdvancedFeatures,omitempty"`
	MqMessages *AddOnEntitlement `json:"mqMessages,omitempty"`
	MqRequests *AddOnEntitlement `json:"mqRequests,omitempty"`
	ObjectStoreKeys *AddOnEntitlement `json:"objectStoreKeys,omitempty"`
	ObjectStoreRequestUnits *AddOnEntitlement `json:"objectStoreRequestUnits,omitempty"`
	PartnersProduction *PartnersProductionEntitlement `json:"partnersProduction,omitempty"`
	PartnersSandbox *PartnersSandboxEntitlement `json:"partnersSandbox,omitempty"`
	// PCF entitlements
	Pcf *bool `json:"pcf,omitempty"`
	// Runtime Fabric entitlements
	RuntimeFabric *bool `json:"runtimeFabric,omitempty"`
	RuntimeFabricCloud *EnablementResourceEntitlement `json:"runtimeFabricCloud,omitempty"`
	ServiceMesh *EnablementResourceEntitlement `json:"serviceMesh,omitempty"`
	StaticIps *StaticIpsEntitlement `json:"staticIps,omitempty"`
	TradingPartnersProduction *TradingPartnersProductionEntitlement `json:"tradingPartnersProduction,omitempty"`
	TradingPartnersSandbox *TradingPartnersSandboxEntitlement `json:"tradingPartnersSandbox,omitempty"`
	VCoresDesign *VCoresDesignEntitlement `json:"vCoresDesign,omitempty"`
	VCoresProduction *VCoresProductionEntitlement `json:"vCoresProduction,omitempty"`
	VCoresSandbox *VCoresSandboxEntitlement `json:"vCoresSandbox,omitempty"`
	Vpcs *VpcsEntitlement `json:"vpcs,omitempty"`
	Vpns *VpnsEntitlement `json:"vpns,omitempty"`
	WorkerClouds *WorkerCloudsEntitlement `json:"workerClouds,omitempty"`
	WorkerLoggingOverride *EnablementResourceEntitlement `json:"workerLoggingOverride,omitempty"`
	MuleDxWebIde *EnablementResourceEntitlement `json:"muleDxWebIde,omitempty"`
	MuleDxGenAI *EnablementResourceEntitlement `json:"muleDxGenAI,omitempty"`
	MuleDxEDA *EnablementResourceEntitlement `json:"muleDxEDA,omitempty"`
	HighAvailability *HighAvailability `json:"highAvailability,omitempty"`
	Cloudhub1 *EnablementResourceEntitlement `json:"cloudhub1,omitempty"`
	ApiGovernance *ApiGovernance `json:"apiGovernance,omitempty"`
	ApiGovernanceDomain *ApiGovernanceDomain `json:"apiGovernanceDomain,omitempty"`
	ApiCatalog *EnablementResourceEntitlement `json:"apiCatalog,omitempty"`
	ApiManager *ApiManagerEntitlement `json:"apiManager,omitempty"`
	Composer *ComposerEntitlement `json:"composer,omitempty"`
	Rpa *RpaEntitlement `json:"rpa,omitempty"`
	Idp *EnablementResourceEntitlement `json:"idp,omitempty"`
	UsageBasedPricing *UsageBasedPricingEntitlement `json:"usageBasedPricing,omitempty"`
	UsageBasedPricingLimits *UsageBasedPricingLimitsEntitlement `json:"usageBasedPricingLimits,omitempty"`
	TelemetryExporter *EnablementResourceEntitlement `json:"telemetryExporter,omitempty"`
}

// NewEntitlements instantiates a new Entitlements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlements() *Entitlements {
	this := Entitlements{}
	var angGovernance AngGovernance = {}
	this.AngGovernance = &angGovernance
	var apiMonitoring ApiMonitoring = {}
	this.ApiMonitoring = &apiMonitoring
	var apiQuery ApiQuery = {}
	this.ApiQuery = &apiQuery
	var appViz bool = false
	this.AppViz = &appViz
	var armAlerts bool = false
	this.ArmAlerts = &armAlerts
	var autoscaling bool = false
	this.Autoscaling = &autoscaling
	var createEnvironments bool = false
	this.CreateEnvironments = &createEnvironments
	var createSubOrgs bool = false
	this.CreateSubOrgs = &createSubOrgs
	var crowd Crowd = {}
	this.Crowd = &crowd
	var designCenter DesignCenter = {}
	this.DesignCenter = &designCenter
	var externalIdentity bool = false
	this.ExternalIdentity = &externalIdentity
	var gateways GatewaysEntitlement = {}
	this.Gateways = &gateways
	var hybridAutoDiscoverProperties bool = false
	this.HybridAutoDiscoverProperties = &hybridAutoDiscoverProperties
	var hybridInsight bool = false
	this.HybridInsight = &hybridInsight
	var messaging MessagingEntitlement = {}
	this.Messaging = &messaging
	var monitoringCenter MonitoringCenterEntitlement = {}
	this.MonitoringCenter = &monitoringCenter
	var partnersProduction PartnersProductionEntitlement = {}
	this.PartnersProduction = &partnersProduction
	var partnersSandbox PartnersSandboxEntitlement = {}
	this.PartnersSandbox = &partnersSandbox
	var pcf bool = false
	this.Pcf = &pcf
	var runtimeFabric bool = false
	this.RuntimeFabric = &runtimeFabric
	return &this
}

// NewEntitlementsWithDefaults instantiates a new Entitlements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementsWithDefaults() *Entitlements {
	this := Entitlements{}
	var angGovernance AngGovernance = {}
	this.AngGovernance = &angGovernance
	var apiMonitoring ApiMonitoring = {}
	this.ApiMonitoring = &apiMonitoring
	var apiQuery ApiQuery = {}
	this.ApiQuery = &apiQuery
	var appViz bool = false
	this.AppViz = &appViz
	var armAlerts bool = false
	this.ArmAlerts = &armAlerts
	var autoscaling bool = false
	this.Autoscaling = &autoscaling
	var createEnvironments bool = false
	this.CreateEnvironments = &createEnvironments
	var createSubOrgs bool = false
	this.CreateSubOrgs = &createSubOrgs
	var crowd Crowd = {}
	this.Crowd = &crowd
	var designCenter DesignCenter = {}
	this.DesignCenter = &designCenter
	var externalIdentity bool = false
	this.ExternalIdentity = &externalIdentity
	var gateways GatewaysEntitlement = {}
	this.Gateways = &gateways
	var hybridAutoDiscoverProperties bool = false
	this.HybridAutoDiscoverProperties = &hybridAutoDiscoverProperties
	var hybridInsight bool = false
	this.HybridInsight = &hybridInsight
	var messaging MessagingEntitlement = {}
	this.Messaging = &messaging
	var monitoringCenter MonitoringCenterEntitlement = {}
	this.MonitoringCenter = &monitoringCenter
	var partnersProduction PartnersProductionEntitlement = {}
	this.PartnersProduction = &partnersProduction
	var partnersSandbox PartnersSandboxEntitlement = {}
	this.PartnersSandbox = &partnersSandbox
	var pcf bool = false
	this.Pcf = &pcf
	var runtimeFabric bool = false
	this.RuntimeFabric = &runtimeFabric
	return &this
}

// GetAngGovernance returns the AngGovernance field value if set, zero value otherwise.
func (o *Entitlements) GetAngGovernance() AngGovernance {
	if o == nil || IsNil(o.AngGovernance) {
		var ret AngGovernance
		return ret
	}
	return *o.AngGovernance
}

// GetAngGovernanceOk returns a tuple with the AngGovernance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetAngGovernanceOk() (*AngGovernance, bool) {
	if o == nil || IsNil(o.AngGovernance) {
		return nil, false
	}
	return o.AngGovernance, true
}

// HasAngGovernance returns a boolean if a field has been set.
func (o *Entitlements) HasAngGovernance() bool {
	if o != nil && !IsNil(o.AngGovernance) {
		return true
	}

	return false
}

// SetAngGovernance gets a reference to the given AngGovernance and assigns it to the AngGovernance field.
func (o *Entitlements) SetAngGovernance(v AngGovernance) {
	o.AngGovernance = &v
}

// GetAnypointSecurityEdgePolicies returns the AnypointSecurityEdgePolicies field value if set, zero value otherwise.
func (o *Entitlements) GetAnypointSecurityEdgePolicies() EnablementResourceEntitlement {
	if o == nil || IsNil(o.AnypointSecurityEdgePolicies) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.AnypointSecurityEdgePolicies
}

// GetAnypointSecurityEdgePoliciesOk returns a tuple with the AnypointSecurityEdgePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetAnypointSecurityEdgePoliciesOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.AnypointSecurityEdgePolicies) {
		return nil, false
	}
	return o.AnypointSecurityEdgePolicies, true
}

// HasAnypointSecurityEdgePolicies returns a boolean if a field has been set.
func (o *Entitlements) HasAnypointSecurityEdgePolicies() bool {
	if o != nil && !IsNil(o.AnypointSecurityEdgePolicies) {
		return true
	}

	return false
}

// SetAnypointSecurityEdgePolicies gets a reference to the given EnablementResourceEntitlement and assigns it to the AnypointSecurityEdgePolicies field.
func (o *Entitlements) SetAnypointSecurityEdgePolicies(v EnablementResourceEntitlement) {
	o.AnypointSecurityEdgePolicies = &v
}

// GetAnypointSecurityTokenization returns the AnypointSecurityTokenization field value if set, zero value otherwise.
func (o *Entitlements) GetAnypointSecurityTokenization() EnablementResourceEntitlement {
	if o == nil || IsNil(o.AnypointSecurityTokenization) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.AnypointSecurityTokenization
}

// GetAnypointSecurityTokenizationOk returns a tuple with the AnypointSecurityTokenization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetAnypointSecurityTokenizationOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.AnypointSecurityTokenization) {
		return nil, false
	}
	return o.AnypointSecurityTokenization, true
}

// HasAnypointSecurityTokenization returns a boolean if a field has been set.
func (o *Entitlements) HasAnypointSecurityTokenization() bool {
	if o != nil && !IsNil(o.AnypointSecurityTokenization) {
		return true
	}

	return false
}

// SetAnypointSecurityTokenization gets a reference to the given EnablementResourceEntitlement and assigns it to the AnypointSecurityTokenization field.
func (o *Entitlements) SetAnypointSecurityTokenization(v EnablementResourceEntitlement) {
	o.AnypointSecurityTokenization = &v
}

// GetApiCommunityManager returns the ApiCommunityManager field value if set, zero value otherwise.
func (o *Entitlements) GetApiCommunityManager() EnablementResourceEntitlement {
	if o == nil || IsNil(o.ApiCommunityManager) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.ApiCommunityManager
}

// GetApiCommunityManagerOk returns a tuple with the ApiCommunityManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApiCommunityManagerOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.ApiCommunityManager) {
		return nil, false
	}
	return o.ApiCommunityManager, true
}

// HasApiCommunityManager returns a boolean if a field has been set.
func (o *Entitlements) HasApiCommunityManager() bool {
	if o != nil && !IsNil(o.ApiCommunityManager) {
		return true
	}

	return false
}

// SetApiCommunityManager gets a reference to the given EnablementResourceEntitlement and assigns it to the ApiCommunityManager field.
func (o *Entitlements) SetApiCommunityManager(v EnablementResourceEntitlement) {
	o.ApiCommunityManager = &v
}

// GetApiMonitoring returns the ApiMonitoring field value if set, zero value otherwise.
func (o *Entitlements) GetApiMonitoring() ApiMonitoring {
	if o == nil || IsNil(o.ApiMonitoring) {
		var ret ApiMonitoring
		return ret
	}
	return *o.ApiMonitoring
}

// GetApiMonitoringOk returns a tuple with the ApiMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApiMonitoringOk() (*ApiMonitoring, bool) {
	if o == nil || IsNil(o.ApiMonitoring) {
		return nil, false
	}
	return o.ApiMonitoring, true
}

// HasApiMonitoring returns a boolean if a field has been set.
func (o *Entitlements) HasApiMonitoring() bool {
	if o != nil && !IsNil(o.ApiMonitoring) {
		return true
	}

	return false
}

// SetApiMonitoring gets a reference to the given ApiMonitoring and assigns it to the ApiMonitoring field.
func (o *Entitlements) SetApiMonitoring(v ApiMonitoring) {
	o.ApiMonitoring = &v
}

// GetApiQuery returns the ApiQuery field value if set, zero value otherwise.
func (o *Entitlements) GetApiQuery() ApiQuery {
	if o == nil || IsNil(o.ApiQuery) {
		var ret ApiQuery
		return ret
	}
	return *o.ApiQuery
}

// GetApiQueryOk returns a tuple with the ApiQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApiQueryOk() (*ApiQuery, bool) {
	if o == nil || IsNil(o.ApiQuery) {
		return nil, false
	}
	return o.ApiQuery, true
}

// HasApiQuery returns a boolean if a field has been set.
func (o *Entitlements) HasApiQuery() bool {
	if o != nil && !IsNil(o.ApiQuery) {
		return true
	}

	return false
}

// SetApiQuery gets a reference to the given ApiQuery and assigns it to the ApiQuery field.
func (o *Entitlements) SetApiQuery(v ApiQuery) {
	o.ApiQuery = &v
}

// GetApiQueryC360 returns the ApiQueryC360 field value if set, zero value otherwise.
func (o *Entitlements) GetApiQueryC360() EnablementResourceEntitlement {
	if o == nil || IsNil(o.ApiQueryC360) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.ApiQueryC360
}

// GetApiQueryC360Ok returns a tuple with the ApiQueryC360 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApiQueryC360Ok() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.ApiQueryC360) {
		return nil, false
	}
	return o.ApiQueryC360, true
}

// HasApiQueryC360 returns a boolean if a field has been set.
func (o *Entitlements) HasApiQueryC360() bool {
	if o != nil && !IsNil(o.ApiQueryC360) {
		return true
	}

	return false
}

// SetApiQueryC360 gets a reference to the given EnablementResourceEntitlement and assigns it to the ApiQueryC360 field.
func (o *Entitlements) SetApiQueryC360(v EnablementResourceEntitlement) {
	o.ApiQueryC360 = &v
}

// GetApis returns the Apis field value if set, zero value otherwise.
func (o *Entitlements) GetApis() EnablementResourceEntitlement {
	if o == nil || IsNil(o.Apis) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.Apis
}

// GetApisOk returns a tuple with the Apis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApisOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.Apis) {
		return nil, false
	}
	return o.Apis, true
}

// HasApis returns a boolean if a field has been set.
func (o *Entitlements) HasApis() bool {
	if o != nil && !IsNil(o.Apis) {
		return true
	}

	return false
}

// SetApis gets a reference to the given EnablementResourceEntitlement and assigns it to the Apis field.
func (o *Entitlements) SetApis(v EnablementResourceEntitlement) {
	o.Apis = &v
}

// GetAppViz returns the AppViz field value if set, zero value otherwise.
func (o *Entitlements) GetAppViz() bool {
	if o == nil || IsNil(o.AppViz) {
		var ret bool
		return ret
	}
	return *o.AppViz
}

// GetAppVizOk returns a tuple with the AppViz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetAppVizOk() (*bool, bool) {
	if o == nil || IsNil(o.AppViz) {
		return nil, false
	}
	return o.AppViz, true
}

// HasAppViz returns a boolean if a field has been set.
func (o *Entitlements) HasAppViz() bool {
	if o != nil && !IsNil(o.AppViz) {
		return true
	}

	return false
}

// SetAppViz gets a reference to the given bool and assigns it to the AppViz field.
func (o *Entitlements) SetAppViz(v bool) {
	o.AppViz = &v
}

// GetArmAlerts returns the ArmAlerts field value if set, zero value otherwise.
func (o *Entitlements) GetArmAlerts() bool {
	if o == nil || IsNil(o.ArmAlerts) {
		var ret bool
		return ret
	}
	return *o.ArmAlerts
}

// GetArmAlertsOk returns a tuple with the ArmAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetArmAlertsOk() (*bool, bool) {
	if o == nil || IsNil(o.ArmAlerts) {
		return nil, false
	}
	return o.ArmAlerts, true
}

// HasArmAlerts returns a boolean if a field has been set.
func (o *Entitlements) HasArmAlerts() bool {
	if o != nil && !IsNil(o.ArmAlerts) {
		return true
	}

	return false
}

// SetArmAlerts gets a reference to the given bool and assigns it to the ArmAlerts field.
func (o *Entitlements) SetArmAlerts(v bool) {
	o.ArmAlerts = &v
}

// GetAutoscaling returns the Autoscaling field value if set, zero value otherwise.
func (o *Entitlements) GetAutoscaling() bool {
	if o == nil || IsNil(o.Autoscaling) {
		var ret bool
		return ret
	}
	return *o.Autoscaling
}

// GetAutoscalingOk returns a tuple with the Autoscaling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetAutoscalingOk() (*bool, bool) {
	if o == nil || IsNil(o.Autoscaling) {
		return nil, false
	}
	return o.Autoscaling, true
}

// HasAutoscaling returns a boolean if a field has been set.
func (o *Entitlements) HasAutoscaling() bool {
	if o != nil && !IsNil(o.Autoscaling) {
		return true
	}

	return false
}

// SetAutoscaling gets a reference to the given bool and assigns it to the Autoscaling field.
func (o *Entitlements) SetAutoscaling(v bool) {
	o.Autoscaling = &v
}

// GetCam returns the Cam field value if set, zero value otherwise.
func (o *Entitlements) GetCam() EnablementResourceEntitlement {
	if o == nil || IsNil(o.Cam) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.Cam
}

// GetCamOk returns a tuple with the Cam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetCamOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.Cam) {
		return nil, false
	}
	return o.Cam, true
}

// HasCam returns a boolean if a field has been set.
func (o *Entitlements) HasCam() bool {
	if o != nil && !IsNil(o.Cam) {
		return true
	}

	return false
}

// SetCam gets a reference to the given EnablementResourceEntitlement and assigns it to the Cam field.
func (o *Entitlements) SetCam(v EnablementResourceEntitlement) {
	o.Cam = &v
}

// GetCreateEnvironments returns the CreateEnvironments field value if set, zero value otherwise.
func (o *Entitlements) GetCreateEnvironments() bool {
	if o == nil || IsNil(o.CreateEnvironments) {
		var ret bool
		return ret
	}
	return *o.CreateEnvironments
}

// GetCreateEnvironmentsOk returns a tuple with the CreateEnvironments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetCreateEnvironmentsOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateEnvironments) {
		return nil, false
	}
	return o.CreateEnvironments, true
}

// HasCreateEnvironments returns a boolean if a field has been set.
func (o *Entitlements) HasCreateEnvironments() bool {
	if o != nil && !IsNil(o.CreateEnvironments) {
		return true
	}

	return false
}

// SetCreateEnvironments gets a reference to the given bool and assigns it to the CreateEnvironments field.
func (o *Entitlements) SetCreateEnvironments(v bool) {
	o.CreateEnvironments = &v
}

// GetCreateSubOrgs returns the CreateSubOrgs field value if set, zero value otherwise.
func (o *Entitlements) GetCreateSubOrgs() bool {
	if o == nil || IsNil(o.CreateSubOrgs) {
		var ret bool
		return ret
	}
	return *o.CreateSubOrgs
}

// GetCreateSubOrgsOk returns a tuple with the CreateSubOrgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetCreateSubOrgsOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateSubOrgs) {
		return nil, false
	}
	return o.CreateSubOrgs, true
}

// HasCreateSubOrgs returns a boolean if a field has been set.
func (o *Entitlements) HasCreateSubOrgs() bool {
	if o != nil && !IsNil(o.CreateSubOrgs) {
		return true
	}

	return false
}

// SetCreateSubOrgs gets a reference to the given bool and assigns it to the CreateSubOrgs field.
func (o *Entitlements) SetCreateSubOrgs(v bool) {
	o.CreateSubOrgs = &v
}

// GetCrowd returns the Crowd field value if set, zero value otherwise.
func (o *Entitlements) GetCrowd() Crowd {
	if o == nil || IsNil(o.Crowd) {
		var ret Crowd
		return ret
	}
	return *o.Crowd
}

// GetCrowdOk returns a tuple with the Crowd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetCrowdOk() (*Crowd, bool) {
	if o == nil || IsNil(o.Crowd) {
		return nil, false
	}
	return o.Crowd, true
}

// HasCrowd returns a boolean if a field has been set.
func (o *Entitlements) HasCrowd() bool {
	if o != nil && !IsNil(o.Crowd) {
		return true
	}

	return false
}

// SetCrowd gets a reference to the given Crowd and assigns it to the Crowd field.
func (o *Entitlements) SetCrowd(v Crowd) {
	o.Crowd = &v
}

// GetCrowdSelfServiceMigration returns the CrowdSelfServiceMigration field value if set, zero value otherwise.
func (o *Entitlements) GetCrowdSelfServiceMigration() EnablementResourceEntitlement {
	if o == nil || IsNil(o.CrowdSelfServiceMigration) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.CrowdSelfServiceMigration
}

// GetCrowdSelfServiceMigrationOk returns a tuple with the CrowdSelfServiceMigration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetCrowdSelfServiceMigrationOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.CrowdSelfServiceMigration) {
		return nil, false
	}
	return o.CrowdSelfServiceMigration, true
}

// HasCrowdSelfServiceMigration returns a boolean if a field has been set.
func (o *Entitlements) HasCrowdSelfServiceMigration() bool {
	if o != nil && !IsNil(o.CrowdSelfServiceMigration) {
		return true
	}

	return false
}

// SetCrowdSelfServiceMigration gets a reference to the given EnablementResourceEntitlement and assigns it to the CrowdSelfServiceMigration field.
func (o *Entitlements) SetCrowdSelfServiceMigration(v EnablementResourceEntitlement) {
	o.CrowdSelfServiceMigration = &v
}

// GetDesignCenter returns the DesignCenter field value if set, zero value otherwise.
func (o *Entitlements) GetDesignCenter() DesignCenter {
	if o == nil || IsNil(o.DesignCenter) {
		var ret DesignCenter
		return ret
	}
	return *o.DesignCenter
}

// GetDesignCenterOk returns a tuple with the DesignCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetDesignCenterOk() (*DesignCenter, bool) {
	if o == nil || IsNil(o.DesignCenter) {
		return nil, false
	}
	return o.DesignCenter, true
}

// HasDesignCenter returns a boolean if a field has been set.
func (o *Entitlements) HasDesignCenter() bool {
	if o != nil && !IsNil(o.DesignCenter) {
		return true
	}

	return false
}

// SetDesignCenter gets a reference to the given DesignCenter and assigns it to the DesignCenter field.
func (o *Entitlements) SetDesignCenter(v DesignCenter) {
	o.DesignCenter = &v
}

// GetExchange2 returns the Exchange2 field value if set, zero value otherwise.
func (o *Entitlements) GetExchange2() EnablementResourceEntitlement {
	if o == nil || IsNil(o.Exchange2) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.Exchange2
}

// GetExchange2Ok returns a tuple with the Exchange2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetExchange2Ok() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.Exchange2) {
		return nil, false
	}
	return o.Exchange2, true
}

// HasExchange2 returns a boolean if a field has been set.
func (o *Entitlements) HasExchange2() bool {
	if o != nil && !IsNil(o.Exchange2) {
		return true
	}

	return false
}

// SetExchange2 gets a reference to the given EnablementResourceEntitlement and assigns it to the Exchange2 field.
func (o *Entitlements) SetExchange2(v EnablementResourceEntitlement) {
	o.Exchange2 = &v
}

// GetExternalIdentity returns the ExternalIdentity field value if set, zero value otherwise.
func (o *Entitlements) GetExternalIdentity() bool {
	if o == nil || IsNil(o.ExternalIdentity) {
		var ret bool
		return ret
	}
	return *o.ExternalIdentity
}

// GetExternalIdentityOk returns a tuple with the ExternalIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetExternalIdentityOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalIdentity) {
		return nil, false
	}
	return o.ExternalIdentity, true
}

// HasExternalIdentity returns a boolean if a field has been set.
func (o *Entitlements) HasExternalIdentity() bool {
	if o != nil && !IsNil(o.ExternalIdentity) {
		return true
	}

	return false
}

// SetExternalIdentity gets a reference to the given bool and assigns it to the ExternalIdentity field.
func (o *Entitlements) SetExternalIdentity(v bool) {
	o.ExternalIdentity = &v
}

// GetGateways returns the Gateways field value if set, zero value otherwise.
func (o *Entitlements) GetGateways() GatewaysEntitlement {
	if o == nil || IsNil(o.Gateways) {
		var ret GatewaysEntitlement
		return ret
	}
	return *o.Gateways
}

// GetGatewaysOk returns a tuple with the Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetGatewaysOk() (*GatewaysEntitlement, bool) {
	if o == nil || IsNil(o.Gateways) {
		return nil, false
	}
	return o.Gateways, true
}

// HasGateways returns a boolean if a field has been set.
func (o *Entitlements) HasGateways() bool {
	if o != nil && !IsNil(o.Gateways) {
		return true
	}

	return false
}

// SetGateways gets a reference to the given GatewaysEntitlement and assigns it to the Gateways field.
func (o *Entitlements) SetGateways(v GatewaysEntitlement) {
	o.Gateways = &v
}

// GetGlobalDeployment returns the GlobalDeployment field value if set, zero value otherwise.
func (o *Entitlements) GetGlobalDeployment() EnablementResourceEntitlement {
	if o == nil || IsNil(o.GlobalDeployment) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.GlobalDeployment
}

// GetGlobalDeploymentOk returns a tuple with the GlobalDeployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetGlobalDeploymentOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.GlobalDeployment) {
		return nil, false
	}
	return o.GlobalDeployment, true
}

// HasGlobalDeployment returns a boolean if a field has been set.
func (o *Entitlements) HasGlobalDeployment() bool {
	if o != nil && !IsNil(o.GlobalDeployment) {
		return true
	}

	return false
}

// SetGlobalDeployment gets a reference to the given EnablementResourceEntitlement and assigns it to the GlobalDeployment field.
func (o *Entitlements) SetGlobalDeployment(v EnablementResourceEntitlement) {
	o.GlobalDeployment = &v
}

// GetHybrid returns the Hybrid field value if set, zero value otherwise.
func (o *Entitlements) GetHybrid() EnablementResourceEntitlement {
	if o == nil || IsNil(o.Hybrid) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.Hybrid
}

// GetHybridOk returns a tuple with the Hybrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetHybridOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.Hybrid) {
		return nil, false
	}
	return o.Hybrid, true
}

// HasHybrid returns a boolean if a field has been set.
func (o *Entitlements) HasHybrid() bool {
	if o != nil && !IsNil(o.Hybrid) {
		return true
	}

	return false
}

// SetHybrid gets a reference to the given EnablementResourceEntitlement and assigns it to the Hybrid field.
func (o *Entitlements) SetHybrid(v EnablementResourceEntitlement) {
	o.Hybrid = &v
}

// GetHybridAutoDiscoverProperties returns the HybridAutoDiscoverProperties field value if set, zero value otherwise.
func (o *Entitlements) GetHybridAutoDiscoverProperties() bool {
	if o == nil || IsNil(o.HybridAutoDiscoverProperties) {
		var ret bool
		return ret
	}
	return *o.HybridAutoDiscoverProperties
}

// GetHybridAutoDiscoverPropertiesOk returns a tuple with the HybridAutoDiscoverProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetHybridAutoDiscoverPropertiesOk() (*bool, bool) {
	if o == nil || IsNil(o.HybridAutoDiscoverProperties) {
		return nil, false
	}
	return o.HybridAutoDiscoverProperties, true
}

// HasHybridAutoDiscoverProperties returns a boolean if a field has been set.
func (o *Entitlements) HasHybridAutoDiscoverProperties() bool {
	if o != nil && !IsNil(o.HybridAutoDiscoverProperties) {
		return true
	}

	return false
}

// SetHybridAutoDiscoverProperties gets a reference to the given bool and assigns it to the HybridAutoDiscoverProperties field.
func (o *Entitlements) SetHybridAutoDiscoverProperties(v bool) {
	o.HybridAutoDiscoverProperties = &v
}

// GetHybridInsight returns the HybridInsight field value if set, zero value otherwise.
func (o *Entitlements) GetHybridInsight() bool {
	if o == nil || IsNil(o.HybridInsight) {
		var ret bool
		return ret
	}
	return *o.HybridInsight
}

// GetHybridInsightOk returns a tuple with the HybridInsight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetHybridInsightOk() (*bool, bool) {
	if o == nil || IsNil(o.HybridInsight) {
		return nil, false
	}
	return o.HybridInsight, true
}

// HasHybridInsight returns a boolean if a field has been set.
func (o *Entitlements) HasHybridInsight() bool {
	if o != nil && !IsNil(o.HybridInsight) {
		return true
	}

	return false
}

// SetHybridInsight gets a reference to the given bool and assigns it to the HybridInsight field.
func (o *Entitlements) SetHybridInsight(v bool) {
	o.HybridInsight = &v
}

// GetKpiDashboard returns the KpiDashboard field value if set, zero value otherwise.
func (o *Entitlements) GetKpiDashboard() EnablementResourceEntitlement {
	if o == nil || IsNil(o.KpiDashboard) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.KpiDashboard
}

// GetKpiDashboardOk returns a tuple with the KpiDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetKpiDashboardOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.KpiDashboard) {
		return nil, false
	}
	return o.KpiDashboard, true
}

// HasKpiDashboard returns a boolean if a field has been set.
func (o *Entitlements) HasKpiDashboard() bool {
	if o != nil && !IsNil(o.KpiDashboard) {
		return true
	}

	return false
}

// SetKpiDashboard gets a reference to the given EnablementResourceEntitlement and assigns it to the KpiDashboard field.
func (o *Entitlements) SetKpiDashboard(v EnablementResourceEntitlement) {
	o.KpiDashboard = &v
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *Entitlements) GetLoadBalancer() LoadBalancerEntitlement {
	if o == nil || IsNil(o.LoadBalancer) {
		var ret LoadBalancerEntitlement
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetLoadBalancerOk() (*LoadBalancerEntitlement, bool) {
	if o == nil || IsNil(o.LoadBalancer) {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *Entitlements) HasLoadBalancer() bool {
	if o != nil && !IsNil(o.LoadBalancer) {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancerEntitlement and assigns it to the LoadBalancer field.
func (o *Entitlements) SetLoadBalancer(v LoadBalancerEntitlement) {
	o.LoadBalancer = &v
}

// GetMessaging returns the Messaging field value if set, zero value otherwise.
func (o *Entitlements) GetMessaging() MessagingEntitlement {
	if o == nil || IsNil(o.Messaging) {
		var ret MessagingEntitlement
		return ret
	}
	return *o.Messaging
}

// GetMessagingOk returns a tuple with the Messaging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetMessagingOk() (*MessagingEntitlement, bool) {
	if o == nil || IsNil(o.Messaging) {
		return nil, false
	}
	return o.Messaging, true
}

// HasMessaging returns a boolean if a field has been set.
func (o *Entitlements) HasMessaging() bool {
	if o != nil && !IsNil(o.Messaging) {
		return true
	}

	return false
}

// SetMessaging gets a reference to the given MessagingEntitlement and assigns it to the Messaging field.
func (o *Entitlements) SetMessaging(v MessagingEntitlement) {
	o.Messaging = &v
}

// GetMonitoringCenter returns the MonitoringCenter field value if set, zero value otherwise.
func (o *Entitlements) GetMonitoringCenter() MonitoringCenterEntitlement {
	if o == nil || IsNil(o.MonitoringCenter) {
		var ret MonitoringCenterEntitlement
		return ret
	}
	return *o.MonitoringCenter
}

// GetMonitoringCenterOk returns a tuple with the MonitoringCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetMonitoringCenterOk() (*MonitoringCenterEntitlement, bool) {
	if o == nil || IsNil(o.MonitoringCenter) {
		return nil, false
	}
	return o.MonitoringCenter, true
}

// HasMonitoringCenter returns a boolean if a field has been set.
func (o *Entitlements) HasMonitoringCenter() bool {
	if o != nil && !IsNil(o.MonitoringCenter) {
		return true
	}

	return false
}

// SetMonitoringCenter gets a reference to the given MonitoringCenterEntitlement and assigns it to the MonitoringCenter field.
func (o *Entitlements) SetMonitoringCenter(v MonitoringCenterEntitlement) {
	o.MonitoringCenter = &v
}

// GetMqAdvancedFeatures returns the MqAdvancedFeatures field value if set, zero value otherwise.
func (o *Entitlements) GetMqAdvancedFeatures() EnablementResourceEntitlement {
	if o == nil || IsNil(o.MqAdvancedFeatures) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.MqAdvancedFeatures
}

// GetMqAdvancedFeaturesOk returns a tuple with the MqAdvancedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetMqAdvancedFeaturesOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.MqAdvancedFeatures) {
		return nil, false
	}
	return o.MqAdvancedFeatures, true
}

// HasMqAdvancedFeatures returns a boolean if a field has been set.
func (o *Entitlements) HasMqAdvancedFeatures() bool {
	if o != nil && !IsNil(o.MqAdvancedFeatures) {
		return true
	}

	return false
}

// SetMqAdvancedFeatures gets a reference to the given EnablementResourceEntitlement and assigns it to the MqAdvancedFeatures field.
func (o *Entitlements) SetMqAdvancedFeatures(v EnablementResourceEntitlement) {
	o.MqAdvancedFeatures = &v
}

// GetMqMessages returns the MqMessages field value if set, zero value otherwise.
func (o *Entitlements) GetMqMessages() AddOnEntitlement {
	if o == nil || IsNil(o.MqMessages) {
		var ret AddOnEntitlement
		return ret
	}
	return *o.MqMessages
}

// GetMqMessagesOk returns a tuple with the MqMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetMqMessagesOk() (*AddOnEntitlement, bool) {
	if o == nil || IsNil(o.MqMessages) {
		return nil, false
	}
	return o.MqMessages, true
}

// HasMqMessages returns a boolean if a field has been set.
func (o *Entitlements) HasMqMessages() bool {
	if o != nil && !IsNil(o.MqMessages) {
		return true
	}

	return false
}

// SetMqMessages gets a reference to the given AddOnEntitlement and assigns it to the MqMessages field.
func (o *Entitlements) SetMqMessages(v AddOnEntitlement) {
	o.MqMessages = &v
}

// GetMqRequests returns the MqRequests field value if set, zero value otherwise.
func (o *Entitlements) GetMqRequests() AddOnEntitlement {
	if o == nil || IsNil(o.MqRequests) {
		var ret AddOnEntitlement
		return ret
	}
	return *o.MqRequests
}

// GetMqRequestsOk returns a tuple with the MqRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetMqRequestsOk() (*AddOnEntitlement, bool) {
	if o == nil || IsNil(o.MqRequests) {
		return nil, false
	}
	return o.MqRequests, true
}

// HasMqRequests returns a boolean if a field has been set.
func (o *Entitlements) HasMqRequests() bool {
	if o != nil && !IsNil(o.MqRequests) {
		return true
	}

	return false
}

// SetMqRequests gets a reference to the given AddOnEntitlement and assigns it to the MqRequests field.
func (o *Entitlements) SetMqRequests(v AddOnEntitlement) {
	o.MqRequests = &v
}

// GetObjectStoreKeys returns the ObjectStoreKeys field value if set, zero value otherwise.
func (o *Entitlements) GetObjectStoreKeys() AddOnEntitlement {
	if o == nil || IsNil(o.ObjectStoreKeys) {
		var ret AddOnEntitlement
		return ret
	}
	return *o.ObjectStoreKeys
}

// GetObjectStoreKeysOk returns a tuple with the ObjectStoreKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetObjectStoreKeysOk() (*AddOnEntitlement, bool) {
	if o == nil || IsNil(o.ObjectStoreKeys) {
		return nil, false
	}
	return o.ObjectStoreKeys, true
}

// HasObjectStoreKeys returns a boolean if a field has been set.
func (o *Entitlements) HasObjectStoreKeys() bool {
	if o != nil && !IsNil(o.ObjectStoreKeys) {
		return true
	}

	return false
}

// SetObjectStoreKeys gets a reference to the given AddOnEntitlement and assigns it to the ObjectStoreKeys field.
func (o *Entitlements) SetObjectStoreKeys(v AddOnEntitlement) {
	o.ObjectStoreKeys = &v
}

// GetObjectStoreRequestUnits returns the ObjectStoreRequestUnits field value if set, zero value otherwise.
func (o *Entitlements) GetObjectStoreRequestUnits() AddOnEntitlement {
	if o == nil || IsNil(o.ObjectStoreRequestUnits) {
		var ret AddOnEntitlement
		return ret
	}
	return *o.ObjectStoreRequestUnits
}

// GetObjectStoreRequestUnitsOk returns a tuple with the ObjectStoreRequestUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetObjectStoreRequestUnitsOk() (*AddOnEntitlement, bool) {
	if o == nil || IsNil(o.ObjectStoreRequestUnits) {
		return nil, false
	}
	return o.ObjectStoreRequestUnits, true
}

// HasObjectStoreRequestUnits returns a boolean if a field has been set.
func (o *Entitlements) HasObjectStoreRequestUnits() bool {
	if o != nil && !IsNil(o.ObjectStoreRequestUnits) {
		return true
	}

	return false
}

// SetObjectStoreRequestUnits gets a reference to the given AddOnEntitlement and assigns it to the ObjectStoreRequestUnits field.
func (o *Entitlements) SetObjectStoreRequestUnits(v AddOnEntitlement) {
	o.ObjectStoreRequestUnits = &v
}

// GetPartnersProduction returns the PartnersProduction field value if set, zero value otherwise.
func (o *Entitlements) GetPartnersProduction() PartnersProductionEntitlement {
	if o == nil || IsNil(o.PartnersProduction) {
		var ret PartnersProductionEntitlement
		return ret
	}
	return *o.PartnersProduction
}

// GetPartnersProductionOk returns a tuple with the PartnersProduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetPartnersProductionOk() (*PartnersProductionEntitlement, bool) {
	if o == nil || IsNil(o.PartnersProduction) {
		return nil, false
	}
	return o.PartnersProduction, true
}

// HasPartnersProduction returns a boolean if a field has been set.
func (o *Entitlements) HasPartnersProduction() bool {
	if o != nil && !IsNil(o.PartnersProduction) {
		return true
	}

	return false
}

// SetPartnersProduction gets a reference to the given PartnersProductionEntitlement and assigns it to the PartnersProduction field.
func (o *Entitlements) SetPartnersProduction(v PartnersProductionEntitlement) {
	o.PartnersProduction = &v
}

// GetPartnersSandbox returns the PartnersSandbox field value if set, zero value otherwise.
func (o *Entitlements) GetPartnersSandbox() PartnersSandboxEntitlement {
	if o == nil || IsNil(o.PartnersSandbox) {
		var ret PartnersSandboxEntitlement
		return ret
	}
	return *o.PartnersSandbox
}

// GetPartnersSandboxOk returns a tuple with the PartnersSandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetPartnersSandboxOk() (*PartnersSandboxEntitlement, bool) {
	if o == nil || IsNil(o.PartnersSandbox) {
		return nil, false
	}
	return o.PartnersSandbox, true
}

// HasPartnersSandbox returns a boolean if a field has been set.
func (o *Entitlements) HasPartnersSandbox() bool {
	if o != nil && !IsNil(o.PartnersSandbox) {
		return true
	}

	return false
}

// SetPartnersSandbox gets a reference to the given PartnersSandboxEntitlement and assigns it to the PartnersSandbox field.
func (o *Entitlements) SetPartnersSandbox(v PartnersSandboxEntitlement) {
	o.PartnersSandbox = &v
}

// GetPcf returns the Pcf field value if set, zero value otherwise.
func (o *Entitlements) GetPcf() bool {
	if o == nil || IsNil(o.Pcf) {
		var ret bool
		return ret
	}
	return *o.Pcf
}

// GetPcfOk returns a tuple with the Pcf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetPcfOk() (*bool, bool) {
	if o == nil || IsNil(o.Pcf) {
		return nil, false
	}
	return o.Pcf, true
}

// HasPcf returns a boolean if a field has been set.
func (o *Entitlements) HasPcf() bool {
	if o != nil && !IsNil(o.Pcf) {
		return true
	}

	return false
}

// SetPcf gets a reference to the given bool and assigns it to the Pcf field.
func (o *Entitlements) SetPcf(v bool) {
	o.Pcf = &v
}

// GetRuntimeFabric returns the RuntimeFabric field value if set, zero value otherwise.
func (o *Entitlements) GetRuntimeFabric() bool {
	if o == nil || IsNil(o.RuntimeFabric) {
		var ret bool
		return ret
	}
	return *o.RuntimeFabric
}

// GetRuntimeFabricOk returns a tuple with the RuntimeFabric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetRuntimeFabricOk() (*bool, bool) {
	if o == nil || IsNil(o.RuntimeFabric) {
		return nil, false
	}
	return o.RuntimeFabric, true
}

// HasRuntimeFabric returns a boolean if a field has been set.
func (o *Entitlements) HasRuntimeFabric() bool {
	if o != nil && !IsNil(o.RuntimeFabric) {
		return true
	}

	return false
}

// SetRuntimeFabric gets a reference to the given bool and assigns it to the RuntimeFabric field.
func (o *Entitlements) SetRuntimeFabric(v bool) {
	o.RuntimeFabric = &v
}

// GetRuntimeFabricCloud returns the RuntimeFabricCloud field value if set, zero value otherwise.
func (o *Entitlements) GetRuntimeFabricCloud() EnablementResourceEntitlement {
	if o == nil || IsNil(o.RuntimeFabricCloud) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.RuntimeFabricCloud
}

// GetRuntimeFabricCloudOk returns a tuple with the RuntimeFabricCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetRuntimeFabricCloudOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.RuntimeFabricCloud) {
		return nil, false
	}
	return o.RuntimeFabricCloud, true
}

// HasRuntimeFabricCloud returns a boolean if a field has been set.
func (o *Entitlements) HasRuntimeFabricCloud() bool {
	if o != nil && !IsNil(o.RuntimeFabricCloud) {
		return true
	}

	return false
}

// SetRuntimeFabricCloud gets a reference to the given EnablementResourceEntitlement and assigns it to the RuntimeFabricCloud field.
func (o *Entitlements) SetRuntimeFabricCloud(v EnablementResourceEntitlement) {
	o.RuntimeFabricCloud = &v
}

// GetServiceMesh returns the ServiceMesh field value if set, zero value otherwise.
func (o *Entitlements) GetServiceMesh() EnablementResourceEntitlement {
	if o == nil || IsNil(o.ServiceMesh) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.ServiceMesh
}

// GetServiceMeshOk returns a tuple with the ServiceMesh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetServiceMeshOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.ServiceMesh) {
		return nil, false
	}
	return o.ServiceMesh, true
}

// HasServiceMesh returns a boolean if a field has been set.
func (o *Entitlements) HasServiceMesh() bool {
	if o != nil && !IsNil(o.ServiceMesh) {
		return true
	}

	return false
}

// SetServiceMesh gets a reference to the given EnablementResourceEntitlement and assigns it to the ServiceMesh field.
func (o *Entitlements) SetServiceMesh(v EnablementResourceEntitlement) {
	o.ServiceMesh = &v
}

// GetStaticIps returns the StaticIps field value if set, zero value otherwise.
func (o *Entitlements) GetStaticIps() StaticIpsEntitlement {
	if o == nil || IsNil(o.StaticIps) {
		var ret StaticIpsEntitlement
		return ret
	}
	return *o.StaticIps
}

// GetStaticIpsOk returns a tuple with the StaticIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetStaticIpsOk() (*StaticIpsEntitlement, bool) {
	if o == nil || IsNil(o.StaticIps) {
		return nil, false
	}
	return o.StaticIps, true
}

// HasStaticIps returns a boolean if a field has been set.
func (o *Entitlements) HasStaticIps() bool {
	if o != nil && !IsNil(o.StaticIps) {
		return true
	}

	return false
}

// SetStaticIps gets a reference to the given StaticIpsEntitlement and assigns it to the StaticIps field.
func (o *Entitlements) SetStaticIps(v StaticIpsEntitlement) {
	o.StaticIps = &v
}

// GetTradingPartnersProduction returns the TradingPartnersProduction field value if set, zero value otherwise.
func (o *Entitlements) GetTradingPartnersProduction() TradingPartnersProductionEntitlement {
	if o == nil || IsNil(o.TradingPartnersProduction) {
		var ret TradingPartnersProductionEntitlement
		return ret
	}
	return *o.TradingPartnersProduction
}

// GetTradingPartnersProductionOk returns a tuple with the TradingPartnersProduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetTradingPartnersProductionOk() (*TradingPartnersProductionEntitlement, bool) {
	if o == nil || IsNil(o.TradingPartnersProduction) {
		return nil, false
	}
	return o.TradingPartnersProduction, true
}

// HasTradingPartnersProduction returns a boolean if a field has been set.
func (o *Entitlements) HasTradingPartnersProduction() bool {
	if o != nil && !IsNil(o.TradingPartnersProduction) {
		return true
	}

	return false
}

// SetTradingPartnersProduction gets a reference to the given TradingPartnersProductionEntitlement and assigns it to the TradingPartnersProduction field.
func (o *Entitlements) SetTradingPartnersProduction(v TradingPartnersProductionEntitlement) {
	o.TradingPartnersProduction = &v
}

// GetTradingPartnersSandbox returns the TradingPartnersSandbox field value if set, zero value otherwise.
func (o *Entitlements) GetTradingPartnersSandbox() TradingPartnersSandboxEntitlement {
	if o == nil || IsNil(o.TradingPartnersSandbox) {
		var ret TradingPartnersSandboxEntitlement
		return ret
	}
	return *o.TradingPartnersSandbox
}

// GetTradingPartnersSandboxOk returns a tuple with the TradingPartnersSandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetTradingPartnersSandboxOk() (*TradingPartnersSandboxEntitlement, bool) {
	if o == nil || IsNil(o.TradingPartnersSandbox) {
		return nil, false
	}
	return o.TradingPartnersSandbox, true
}

// HasTradingPartnersSandbox returns a boolean if a field has been set.
func (o *Entitlements) HasTradingPartnersSandbox() bool {
	if o != nil && !IsNil(o.TradingPartnersSandbox) {
		return true
	}

	return false
}

// SetTradingPartnersSandbox gets a reference to the given TradingPartnersSandboxEntitlement and assigns it to the TradingPartnersSandbox field.
func (o *Entitlements) SetTradingPartnersSandbox(v TradingPartnersSandboxEntitlement) {
	o.TradingPartnersSandbox = &v
}

// GetVCoresDesign returns the VCoresDesign field value if set, zero value otherwise.
func (o *Entitlements) GetVCoresDesign() VCoresDesignEntitlement {
	if o == nil || IsNil(o.VCoresDesign) {
		var ret VCoresDesignEntitlement
		return ret
	}
	return *o.VCoresDesign
}

// GetVCoresDesignOk returns a tuple with the VCoresDesign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetVCoresDesignOk() (*VCoresDesignEntitlement, bool) {
	if o == nil || IsNil(o.VCoresDesign) {
		return nil, false
	}
	return o.VCoresDesign, true
}

// HasVCoresDesign returns a boolean if a field has been set.
func (o *Entitlements) HasVCoresDesign() bool {
	if o != nil && !IsNil(o.VCoresDesign) {
		return true
	}

	return false
}

// SetVCoresDesign gets a reference to the given VCoresDesignEntitlement and assigns it to the VCoresDesign field.
func (o *Entitlements) SetVCoresDesign(v VCoresDesignEntitlement) {
	o.VCoresDesign = &v
}

// GetVCoresProduction returns the VCoresProduction field value if set, zero value otherwise.
func (o *Entitlements) GetVCoresProduction() VCoresProductionEntitlement {
	if o == nil || IsNil(o.VCoresProduction) {
		var ret VCoresProductionEntitlement
		return ret
	}
	return *o.VCoresProduction
}

// GetVCoresProductionOk returns a tuple with the VCoresProduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetVCoresProductionOk() (*VCoresProductionEntitlement, bool) {
	if o == nil || IsNil(o.VCoresProduction) {
		return nil, false
	}
	return o.VCoresProduction, true
}

// HasVCoresProduction returns a boolean if a field has been set.
func (o *Entitlements) HasVCoresProduction() bool {
	if o != nil && !IsNil(o.VCoresProduction) {
		return true
	}

	return false
}

// SetVCoresProduction gets a reference to the given VCoresProductionEntitlement and assigns it to the VCoresProduction field.
func (o *Entitlements) SetVCoresProduction(v VCoresProductionEntitlement) {
	o.VCoresProduction = &v
}

// GetVCoresSandbox returns the VCoresSandbox field value if set, zero value otherwise.
func (o *Entitlements) GetVCoresSandbox() VCoresSandboxEntitlement {
	if o == nil || IsNil(o.VCoresSandbox) {
		var ret VCoresSandboxEntitlement
		return ret
	}
	return *o.VCoresSandbox
}

// GetVCoresSandboxOk returns a tuple with the VCoresSandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetVCoresSandboxOk() (*VCoresSandboxEntitlement, bool) {
	if o == nil || IsNil(o.VCoresSandbox) {
		return nil, false
	}
	return o.VCoresSandbox, true
}

// HasVCoresSandbox returns a boolean if a field has been set.
func (o *Entitlements) HasVCoresSandbox() bool {
	if o != nil && !IsNil(o.VCoresSandbox) {
		return true
	}

	return false
}

// SetVCoresSandbox gets a reference to the given VCoresSandboxEntitlement and assigns it to the VCoresSandbox field.
func (o *Entitlements) SetVCoresSandbox(v VCoresSandboxEntitlement) {
	o.VCoresSandbox = &v
}

// GetVpcs returns the Vpcs field value if set, zero value otherwise.
func (o *Entitlements) GetVpcs() VpcsEntitlement {
	if o == nil || IsNil(o.Vpcs) {
		var ret VpcsEntitlement
		return ret
	}
	return *o.Vpcs
}

// GetVpcsOk returns a tuple with the Vpcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetVpcsOk() (*VpcsEntitlement, bool) {
	if o == nil || IsNil(o.Vpcs) {
		return nil, false
	}
	return o.Vpcs, true
}

// HasVpcs returns a boolean if a field has been set.
func (o *Entitlements) HasVpcs() bool {
	if o != nil && !IsNil(o.Vpcs) {
		return true
	}

	return false
}

// SetVpcs gets a reference to the given VpcsEntitlement and assigns it to the Vpcs field.
func (o *Entitlements) SetVpcs(v VpcsEntitlement) {
	o.Vpcs = &v
}

// GetVpns returns the Vpns field value if set, zero value otherwise.
func (o *Entitlements) GetVpns() VpnsEntitlement {
	if o == nil || IsNil(o.Vpns) {
		var ret VpnsEntitlement
		return ret
	}
	return *o.Vpns
}

// GetVpnsOk returns a tuple with the Vpns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetVpnsOk() (*VpnsEntitlement, bool) {
	if o == nil || IsNil(o.Vpns) {
		return nil, false
	}
	return o.Vpns, true
}

// HasVpns returns a boolean if a field has been set.
func (o *Entitlements) HasVpns() bool {
	if o != nil && !IsNil(o.Vpns) {
		return true
	}

	return false
}

// SetVpns gets a reference to the given VpnsEntitlement and assigns it to the Vpns field.
func (o *Entitlements) SetVpns(v VpnsEntitlement) {
	o.Vpns = &v
}

// GetWorkerClouds returns the WorkerClouds field value if set, zero value otherwise.
func (o *Entitlements) GetWorkerClouds() WorkerCloudsEntitlement {
	if o == nil || IsNil(o.WorkerClouds) {
		var ret WorkerCloudsEntitlement
		return ret
	}
	return *o.WorkerClouds
}

// GetWorkerCloudsOk returns a tuple with the WorkerClouds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetWorkerCloudsOk() (*WorkerCloudsEntitlement, bool) {
	if o == nil || IsNil(o.WorkerClouds) {
		return nil, false
	}
	return o.WorkerClouds, true
}

// HasWorkerClouds returns a boolean if a field has been set.
func (o *Entitlements) HasWorkerClouds() bool {
	if o != nil && !IsNil(o.WorkerClouds) {
		return true
	}

	return false
}

// SetWorkerClouds gets a reference to the given WorkerCloudsEntitlement and assigns it to the WorkerClouds field.
func (o *Entitlements) SetWorkerClouds(v WorkerCloudsEntitlement) {
	o.WorkerClouds = &v
}

// GetWorkerLoggingOverride returns the WorkerLoggingOverride field value if set, zero value otherwise.
func (o *Entitlements) GetWorkerLoggingOverride() EnablementResourceEntitlement {
	if o == nil || IsNil(o.WorkerLoggingOverride) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.WorkerLoggingOverride
}

// GetWorkerLoggingOverrideOk returns a tuple with the WorkerLoggingOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetWorkerLoggingOverrideOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.WorkerLoggingOverride) {
		return nil, false
	}
	return o.WorkerLoggingOverride, true
}

// HasWorkerLoggingOverride returns a boolean if a field has been set.
func (o *Entitlements) HasWorkerLoggingOverride() bool {
	if o != nil && !IsNil(o.WorkerLoggingOverride) {
		return true
	}

	return false
}

// SetWorkerLoggingOverride gets a reference to the given EnablementResourceEntitlement and assigns it to the WorkerLoggingOverride field.
func (o *Entitlements) SetWorkerLoggingOverride(v EnablementResourceEntitlement) {
	o.WorkerLoggingOverride = &v
}

// GetMuleDxWebIde returns the MuleDxWebIde field value if set, zero value otherwise.
func (o *Entitlements) GetMuleDxWebIde() EnablementResourceEntitlement {
	if o == nil || IsNil(o.MuleDxWebIde) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.MuleDxWebIde
}

// GetMuleDxWebIdeOk returns a tuple with the MuleDxWebIde field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetMuleDxWebIdeOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.MuleDxWebIde) {
		return nil, false
	}
	return o.MuleDxWebIde, true
}

// HasMuleDxWebIde returns a boolean if a field has been set.
func (o *Entitlements) HasMuleDxWebIde() bool {
	if o != nil && !IsNil(o.MuleDxWebIde) {
		return true
	}

	return false
}

// SetMuleDxWebIde gets a reference to the given EnablementResourceEntitlement and assigns it to the MuleDxWebIde field.
func (o *Entitlements) SetMuleDxWebIde(v EnablementResourceEntitlement) {
	o.MuleDxWebIde = &v
}

// GetMuleDxGenAI returns the MuleDxGenAI field value if set, zero value otherwise.
func (o *Entitlements) GetMuleDxGenAI() EnablementResourceEntitlement {
	if o == nil || IsNil(o.MuleDxGenAI) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.MuleDxGenAI
}

// GetMuleDxGenAIOk returns a tuple with the MuleDxGenAI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetMuleDxGenAIOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.MuleDxGenAI) {
		return nil, false
	}
	return o.MuleDxGenAI, true
}

// HasMuleDxGenAI returns a boolean if a field has been set.
func (o *Entitlements) HasMuleDxGenAI() bool {
	if o != nil && !IsNil(o.MuleDxGenAI) {
		return true
	}

	return false
}

// SetMuleDxGenAI gets a reference to the given EnablementResourceEntitlement and assigns it to the MuleDxGenAI field.
func (o *Entitlements) SetMuleDxGenAI(v EnablementResourceEntitlement) {
	o.MuleDxGenAI = &v
}

// GetMuleDxEDA returns the MuleDxEDA field value if set, zero value otherwise.
func (o *Entitlements) GetMuleDxEDA() EnablementResourceEntitlement {
	if o == nil || IsNil(o.MuleDxEDA) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.MuleDxEDA
}

// GetMuleDxEDAOk returns a tuple with the MuleDxEDA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetMuleDxEDAOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.MuleDxEDA) {
		return nil, false
	}
	return o.MuleDxEDA, true
}

// HasMuleDxEDA returns a boolean if a field has been set.
func (o *Entitlements) HasMuleDxEDA() bool {
	if o != nil && !IsNil(o.MuleDxEDA) {
		return true
	}

	return false
}

// SetMuleDxEDA gets a reference to the given EnablementResourceEntitlement and assigns it to the MuleDxEDA field.
func (o *Entitlements) SetMuleDxEDA(v EnablementResourceEntitlement) {
	o.MuleDxEDA = &v
}

// GetHighAvailability returns the HighAvailability field value if set, zero value otherwise.
func (o *Entitlements) GetHighAvailability() HighAvailability {
	if o == nil || IsNil(o.HighAvailability) {
		var ret HighAvailability
		return ret
	}
	return *o.HighAvailability
}

// GetHighAvailabilityOk returns a tuple with the HighAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetHighAvailabilityOk() (*HighAvailability, bool) {
	if o == nil || IsNil(o.HighAvailability) {
		return nil, false
	}
	return o.HighAvailability, true
}

// HasHighAvailability returns a boolean if a field has been set.
func (o *Entitlements) HasHighAvailability() bool {
	if o != nil && !IsNil(o.HighAvailability) {
		return true
	}

	return false
}

// SetHighAvailability gets a reference to the given HighAvailability and assigns it to the HighAvailability field.
func (o *Entitlements) SetHighAvailability(v HighAvailability) {
	o.HighAvailability = &v
}

// GetCloudhub1 returns the Cloudhub1 field value if set, zero value otherwise.
func (o *Entitlements) GetCloudhub1() EnablementResourceEntitlement {
	if o == nil || IsNil(o.Cloudhub1) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.Cloudhub1
}

// GetCloudhub1Ok returns a tuple with the Cloudhub1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetCloudhub1Ok() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.Cloudhub1) {
		return nil, false
	}
	return o.Cloudhub1, true
}

// HasCloudhub1 returns a boolean if a field has been set.
func (o *Entitlements) HasCloudhub1() bool {
	if o != nil && !IsNil(o.Cloudhub1) {
		return true
	}

	return false
}

// SetCloudhub1 gets a reference to the given EnablementResourceEntitlement and assigns it to the Cloudhub1 field.
func (o *Entitlements) SetCloudhub1(v EnablementResourceEntitlement) {
	o.Cloudhub1 = &v
}

// GetApiGovernance returns the ApiGovernance field value if set, zero value otherwise.
func (o *Entitlements) GetApiGovernance() ApiGovernance {
	if o == nil || IsNil(o.ApiGovernance) {
		var ret ApiGovernance
		return ret
	}
	return *o.ApiGovernance
}

// GetApiGovernanceOk returns a tuple with the ApiGovernance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApiGovernanceOk() (*ApiGovernance, bool) {
	if o == nil || IsNil(o.ApiGovernance) {
		return nil, false
	}
	return o.ApiGovernance, true
}

// HasApiGovernance returns a boolean if a field has been set.
func (o *Entitlements) HasApiGovernance() bool {
	if o != nil && !IsNil(o.ApiGovernance) {
		return true
	}

	return false
}

// SetApiGovernance gets a reference to the given ApiGovernance and assigns it to the ApiGovernance field.
func (o *Entitlements) SetApiGovernance(v ApiGovernance) {
	o.ApiGovernance = &v
}

// GetApiGovernanceDomain returns the ApiGovernanceDomain field value if set, zero value otherwise.
func (o *Entitlements) GetApiGovernanceDomain() ApiGovernanceDomain {
	if o == nil || IsNil(o.ApiGovernanceDomain) {
		var ret ApiGovernanceDomain
		return ret
	}
	return *o.ApiGovernanceDomain
}

// GetApiGovernanceDomainOk returns a tuple with the ApiGovernanceDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApiGovernanceDomainOk() (*ApiGovernanceDomain, bool) {
	if o == nil || IsNil(o.ApiGovernanceDomain) {
		return nil, false
	}
	return o.ApiGovernanceDomain, true
}

// HasApiGovernanceDomain returns a boolean if a field has been set.
func (o *Entitlements) HasApiGovernanceDomain() bool {
	if o != nil && !IsNil(o.ApiGovernanceDomain) {
		return true
	}

	return false
}

// SetApiGovernanceDomain gets a reference to the given ApiGovernanceDomain and assigns it to the ApiGovernanceDomain field.
func (o *Entitlements) SetApiGovernanceDomain(v ApiGovernanceDomain) {
	o.ApiGovernanceDomain = &v
}

// GetApiCatalog returns the ApiCatalog field value if set, zero value otherwise.
func (o *Entitlements) GetApiCatalog() EnablementResourceEntitlement {
	if o == nil || IsNil(o.ApiCatalog) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.ApiCatalog
}

// GetApiCatalogOk returns a tuple with the ApiCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApiCatalogOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.ApiCatalog) {
		return nil, false
	}
	return o.ApiCatalog, true
}

// HasApiCatalog returns a boolean if a field has been set.
func (o *Entitlements) HasApiCatalog() bool {
	if o != nil && !IsNil(o.ApiCatalog) {
		return true
	}

	return false
}

// SetApiCatalog gets a reference to the given EnablementResourceEntitlement and assigns it to the ApiCatalog field.
func (o *Entitlements) SetApiCatalog(v EnablementResourceEntitlement) {
	o.ApiCatalog = &v
}

// GetApiManager returns the ApiManager field value if set, zero value otherwise.
func (o *Entitlements) GetApiManager() ApiManagerEntitlement {
	if o == nil || IsNil(o.ApiManager) {
		var ret ApiManagerEntitlement
		return ret
	}
	return *o.ApiManager
}

// GetApiManagerOk returns a tuple with the ApiManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetApiManagerOk() (*ApiManagerEntitlement, bool) {
	if o == nil || IsNil(o.ApiManager) {
		return nil, false
	}
	return o.ApiManager, true
}

// HasApiManager returns a boolean if a field has been set.
func (o *Entitlements) HasApiManager() bool {
	if o != nil && !IsNil(o.ApiManager) {
		return true
	}

	return false
}

// SetApiManager gets a reference to the given ApiManagerEntitlement and assigns it to the ApiManager field.
func (o *Entitlements) SetApiManager(v ApiManagerEntitlement) {
	o.ApiManager = &v
}

// GetComposer returns the Composer field value if set, zero value otherwise.
func (o *Entitlements) GetComposer() ComposerEntitlement {
	if o == nil || IsNil(o.Composer) {
		var ret ComposerEntitlement
		return ret
	}
	return *o.Composer
}

// GetComposerOk returns a tuple with the Composer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetComposerOk() (*ComposerEntitlement, bool) {
	if o == nil || IsNil(o.Composer) {
		return nil, false
	}
	return o.Composer, true
}

// HasComposer returns a boolean if a field has been set.
func (o *Entitlements) HasComposer() bool {
	if o != nil && !IsNil(o.Composer) {
		return true
	}

	return false
}

// SetComposer gets a reference to the given ComposerEntitlement and assigns it to the Composer field.
func (o *Entitlements) SetComposer(v ComposerEntitlement) {
	o.Composer = &v
}

// GetRpa returns the Rpa field value if set, zero value otherwise.
func (o *Entitlements) GetRpa() RpaEntitlement {
	if o == nil || IsNil(o.Rpa) {
		var ret RpaEntitlement
		return ret
	}
	return *o.Rpa
}

// GetRpaOk returns a tuple with the Rpa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetRpaOk() (*RpaEntitlement, bool) {
	if o == nil || IsNil(o.Rpa) {
		return nil, false
	}
	return o.Rpa, true
}

// HasRpa returns a boolean if a field has been set.
func (o *Entitlements) HasRpa() bool {
	if o != nil && !IsNil(o.Rpa) {
		return true
	}

	return false
}

// SetRpa gets a reference to the given RpaEntitlement and assigns it to the Rpa field.
func (o *Entitlements) SetRpa(v RpaEntitlement) {
	o.Rpa = &v
}

// GetIdp returns the Idp field value if set, zero value otherwise.
func (o *Entitlements) GetIdp() EnablementResourceEntitlement {
	if o == nil || IsNil(o.Idp) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.Idp
}

// GetIdpOk returns a tuple with the Idp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetIdpOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.Idp) {
		return nil, false
	}
	return o.Idp, true
}

// HasIdp returns a boolean if a field has been set.
func (o *Entitlements) HasIdp() bool {
	if o != nil && !IsNil(o.Idp) {
		return true
	}

	return false
}

// SetIdp gets a reference to the given EnablementResourceEntitlement and assigns it to the Idp field.
func (o *Entitlements) SetIdp(v EnablementResourceEntitlement) {
	o.Idp = &v
}

// GetUsageBasedPricing returns the UsageBasedPricing field value if set, zero value otherwise.
func (o *Entitlements) GetUsageBasedPricing() UsageBasedPricingEntitlement {
	if o == nil || IsNil(o.UsageBasedPricing) {
		var ret UsageBasedPricingEntitlement
		return ret
	}
	return *o.UsageBasedPricing
}

// GetUsageBasedPricingOk returns a tuple with the UsageBasedPricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetUsageBasedPricingOk() (*UsageBasedPricingEntitlement, bool) {
	if o == nil || IsNil(o.UsageBasedPricing) {
		return nil, false
	}
	return o.UsageBasedPricing, true
}

// HasUsageBasedPricing returns a boolean if a field has been set.
func (o *Entitlements) HasUsageBasedPricing() bool {
	if o != nil && !IsNil(o.UsageBasedPricing) {
		return true
	}

	return false
}

// SetUsageBasedPricing gets a reference to the given UsageBasedPricingEntitlement and assigns it to the UsageBasedPricing field.
func (o *Entitlements) SetUsageBasedPricing(v UsageBasedPricingEntitlement) {
	o.UsageBasedPricing = &v
}

// GetUsageBasedPricingLimits returns the UsageBasedPricingLimits field value if set, zero value otherwise.
func (o *Entitlements) GetUsageBasedPricingLimits() UsageBasedPricingLimitsEntitlement {
	if o == nil || IsNil(o.UsageBasedPricingLimits) {
		var ret UsageBasedPricingLimitsEntitlement
		return ret
	}
	return *o.UsageBasedPricingLimits
}

// GetUsageBasedPricingLimitsOk returns a tuple with the UsageBasedPricingLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetUsageBasedPricingLimitsOk() (*UsageBasedPricingLimitsEntitlement, bool) {
	if o == nil || IsNil(o.UsageBasedPricingLimits) {
		return nil, false
	}
	return o.UsageBasedPricingLimits, true
}

// HasUsageBasedPricingLimits returns a boolean if a field has been set.
func (o *Entitlements) HasUsageBasedPricingLimits() bool {
	if o != nil && !IsNil(o.UsageBasedPricingLimits) {
		return true
	}

	return false
}

// SetUsageBasedPricingLimits gets a reference to the given UsageBasedPricingLimitsEntitlement and assigns it to the UsageBasedPricingLimits field.
func (o *Entitlements) SetUsageBasedPricingLimits(v UsageBasedPricingLimitsEntitlement) {
	o.UsageBasedPricingLimits = &v
}

// GetTelemetryExporter returns the TelemetryExporter field value if set, zero value otherwise.
func (o *Entitlements) GetTelemetryExporter() EnablementResourceEntitlement {
	if o == nil || IsNil(o.TelemetryExporter) {
		var ret EnablementResourceEntitlement
		return ret
	}
	return *o.TelemetryExporter
}

// GetTelemetryExporterOk returns a tuple with the TelemetryExporter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Entitlements) GetTelemetryExporterOk() (*EnablementResourceEntitlement, bool) {
	if o == nil || IsNil(o.TelemetryExporter) {
		return nil, false
	}
	return o.TelemetryExporter, true
}

// HasTelemetryExporter returns a boolean if a field has been set.
func (o *Entitlements) HasTelemetryExporter() bool {
	if o != nil && !IsNil(o.TelemetryExporter) {
		return true
	}

	return false
}

// SetTelemetryExporter gets a reference to the given EnablementResourceEntitlement and assigns it to the TelemetryExporter field.
func (o *Entitlements) SetTelemetryExporter(v EnablementResourceEntitlement) {
	o.TelemetryExporter = &v
}

func (o Entitlements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Entitlements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AngGovernance) {
		toSerialize["angGovernance"] = o.AngGovernance
	}
	if !IsNil(o.AnypointSecurityEdgePolicies) {
		toSerialize["anypointSecurityEdgePolicies"] = o.AnypointSecurityEdgePolicies
	}
	if !IsNil(o.AnypointSecurityTokenization) {
		toSerialize["anypointSecurityTokenization"] = o.AnypointSecurityTokenization
	}
	if !IsNil(o.ApiCommunityManager) {
		toSerialize["apiCommunityManager"] = o.ApiCommunityManager
	}
	if !IsNil(o.ApiMonitoring) {
		toSerialize["apiMonitoring"] = o.ApiMonitoring
	}
	if !IsNil(o.ApiQuery) {
		toSerialize["apiQuery"] = o.ApiQuery
	}
	if !IsNil(o.ApiQueryC360) {
		toSerialize["apiQueryC360"] = o.ApiQueryC360
	}
	if !IsNil(o.Apis) {
		toSerialize["apis"] = o.Apis
	}
	if !IsNil(o.AppViz) {
		toSerialize["appViz"] = o.AppViz
	}
	if !IsNil(o.ArmAlerts) {
		toSerialize["armAlerts"] = o.ArmAlerts
	}
	if !IsNil(o.Autoscaling) {
		toSerialize["autoscaling"] = o.Autoscaling
	}
	if !IsNil(o.Cam) {
		toSerialize["cam"] = o.Cam
	}
	if !IsNil(o.CreateEnvironments) {
		toSerialize["createEnvironments"] = o.CreateEnvironments
	}
	if !IsNil(o.CreateSubOrgs) {
		toSerialize["createSubOrgs"] = o.CreateSubOrgs
	}
	if !IsNil(o.Crowd) {
		toSerialize["crowd"] = o.Crowd
	}
	if !IsNil(o.CrowdSelfServiceMigration) {
		toSerialize["crowdSelfServiceMigration"] = o.CrowdSelfServiceMigration
	}
	if !IsNil(o.DesignCenter) {
		toSerialize["designCenter"] = o.DesignCenter
	}
	if !IsNil(o.Exchange2) {
		toSerialize["exchange2"] = o.Exchange2
	}
	if !IsNil(o.ExternalIdentity) {
		toSerialize["externalIdentity"] = o.ExternalIdentity
	}
	if !IsNil(o.Gateways) {
		toSerialize["gateways"] = o.Gateways
	}
	if !IsNil(o.GlobalDeployment) {
		toSerialize["globalDeployment"] = o.GlobalDeployment
	}
	if !IsNil(o.Hybrid) {
		toSerialize["hybrid"] = o.Hybrid
	}
	if !IsNil(o.HybridAutoDiscoverProperties) {
		toSerialize["hybridAutoDiscoverProperties"] = o.HybridAutoDiscoverProperties
	}
	if !IsNil(o.HybridInsight) {
		toSerialize["hybridInsight"] = o.HybridInsight
	}
	if !IsNil(o.KpiDashboard) {
		toSerialize["kpiDashboard"] = o.KpiDashboard
	}
	if !IsNil(o.LoadBalancer) {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	if !IsNil(o.Messaging) {
		toSerialize["messaging"] = o.Messaging
	}
	if !IsNil(o.MonitoringCenter) {
		toSerialize["monitoringCenter"] = o.MonitoringCenter
	}
	if !IsNil(o.MqAdvancedFeatures) {
		toSerialize["mqAdvancedFeatures"] = o.MqAdvancedFeatures
	}
	if !IsNil(o.MqMessages) {
		toSerialize["mqMessages"] = o.MqMessages
	}
	if !IsNil(o.MqRequests) {
		toSerialize["mqRequests"] = o.MqRequests
	}
	if !IsNil(o.ObjectStoreKeys) {
		toSerialize["objectStoreKeys"] = o.ObjectStoreKeys
	}
	if !IsNil(o.ObjectStoreRequestUnits) {
		toSerialize["objectStoreRequestUnits"] = o.ObjectStoreRequestUnits
	}
	if !IsNil(o.PartnersProduction) {
		toSerialize["partnersProduction"] = o.PartnersProduction
	}
	if !IsNil(o.PartnersSandbox) {
		toSerialize["partnersSandbox"] = o.PartnersSandbox
	}
	if !IsNil(o.Pcf) {
		toSerialize["pcf"] = o.Pcf
	}
	if !IsNil(o.RuntimeFabric) {
		toSerialize["runtimeFabric"] = o.RuntimeFabric
	}
	if !IsNil(o.RuntimeFabricCloud) {
		toSerialize["runtimeFabricCloud"] = o.RuntimeFabricCloud
	}
	if !IsNil(o.ServiceMesh) {
		toSerialize["serviceMesh"] = o.ServiceMesh
	}
	if !IsNil(o.StaticIps) {
		toSerialize["staticIps"] = o.StaticIps
	}
	if !IsNil(o.TradingPartnersProduction) {
		toSerialize["tradingPartnersProduction"] = o.TradingPartnersProduction
	}
	if !IsNil(o.TradingPartnersSandbox) {
		toSerialize["tradingPartnersSandbox"] = o.TradingPartnersSandbox
	}
	if !IsNil(o.VCoresDesign) {
		toSerialize["vCoresDesign"] = o.VCoresDesign
	}
	if !IsNil(o.VCoresProduction) {
		toSerialize["vCoresProduction"] = o.VCoresProduction
	}
	if !IsNil(o.VCoresSandbox) {
		toSerialize["vCoresSandbox"] = o.VCoresSandbox
	}
	if !IsNil(o.Vpcs) {
		toSerialize["vpcs"] = o.Vpcs
	}
	if !IsNil(o.Vpns) {
		toSerialize["vpns"] = o.Vpns
	}
	if !IsNil(o.WorkerClouds) {
		toSerialize["workerClouds"] = o.WorkerClouds
	}
	if !IsNil(o.WorkerLoggingOverride) {
		toSerialize["workerLoggingOverride"] = o.WorkerLoggingOverride
	}
	if !IsNil(o.MuleDxWebIde) {
		toSerialize["muleDxWebIde"] = o.MuleDxWebIde
	}
	if !IsNil(o.MuleDxGenAI) {
		toSerialize["muleDxGenAI"] = o.MuleDxGenAI
	}
	if !IsNil(o.MuleDxEDA) {
		toSerialize["muleDxEDA"] = o.MuleDxEDA
	}
	if !IsNil(o.HighAvailability) {
		toSerialize["highAvailability"] = o.HighAvailability
	}
	if !IsNil(o.Cloudhub1) {
		toSerialize["cloudhub1"] = o.Cloudhub1
	}
	if !IsNil(o.ApiGovernance) {
		toSerialize["apiGovernance"] = o.ApiGovernance
	}
	if !IsNil(o.ApiGovernanceDomain) {
		toSerialize["apiGovernanceDomain"] = o.ApiGovernanceDomain
	}
	if !IsNil(o.ApiCatalog) {
		toSerialize["apiCatalog"] = o.ApiCatalog
	}
	if !IsNil(o.ApiManager) {
		toSerialize["apiManager"] = o.ApiManager
	}
	if !IsNil(o.Composer) {
		toSerialize["composer"] = o.Composer
	}
	if !IsNil(o.Rpa) {
		toSerialize["rpa"] = o.Rpa
	}
	if !IsNil(o.Idp) {
		toSerialize["idp"] = o.Idp
	}
	if !IsNil(o.UsageBasedPricing) {
		toSerialize["usageBasedPricing"] = o.UsageBasedPricing
	}
	if !IsNil(o.UsageBasedPricingLimits) {
		toSerialize["usageBasedPricingLimits"] = o.UsageBasedPricingLimits
	}
	if !IsNil(o.TelemetryExporter) {
		toSerialize["telemetryExporter"] = o.TelemetryExporter
	}
	return toSerialize, nil
}

type NullableEntitlements struct {
	value *Entitlements
	isSet bool
}

func (v NullableEntitlements) Get() *Entitlements {
	return v.value
}

func (v *NullableEntitlements) Set(val *Entitlements) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlements) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlements(val *Entitlements) *NullableEntitlements {
	return &NullableEntitlements{value: val, isSet: true}
}

func (v NullableEntitlements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


