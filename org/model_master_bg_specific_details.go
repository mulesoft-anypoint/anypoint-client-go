/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the MasterBGSpecificDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MasterBGSpecificDetails{}

// MasterBGSpecificDetails struct for MasterBGSpecificDetails
type MasterBGSpecificDetails struct {
	// The session timeout in minutes.
	SessionTimeout *int32 `json:"sessionTimeout,omitempty"`
	Subscription *Subscription `json:"subscription,omitempty"`
	// The gdot id of the organization
	GdotId *string `json:"gdotId,omitempty"`
	// The deleted date of the organization
	DeletedAt NullableString `json:"deletedAt,omitempty"`
	// The type of the organization
	OrgType *string `json:"orgType,omitempty"`
}

// NewMasterBGSpecificDetails instantiates a new MasterBGSpecificDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMasterBGSpecificDetails() *MasterBGSpecificDetails {
	this := MasterBGSpecificDetails{}
	var sessionTimeout int32 = 0
	this.SessionTimeout = &sessionTimeout
	var gdotId string = ""
	this.GdotId = &gdotId
	var orgType string = ""
	this.OrgType = &orgType
	return &this
}

// NewMasterBGSpecificDetailsWithDefaults instantiates a new MasterBGSpecificDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMasterBGSpecificDetailsWithDefaults() *MasterBGSpecificDetails {
	this := MasterBGSpecificDetails{}
	var sessionTimeout int32 = 0
	this.SessionTimeout = &sessionTimeout
	var gdotId string = ""
	this.GdotId = &gdotId
	var orgType string = ""
	this.OrgType = &orgType
	return &this
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *MasterBGSpecificDetails) GetSessionTimeout() int32 {
	if o == nil || IsNil(o.SessionTimeout) {
		var ret int32
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterBGSpecificDetails) GetSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.SessionTimeout) {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *MasterBGSpecificDetails) HasSessionTimeout() bool {
	if o != nil && !IsNil(o.SessionTimeout) {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given int32 and assigns it to the SessionTimeout field.
func (o *MasterBGSpecificDetails) SetSessionTimeout(v int32) {
	o.SessionTimeout = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *MasterBGSpecificDetails) GetSubscription() Subscription {
	if o == nil || IsNil(o.Subscription) {
		var ret Subscription
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterBGSpecificDetails) GetSubscriptionOk() (*Subscription, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *MasterBGSpecificDetails) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given Subscription and assigns it to the Subscription field.
func (o *MasterBGSpecificDetails) SetSubscription(v Subscription) {
	o.Subscription = &v
}

// GetGdotId returns the GdotId field value if set, zero value otherwise.
func (o *MasterBGSpecificDetails) GetGdotId() string {
	if o == nil || IsNil(o.GdotId) {
		var ret string
		return ret
	}
	return *o.GdotId
}

// GetGdotIdOk returns a tuple with the GdotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterBGSpecificDetails) GetGdotIdOk() (*string, bool) {
	if o == nil || IsNil(o.GdotId) {
		return nil, false
	}
	return o.GdotId, true
}

// HasGdotId returns a boolean if a field has been set.
func (o *MasterBGSpecificDetails) HasGdotId() bool {
	if o != nil && !IsNil(o.GdotId) {
		return true
	}

	return false
}

// SetGdotId gets a reference to the given string and assigns it to the GdotId field.
func (o *MasterBGSpecificDetails) SetGdotId(v string) {
	o.GdotId = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MasterBGSpecificDetails) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret string
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MasterBGSpecificDetails) GetDeletedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *MasterBGSpecificDetails) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableString and assigns it to the DeletedAt field.
func (o *MasterBGSpecificDetails) SetDeletedAt(v string) {
	o.DeletedAt.Set(&v)
}
// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *MasterBGSpecificDetails) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *MasterBGSpecificDetails) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

// GetOrgType returns the OrgType field value if set, zero value otherwise.
func (o *MasterBGSpecificDetails) GetOrgType() string {
	if o == nil || IsNil(o.OrgType) {
		var ret string
		return ret
	}
	return *o.OrgType
}

// GetOrgTypeOk returns a tuple with the OrgType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterBGSpecificDetails) GetOrgTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrgType) {
		return nil, false
	}
	return o.OrgType, true
}

// HasOrgType returns a boolean if a field has been set.
func (o *MasterBGSpecificDetails) HasOrgType() bool {
	if o != nil && !IsNil(o.OrgType) {
		return true
	}

	return false
}

// SetOrgType gets a reference to the given string and assigns it to the OrgType field.
func (o *MasterBGSpecificDetails) SetOrgType(v string) {
	o.OrgType = &v
}

func (o MasterBGSpecificDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MasterBGSpecificDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SessionTimeout) {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	if !IsNil(o.GdotId) {
		toSerialize["gdotId"] = o.GdotId
	}
	if o.DeletedAt.IsSet() {
		toSerialize["deletedAt"] = o.DeletedAt.Get()
	}
	if !IsNil(o.OrgType) {
		toSerialize["orgType"] = o.OrgType
	}
	return toSerialize, nil
}

type NullableMasterBGSpecificDetails struct {
	value *MasterBGSpecificDetails
	isSet bool
}

func (v NullableMasterBGSpecificDetails) Get() *MasterBGSpecificDetails {
	return v.value
}

func (v *NullableMasterBGSpecificDetails) Set(val *MasterBGSpecificDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMasterBGSpecificDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMasterBGSpecificDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMasterBGSpecificDetails(val *MasterBGSpecificDetails) *NullableMasterBGSpecificDetails {
	return &NullableMasterBGSpecificDetails{value: val, isSet: true}
}

func (v NullableMasterBGSpecificDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMasterBGSpecificDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


