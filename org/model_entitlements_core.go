/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the EntitlementsCore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitlementsCore{}

// EntitlementsCore Entitlements core
type EntitlementsCore struct {
	// Global Deployment
	GlobalDeployment *bool `json:"globalDeployment,omitempty"`
	// Create Environments
	CreateEnvironments *bool `json:"createEnvironments,omitempty"`
	// Create Sub Orgs
	CreateSubOrgs *bool `json:"createSubOrgs,omitempty"`
	LoadBalancer *LoadBalancerEntitlement `json:"loadBalancer,omitempty"`
	StaticIps *StaticIpsEntitlement `json:"staticIps,omitempty"`
	VCoresDesign *VCoresDesignEntitlement `json:"vCoresDesign,omitempty"`
	VCoresProduction *VCoresProductionEntitlement `json:"vCoresProduction,omitempty"`
	VCoresSandbox *VCoresSandboxEntitlement `json:"vCoresSandbox,omitempty"`
	Vpcs *VpcsEntitlement `json:"vpcs,omitempty"`
	Vpns *VpnsEntitlement `json:"vpns,omitempty"`
}

// NewEntitlementsCore instantiates a new EntitlementsCore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementsCore() *EntitlementsCore {
	this := EntitlementsCore{}
	var globalDeployment bool = false
	this.GlobalDeployment = &globalDeployment
	var createEnvironments bool = false
	this.CreateEnvironments = &createEnvironments
	var createSubOrgs bool = false
	this.CreateSubOrgs = &createSubOrgs
	return &this
}

// NewEntitlementsCoreWithDefaults instantiates a new EntitlementsCore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementsCoreWithDefaults() *EntitlementsCore {
	this := EntitlementsCore{}
	var globalDeployment bool = false
	this.GlobalDeployment = &globalDeployment
	var createEnvironments bool = false
	this.CreateEnvironments = &createEnvironments
	var createSubOrgs bool = false
	this.CreateSubOrgs = &createSubOrgs
	return &this
}

// GetGlobalDeployment returns the GlobalDeployment field value if set, zero value otherwise.
func (o *EntitlementsCore) GetGlobalDeployment() bool {
	if o == nil || IsNil(o.GlobalDeployment) {
		var ret bool
		return ret
	}
	return *o.GlobalDeployment
}

// GetGlobalDeploymentOk returns a tuple with the GlobalDeployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetGlobalDeploymentOk() (*bool, bool) {
	if o == nil || IsNil(o.GlobalDeployment) {
		return nil, false
	}
	return o.GlobalDeployment, true
}

// HasGlobalDeployment returns a boolean if a field has been set.
func (o *EntitlementsCore) HasGlobalDeployment() bool {
	if o != nil && !IsNil(o.GlobalDeployment) {
		return true
	}

	return false
}

// SetGlobalDeployment gets a reference to the given bool and assigns it to the GlobalDeployment field.
func (o *EntitlementsCore) SetGlobalDeployment(v bool) {
	o.GlobalDeployment = &v
}

// GetCreateEnvironments returns the CreateEnvironments field value if set, zero value otherwise.
func (o *EntitlementsCore) GetCreateEnvironments() bool {
	if o == nil || IsNil(o.CreateEnvironments) {
		var ret bool
		return ret
	}
	return *o.CreateEnvironments
}

// GetCreateEnvironmentsOk returns a tuple with the CreateEnvironments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetCreateEnvironmentsOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateEnvironments) {
		return nil, false
	}
	return o.CreateEnvironments, true
}

// HasCreateEnvironments returns a boolean if a field has been set.
func (o *EntitlementsCore) HasCreateEnvironments() bool {
	if o != nil && !IsNil(o.CreateEnvironments) {
		return true
	}

	return false
}

// SetCreateEnvironments gets a reference to the given bool and assigns it to the CreateEnvironments field.
func (o *EntitlementsCore) SetCreateEnvironments(v bool) {
	o.CreateEnvironments = &v
}

// GetCreateSubOrgs returns the CreateSubOrgs field value if set, zero value otherwise.
func (o *EntitlementsCore) GetCreateSubOrgs() bool {
	if o == nil || IsNil(o.CreateSubOrgs) {
		var ret bool
		return ret
	}
	return *o.CreateSubOrgs
}

// GetCreateSubOrgsOk returns a tuple with the CreateSubOrgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetCreateSubOrgsOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateSubOrgs) {
		return nil, false
	}
	return o.CreateSubOrgs, true
}

// HasCreateSubOrgs returns a boolean if a field has been set.
func (o *EntitlementsCore) HasCreateSubOrgs() bool {
	if o != nil && !IsNil(o.CreateSubOrgs) {
		return true
	}

	return false
}

// SetCreateSubOrgs gets a reference to the given bool and assigns it to the CreateSubOrgs field.
func (o *EntitlementsCore) SetCreateSubOrgs(v bool) {
	o.CreateSubOrgs = &v
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *EntitlementsCore) GetLoadBalancer() LoadBalancerEntitlement {
	if o == nil || IsNil(o.LoadBalancer) {
		var ret LoadBalancerEntitlement
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetLoadBalancerOk() (*LoadBalancerEntitlement, bool) {
	if o == nil || IsNil(o.LoadBalancer) {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *EntitlementsCore) HasLoadBalancer() bool {
	if o != nil && !IsNil(o.LoadBalancer) {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancerEntitlement and assigns it to the LoadBalancer field.
func (o *EntitlementsCore) SetLoadBalancer(v LoadBalancerEntitlement) {
	o.LoadBalancer = &v
}

// GetStaticIps returns the StaticIps field value if set, zero value otherwise.
func (o *EntitlementsCore) GetStaticIps() StaticIpsEntitlement {
	if o == nil || IsNil(o.StaticIps) {
		var ret StaticIpsEntitlement
		return ret
	}
	return *o.StaticIps
}

// GetStaticIpsOk returns a tuple with the StaticIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetStaticIpsOk() (*StaticIpsEntitlement, bool) {
	if o == nil || IsNil(o.StaticIps) {
		return nil, false
	}
	return o.StaticIps, true
}

// HasStaticIps returns a boolean if a field has been set.
func (o *EntitlementsCore) HasStaticIps() bool {
	if o != nil && !IsNil(o.StaticIps) {
		return true
	}

	return false
}

// SetStaticIps gets a reference to the given StaticIpsEntitlement and assigns it to the StaticIps field.
func (o *EntitlementsCore) SetStaticIps(v StaticIpsEntitlement) {
	o.StaticIps = &v
}

// GetVCoresDesign returns the VCoresDesign field value if set, zero value otherwise.
func (o *EntitlementsCore) GetVCoresDesign() VCoresDesignEntitlement {
	if o == nil || IsNil(o.VCoresDesign) {
		var ret VCoresDesignEntitlement
		return ret
	}
	return *o.VCoresDesign
}

// GetVCoresDesignOk returns a tuple with the VCoresDesign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetVCoresDesignOk() (*VCoresDesignEntitlement, bool) {
	if o == nil || IsNil(o.VCoresDesign) {
		return nil, false
	}
	return o.VCoresDesign, true
}

// HasVCoresDesign returns a boolean if a field has been set.
func (o *EntitlementsCore) HasVCoresDesign() bool {
	if o != nil && !IsNil(o.VCoresDesign) {
		return true
	}

	return false
}

// SetVCoresDesign gets a reference to the given VCoresDesignEntitlement and assigns it to the VCoresDesign field.
func (o *EntitlementsCore) SetVCoresDesign(v VCoresDesignEntitlement) {
	o.VCoresDesign = &v
}

// GetVCoresProduction returns the VCoresProduction field value if set, zero value otherwise.
func (o *EntitlementsCore) GetVCoresProduction() VCoresProductionEntitlement {
	if o == nil || IsNil(o.VCoresProduction) {
		var ret VCoresProductionEntitlement
		return ret
	}
	return *o.VCoresProduction
}

// GetVCoresProductionOk returns a tuple with the VCoresProduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetVCoresProductionOk() (*VCoresProductionEntitlement, bool) {
	if o == nil || IsNil(o.VCoresProduction) {
		return nil, false
	}
	return o.VCoresProduction, true
}

// HasVCoresProduction returns a boolean if a field has been set.
func (o *EntitlementsCore) HasVCoresProduction() bool {
	if o != nil && !IsNil(o.VCoresProduction) {
		return true
	}

	return false
}

// SetVCoresProduction gets a reference to the given VCoresProductionEntitlement and assigns it to the VCoresProduction field.
func (o *EntitlementsCore) SetVCoresProduction(v VCoresProductionEntitlement) {
	o.VCoresProduction = &v
}

// GetVCoresSandbox returns the VCoresSandbox field value if set, zero value otherwise.
func (o *EntitlementsCore) GetVCoresSandbox() VCoresSandboxEntitlement {
	if o == nil || IsNil(o.VCoresSandbox) {
		var ret VCoresSandboxEntitlement
		return ret
	}
	return *o.VCoresSandbox
}

// GetVCoresSandboxOk returns a tuple with the VCoresSandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetVCoresSandboxOk() (*VCoresSandboxEntitlement, bool) {
	if o == nil || IsNil(o.VCoresSandbox) {
		return nil, false
	}
	return o.VCoresSandbox, true
}

// HasVCoresSandbox returns a boolean if a field has been set.
func (o *EntitlementsCore) HasVCoresSandbox() bool {
	if o != nil && !IsNil(o.VCoresSandbox) {
		return true
	}

	return false
}

// SetVCoresSandbox gets a reference to the given VCoresSandboxEntitlement and assigns it to the VCoresSandbox field.
func (o *EntitlementsCore) SetVCoresSandbox(v VCoresSandboxEntitlement) {
	o.VCoresSandbox = &v
}

// GetVpcs returns the Vpcs field value if set, zero value otherwise.
func (o *EntitlementsCore) GetVpcs() VpcsEntitlement {
	if o == nil || IsNil(o.Vpcs) {
		var ret VpcsEntitlement
		return ret
	}
	return *o.Vpcs
}

// GetVpcsOk returns a tuple with the Vpcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetVpcsOk() (*VpcsEntitlement, bool) {
	if o == nil || IsNil(o.Vpcs) {
		return nil, false
	}
	return o.Vpcs, true
}

// HasVpcs returns a boolean if a field has been set.
func (o *EntitlementsCore) HasVpcs() bool {
	if o != nil && !IsNil(o.Vpcs) {
		return true
	}

	return false
}

// SetVpcs gets a reference to the given VpcsEntitlement and assigns it to the Vpcs field.
func (o *EntitlementsCore) SetVpcs(v VpcsEntitlement) {
	o.Vpcs = &v
}

// GetVpns returns the Vpns field value if set, zero value otherwise.
func (o *EntitlementsCore) GetVpns() VpnsEntitlement {
	if o == nil || IsNil(o.Vpns) {
		var ret VpnsEntitlement
		return ret
	}
	return *o.Vpns
}

// GetVpnsOk returns a tuple with the Vpns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementsCore) GetVpnsOk() (*VpnsEntitlement, bool) {
	if o == nil || IsNil(o.Vpns) {
		return nil, false
	}
	return o.Vpns, true
}

// HasVpns returns a boolean if a field has been set.
func (o *EntitlementsCore) HasVpns() bool {
	if o != nil && !IsNil(o.Vpns) {
		return true
	}

	return false
}

// SetVpns gets a reference to the given VpnsEntitlement and assigns it to the Vpns field.
func (o *EntitlementsCore) SetVpns(v VpnsEntitlement) {
	o.Vpns = &v
}

func (o EntitlementsCore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitlementsCore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalDeployment) {
		toSerialize["globalDeployment"] = o.GlobalDeployment
	}
	if !IsNil(o.CreateEnvironments) {
		toSerialize["createEnvironments"] = o.CreateEnvironments
	}
	if !IsNil(o.CreateSubOrgs) {
		toSerialize["createSubOrgs"] = o.CreateSubOrgs
	}
	if !IsNil(o.LoadBalancer) {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	if !IsNil(o.StaticIps) {
		toSerialize["staticIps"] = o.StaticIps
	}
	if !IsNil(o.VCoresDesign) {
		toSerialize["vCoresDesign"] = o.VCoresDesign
	}
	if !IsNil(o.VCoresProduction) {
		toSerialize["vCoresProduction"] = o.VCoresProduction
	}
	if !IsNil(o.VCoresSandbox) {
		toSerialize["vCoresSandbox"] = o.VCoresSandbox
	}
	if !IsNil(o.Vpcs) {
		toSerialize["vpcs"] = o.Vpcs
	}
	if !IsNil(o.Vpns) {
		toSerialize["vpns"] = o.Vpns
	}
	return toSerialize, nil
}

type NullableEntitlementsCore struct {
	value *EntitlementsCore
	isSet bool
}

func (v NullableEntitlementsCore) Get() *EntitlementsCore {
	return v.value
}

func (v *NullableEntitlementsCore) Set(val *EntitlementsCore) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementsCore) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementsCore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementsCore(val *EntitlementsCore) *NullableEntitlementsCore {
	return &NullableEntitlementsCore{value: val, isSet: true}
}

func (v NullableEntitlementsCore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementsCore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


