/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the Api type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Api{}

// Api struct for Api
type Api struct {
	Production *Production `json:"production,omitempty"`
	Sandbox *Sandbox `json:"sandbox,omitempty"`
}

// NewApi instantiates a new Api object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApi() *Api {
	this := Api{}
	return &this
}

// NewApiWithDefaults instantiates a new Api object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiWithDefaults() *Api {
	this := Api{}
	return &this
}

// GetProduction returns the Production field value if set, zero value otherwise.
func (o *Api) GetProduction() Production {
	if o == nil || IsNil(o.Production) {
		var ret Production
		return ret
	}
	return *o.Production
}

// GetProductionOk returns a tuple with the Production field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Api) GetProductionOk() (*Production, bool) {
	if o == nil || IsNil(o.Production) {
		return nil, false
	}
	return o.Production, true
}

// HasProduction returns a boolean if a field has been set.
func (o *Api) HasProduction() bool {
	if o != nil && !IsNil(o.Production) {
		return true
	}

	return false
}

// SetProduction gets a reference to the given Production and assigns it to the Production field.
func (o *Api) SetProduction(v Production) {
	o.Production = &v
}

// GetSandbox returns the Sandbox field value if set, zero value otherwise.
func (o *Api) GetSandbox() Sandbox {
	if o == nil || IsNil(o.Sandbox) {
		var ret Sandbox
		return ret
	}
	return *o.Sandbox
}

// GetSandboxOk returns a tuple with the Sandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Api) GetSandboxOk() (*Sandbox, bool) {
	if o == nil || IsNil(o.Sandbox) {
		return nil, false
	}
	return o.Sandbox, true
}

// HasSandbox returns a boolean if a field has been set.
func (o *Api) HasSandbox() bool {
	if o != nil && !IsNil(o.Sandbox) {
		return true
	}

	return false
}

// SetSandbox gets a reference to the given Sandbox and assigns it to the Sandbox field.
func (o *Api) SetSandbox(v Sandbox) {
	o.Sandbox = &v
}

func (o Api) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Api) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Production) {
		toSerialize["production"] = o.Production
	}
	if !IsNil(o.Sandbox) {
		toSerialize["sandbox"] = o.Sandbox
	}
	return toSerialize, nil
}

type NullableApi struct {
	value *Api
	isSet bool
}

func (v NullableApi) Get() *Api {
	return v.value
}

func (v *NullableApi) Set(val *Api) {
	v.value = val
	v.isSet = true
}

func (v NullableApi) IsSet() bool {
	return v.isSet
}

func (v *NullableApi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApi(val *Api) *NullableApi {
	return &NullableApi{value: val, isSet: true}
}

func (v NullableApi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


