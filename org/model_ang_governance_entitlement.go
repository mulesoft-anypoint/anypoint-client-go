/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the AngGovernanceEntitlement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AngGovernanceEntitlement{}

// AngGovernanceEntitlement struct for AngGovernanceEntitlement
type AngGovernanceEntitlement struct {
	// Ang Governance level
	Level *int32 `json:"level,omitempty"`
}

// NewAngGovernanceEntitlement instantiates a new AngGovernanceEntitlement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAngGovernanceEntitlement() *AngGovernanceEntitlement {
	this := AngGovernanceEntitlement{}
	return &this
}

// NewAngGovernanceEntitlementWithDefaults instantiates a new AngGovernanceEntitlement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAngGovernanceEntitlementWithDefaults() *AngGovernanceEntitlement {
	this := AngGovernanceEntitlement{}
	return &this
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *AngGovernanceEntitlement) GetLevel() int32 {
	if o == nil || IsNil(o.Level) {
		var ret int32
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AngGovernanceEntitlement) GetLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *AngGovernanceEntitlement) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given int32 and assigns it to the Level field.
func (o *AngGovernanceEntitlement) SetLevel(v int32) {
	o.Level = &v
}

func (o AngGovernanceEntitlement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AngGovernanceEntitlement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	return toSerialize, nil
}

type NullableAngGovernanceEntitlement struct {
	value *AngGovernanceEntitlement
	isSet bool
}

func (v NullableAngGovernanceEntitlement) Get() *AngGovernanceEntitlement {
	return v.value
}

func (v *NullableAngGovernanceEntitlement) Set(val *AngGovernanceEntitlement) {
	v.value = val
	v.isSet = true
}

func (v NullableAngGovernanceEntitlement) IsSet() bool {
	return v.isSet
}

func (v *NullableAngGovernanceEntitlement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAngGovernanceEntitlement(val *AngGovernanceEntitlement) *NullableAngGovernanceEntitlement {
	return &NullableAngGovernanceEntitlement{value: val, isSet: true}
}

func (v NullableAngGovernanceEntitlement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAngGovernanceEntitlement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


