/*
Organization API

Description of the Organization API

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the BGUpdateReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BGUpdateReqBody{}

// BGUpdateReqBody struct for BGUpdateReqBody
type BGUpdateReqBody struct {
	Entitlements *EntitlementsCore `json:"entitlements,omitempty"`
	// The name of the organization
	Name *string `json:"name,omitempty"`
	// The id of the owner of the organization.
	OwnerId *string `json:"ownerId,omitempty"`
	// The session timeout in minutes
	SessionTimeout *int32 `json:"sessionTimeout,omitempty"`
}

// NewBGUpdateReqBody instantiates a new BGUpdateReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBGUpdateReqBody() *BGUpdateReqBody {
	this := BGUpdateReqBody{}
	var name string = ""
	this.Name = &name
	var ownerId string = ""
	this.OwnerId = &ownerId
	var sessionTimeout int32 = 0
	this.SessionTimeout = &sessionTimeout
	return &this
}

// NewBGUpdateReqBodyWithDefaults instantiates a new BGUpdateReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBGUpdateReqBodyWithDefaults() *BGUpdateReqBody {
	this := BGUpdateReqBody{}
	var name string = ""
	this.Name = &name
	var ownerId string = ""
	this.OwnerId = &ownerId
	var sessionTimeout int32 = 0
	this.SessionTimeout = &sessionTimeout
	return &this
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise.
func (o *BGUpdateReqBody) GetEntitlements() EntitlementsCore {
	if o == nil || IsNil(o.Entitlements) {
		var ret EntitlementsCore
		return ret
	}
	return *o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGUpdateReqBody) GetEntitlementsOk() (*EntitlementsCore, bool) {
	if o == nil || IsNil(o.Entitlements) {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *BGUpdateReqBody) HasEntitlements() bool {
	if o != nil && !IsNil(o.Entitlements) {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given EntitlementsCore and assigns it to the Entitlements field.
func (o *BGUpdateReqBody) SetEntitlements(v EntitlementsCore) {
	o.Entitlements = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BGUpdateReqBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGUpdateReqBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BGUpdateReqBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BGUpdateReqBody) SetName(v string) {
	o.Name = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *BGUpdateReqBody) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGUpdateReqBody) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *BGUpdateReqBody) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *BGUpdateReqBody) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *BGUpdateReqBody) GetSessionTimeout() int32 {
	if o == nil || IsNil(o.SessionTimeout) {
		var ret int32
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGUpdateReqBody) GetSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.SessionTimeout) {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *BGUpdateReqBody) HasSessionTimeout() bool {
	if o != nil && !IsNil(o.SessionTimeout) {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given int32 and assigns it to the SessionTimeout field.
func (o *BGUpdateReqBody) SetSessionTimeout(v int32) {
	o.SessionTimeout = &v
}

func (o BGUpdateReqBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BGUpdateReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entitlements) {
		toSerialize["entitlements"] = o.Entitlements
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !IsNil(o.SessionTimeout) {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	return toSerialize, nil
}

type NullableBGUpdateReqBody struct {
	value *BGUpdateReqBody
	isSet bool
}

func (v NullableBGUpdateReqBody) Get() *BGUpdateReqBody {
	return v.value
}

func (v *NullableBGUpdateReqBody) Set(val *BGUpdateReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableBGUpdateReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableBGUpdateReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBGUpdateReqBody(val *BGUpdateReqBody) *NullableBGUpdateReqBody {
	return &NullableBGUpdateReqBody{value: val, isSet: true}
}

func (v NullableBGUpdateReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBGUpdateReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


