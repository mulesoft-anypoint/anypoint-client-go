/*
Private Space TLS Context API

Description of the Private Space TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space_tlscontext

import (
	"encoding/json"
)

// checks if the TlsContextPostBodyTlsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TlsContextPostBodyTlsConfig{}

// TlsContextPostBodyTlsConfig struct for TlsContextPostBodyTlsConfig
type TlsContextPostBodyTlsConfig struct {
	KeyStore *TlsContextPostBodyTlsConfigKeyStore `json:"keyStore,omitempty"`
	TrustStore []TlsContextPostBodyTrustStorePEM `json:"trustStore,omitempty"`
}

// NewTlsContextPostBodyTlsConfig instantiates a new TlsContextPostBodyTlsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsContextPostBodyTlsConfig() *TlsContextPostBodyTlsConfig {
	this := TlsContextPostBodyTlsConfig{}
	return &this
}

// NewTlsContextPostBodyTlsConfigWithDefaults instantiates a new TlsContextPostBodyTlsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsContextPostBodyTlsConfigWithDefaults() *TlsContextPostBodyTlsConfig {
	this := TlsContextPostBodyTlsConfig{}
	return &this
}

// GetKeyStore returns the KeyStore field value if set, zero value otherwise.
func (o *TlsContextPostBodyTlsConfig) GetKeyStore() TlsContextPostBodyTlsConfigKeyStore {
	if o == nil || IsNil(o.KeyStore) {
		var ret TlsContextPostBodyTlsConfigKeyStore
		return ret
	}
	return *o.KeyStore
}

// GetKeyStoreOk returns a tuple with the KeyStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextPostBodyTlsConfig) GetKeyStoreOk() (*TlsContextPostBodyTlsConfigKeyStore, bool) {
	if o == nil || IsNil(o.KeyStore) {
		return nil, false
	}
	return o.KeyStore, true
}

// HasKeyStore returns a boolean if a field has been set.
func (o *TlsContextPostBodyTlsConfig) HasKeyStore() bool {
	if o != nil && !IsNil(o.KeyStore) {
		return true
	}

	return false
}

// SetKeyStore gets a reference to the given TlsContextPostBodyTlsConfigKeyStore and assigns it to the KeyStore field.
func (o *TlsContextPostBodyTlsConfig) SetKeyStore(v TlsContextPostBodyTlsConfigKeyStore) {
	o.KeyStore = &v
}

// GetTrustStore returns the TrustStore field value if set, zero value otherwise.
func (o *TlsContextPostBodyTlsConfig) GetTrustStore() []TlsContextPostBodyTrustStorePEM {
	if o == nil || IsNil(o.TrustStore) {
		var ret []TlsContextPostBodyTrustStorePEM
		return ret
	}
	return o.TrustStore
}

// GetTrustStoreOk returns a tuple with the TrustStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextPostBodyTlsConfig) GetTrustStoreOk() ([]TlsContextPostBodyTrustStorePEM, bool) {
	if o == nil || IsNil(o.TrustStore) {
		return nil, false
	}
	return o.TrustStore, true
}

// HasTrustStore returns a boolean if a field has been set.
func (o *TlsContextPostBodyTlsConfig) HasTrustStore() bool {
	if o != nil && !IsNil(o.TrustStore) {
		return true
	}

	return false
}

// SetTrustStore gets a reference to the given []TlsContextPostBodyTrustStorePEM and assigns it to the TrustStore field.
func (o *TlsContextPostBodyTlsConfig) SetTrustStore(v []TlsContextPostBodyTrustStorePEM) {
	o.TrustStore = v
}

func (o TlsContextPostBodyTlsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TlsContextPostBodyTlsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeyStore) {
		toSerialize["keyStore"] = o.KeyStore
	}
	if !IsNil(o.TrustStore) {
		toSerialize["trustStore"] = o.TrustStore
	}
	return toSerialize, nil
}

type NullableTlsContextPostBodyTlsConfig struct {
	value *TlsContextPostBodyTlsConfig
	isSet bool
}

func (v NullableTlsContextPostBodyTlsConfig) Get() *TlsContextPostBodyTlsConfig {
	return v.value
}

func (v *NullableTlsContextPostBodyTlsConfig) Set(val *TlsContextPostBodyTlsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsContextPostBodyTlsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsContextPostBodyTlsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsContextPostBodyTlsConfig(val *TlsContextPostBodyTlsConfig) *NullableTlsContextPostBodyTlsConfig {
	return &NullableTlsContextPostBodyTlsConfig{value: val, isSet: true}
}

func (v NullableTlsContextPostBodyTlsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsContextPostBodyTlsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


