/*
Private Space TLS Context API

Description of the Private Space TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space_tlscontext

import (
	"encoding/json"
)

// checks if the TrustStoreDnListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrustStoreDnListInner{}

// TrustStoreDnListInner struct for TrustStoreDnListInner
type TrustStoreDnListInner struct {
	Issuer *TrustStoreDnListInnerIssuer `json:"issuer,omitempty"`
	Subject *TrustStoreDnListInnerIssuer `json:"subject,omitempty"`
	Version *string `json:"version,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	SignatureAlgorithm *string `json:"signatureAlgorithm,omitempty"`
	PublicKeyAlgorithm *string `json:"publicKeyAlgorithm,omitempty"`
	BasicConstraints *TrustStoreDnListInnerBasicConstraints `json:"basicConstraints,omitempty"`
	Validity *TrustStoreDnListInnerValidity `json:"validity,omitempty"`
	KeyUsage []string `json:"keyUsage,omitempty"`
	CertificateType *string `json:"certificateType,omitempty"`
}

// NewTrustStoreDnListInner instantiates a new TrustStoreDnListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrustStoreDnListInner() *TrustStoreDnListInner {
	this := TrustStoreDnListInner{}
	return &this
}

// NewTrustStoreDnListInnerWithDefaults instantiates a new TrustStoreDnListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrustStoreDnListInnerWithDefaults() *TrustStoreDnListInner {
	this := TrustStoreDnListInner{}
	return &this
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetIssuer() TrustStoreDnListInnerIssuer {
	if o == nil || IsNil(o.Issuer) {
		var ret TrustStoreDnListInnerIssuer
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetIssuerOk() (*TrustStoreDnListInnerIssuer, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given TrustStoreDnListInnerIssuer and assigns it to the Issuer field.
func (o *TrustStoreDnListInner) SetIssuer(v TrustStoreDnListInnerIssuer) {
	o.Issuer = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetSubject() TrustStoreDnListInnerIssuer {
	if o == nil || IsNil(o.Subject) {
		var ret TrustStoreDnListInnerIssuer
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetSubjectOk() (*TrustStoreDnListInnerIssuer, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given TrustStoreDnListInnerIssuer and assigns it to the Subject field.
func (o *TrustStoreDnListInner) SetSubject(v TrustStoreDnListInnerIssuer) {
	o.Subject = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *TrustStoreDnListInner) SetVersion(v string) {
	o.Version = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *TrustStoreDnListInner) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetSignatureAlgorithm returns the SignatureAlgorithm field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetSignatureAlgorithm() string {
	if o == nil || IsNil(o.SignatureAlgorithm) {
		var ret string
		return ret
	}
	return *o.SignatureAlgorithm
}

// GetSignatureAlgorithmOk returns a tuple with the SignatureAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetSignatureAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureAlgorithm) {
		return nil, false
	}
	return o.SignatureAlgorithm, true
}

// HasSignatureAlgorithm returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasSignatureAlgorithm() bool {
	if o != nil && !IsNil(o.SignatureAlgorithm) {
		return true
	}

	return false
}

// SetSignatureAlgorithm gets a reference to the given string and assigns it to the SignatureAlgorithm field.
func (o *TrustStoreDnListInner) SetSignatureAlgorithm(v string) {
	o.SignatureAlgorithm = &v
}

// GetPublicKeyAlgorithm returns the PublicKeyAlgorithm field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetPublicKeyAlgorithm() string {
	if o == nil || IsNil(o.PublicKeyAlgorithm) {
		var ret string
		return ret
	}
	return *o.PublicKeyAlgorithm
}

// GetPublicKeyAlgorithmOk returns a tuple with the PublicKeyAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetPublicKeyAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.PublicKeyAlgorithm) {
		return nil, false
	}
	return o.PublicKeyAlgorithm, true
}

// HasPublicKeyAlgorithm returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasPublicKeyAlgorithm() bool {
	if o != nil && !IsNil(o.PublicKeyAlgorithm) {
		return true
	}

	return false
}

// SetPublicKeyAlgorithm gets a reference to the given string and assigns it to the PublicKeyAlgorithm field.
func (o *TrustStoreDnListInner) SetPublicKeyAlgorithm(v string) {
	o.PublicKeyAlgorithm = &v
}

// GetBasicConstraints returns the BasicConstraints field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetBasicConstraints() TrustStoreDnListInnerBasicConstraints {
	if o == nil || IsNil(o.BasicConstraints) {
		var ret TrustStoreDnListInnerBasicConstraints
		return ret
	}
	return *o.BasicConstraints
}

// GetBasicConstraintsOk returns a tuple with the BasicConstraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetBasicConstraintsOk() (*TrustStoreDnListInnerBasicConstraints, bool) {
	if o == nil || IsNil(o.BasicConstraints) {
		return nil, false
	}
	return o.BasicConstraints, true
}

// HasBasicConstraints returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasBasicConstraints() bool {
	if o != nil && !IsNil(o.BasicConstraints) {
		return true
	}

	return false
}

// SetBasicConstraints gets a reference to the given TrustStoreDnListInnerBasicConstraints and assigns it to the BasicConstraints field.
func (o *TrustStoreDnListInner) SetBasicConstraints(v TrustStoreDnListInnerBasicConstraints) {
	o.BasicConstraints = &v
}

// GetValidity returns the Validity field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetValidity() TrustStoreDnListInnerValidity {
	if o == nil || IsNil(o.Validity) {
		var ret TrustStoreDnListInnerValidity
		return ret
	}
	return *o.Validity
}

// GetValidityOk returns a tuple with the Validity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetValidityOk() (*TrustStoreDnListInnerValidity, bool) {
	if o == nil || IsNil(o.Validity) {
		return nil, false
	}
	return o.Validity, true
}

// HasValidity returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasValidity() bool {
	if o != nil && !IsNil(o.Validity) {
		return true
	}

	return false
}

// SetValidity gets a reference to the given TrustStoreDnListInnerValidity and assigns it to the Validity field.
func (o *TrustStoreDnListInner) SetValidity(v TrustStoreDnListInnerValidity) {
	o.Validity = &v
}

// GetKeyUsage returns the KeyUsage field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetKeyUsage() []string {
	if o == nil || IsNil(o.KeyUsage) {
		var ret []string
		return ret
	}
	return o.KeyUsage
}

// GetKeyUsageOk returns a tuple with the KeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetKeyUsageOk() ([]string, bool) {
	if o == nil || IsNil(o.KeyUsage) {
		return nil, false
	}
	return o.KeyUsage, true
}

// HasKeyUsage returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasKeyUsage() bool {
	if o != nil && !IsNil(o.KeyUsage) {
		return true
	}

	return false
}

// SetKeyUsage gets a reference to the given []string and assigns it to the KeyUsage field.
func (o *TrustStoreDnListInner) SetKeyUsage(v []string) {
	o.KeyUsage = v
}

// GetCertificateType returns the CertificateType field value if set, zero value otherwise.
func (o *TrustStoreDnListInner) GetCertificateType() string {
	if o == nil || IsNil(o.CertificateType) {
		var ret string
		return ret
	}
	return *o.CertificateType
}

// GetCertificateTypeOk returns a tuple with the CertificateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInner) GetCertificateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateType) {
		return nil, false
	}
	return o.CertificateType, true
}

// HasCertificateType returns a boolean if a field has been set.
func (o *TrustStoreDnListInner) HasCertificateType() bool {
	if o != nil && !IsNil(o.CertificateType) {
		return true
	}

	return false
}

// SetCertificateType gets a reference to the given string and assigns it to the CertificateType field.
func (o *TrustStoreDnListInner) SetCertificateType(v string) {
	o.CertificateType = &v
}

func (o TrustStoreDnListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrustStoreDnListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.SignatureAlgorithm) {
		toSerialize["signatureAlgorithm"] = o.SignatureAlgorithm
	}
	if !IsNil(o.PublicKeyAlgorithm) {
		toSerialize["publicKeyAlgorithm"] = o.PublicKeyAlgorithm
	}
	if !IsNil(o.BasicConstraints) {
		toSerialize["basicConstraints"] = o.BasicConstraints
	}
	if !IsNil(o.Validity) {
		toSerialize["validity"] = o.Validity
	}
	if !IsNil(o.KeyUsage) {
		toSerialize["keyUsage"] = o.KeyUsage
	}
	if !IsNil(o.CertificateType) {
		toSerialize["certificateType"] = o.CertificateType
	}
	return toSerialize, nil
}

type NullableTrustStoreDnListInner struct {
	value *TrustStoreDnListInner
	isSet bool
}

func (v NullableTrustStoreDnListInner) Get() *TrustStoreDnListInner {
	return v.value
}

func (v *NullableTrustStoreDnListInner) Set(val *TrustStoreDnListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTrustStoreDnListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTrustStoreDnListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrustStoreDnListInner(val *TrustStoreDnListInner) *NullableTrustStoreDnListInner {
	return &NullableTrustStoreDnListInner{value: val, isSet: true}
}

func (v NullableTrustStoreDnListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrustStoreDnListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


