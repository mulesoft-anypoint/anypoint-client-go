/*
Private Space TLS Context API

Description of the Private Space TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space_tlscontext

import (
	"encoding/json"
)

// checks if the TrustStoreDnListInnerBasicConstraints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrustStoreDnListInnerBasicConstraints{}

// TrustStoreDnListInnerBasicConstraints struct for TrustStoreDnListInnerBasicConstraints
type TrustStoreDnListInnerBasicConstraints struct {
	CertificateAuthority *bool `json:"certificateAuthority,omitempty"`
}

// NewTrustStoreDnListInnerBasicConstraints instantiates a new TrustStoreDnListInnerBasicConstraints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrustStoreDnListInnerBasicConstraints() *TrustStoreDnListInnerBasicConstraints {
	this := TrustStoreDnListInnerBasicConstraints{}
	return &this
}

// NewTrustStoreDnListInnerBasicConstraintsWithDefaults instantiates a new TrustStoreDnListInnerBasicConstraints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrustStoreDnListInnerBasicConstraintsWithDefaults() *TrustStoreDnListInnerBasicConstraints {
	this := TrustStoreDnListInnerBasicConstraints{}
	return &this
}

// GetCertificateAuthority returns the CertificateAuthority field value if set, zero value otherwise.
func (o *TrustStoreDnListInnerBasicConstraints) GetCertificateAuthority() bool {
	if o == nil || IsNil(o.CertificateAuthority) {
		var ret bool
		return ret
	}
	return *o.CertificateAuthority
}

// GetCertificateAuthorityOk returns a tuple with the CertificateAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInnerBasicConstraints) GetCertificateAuthorityOk() (*bool, bool) {
	if o == nil || IsNil(o.CertificateAuthority) {
		return nil, false
	}
	return o.CertificateAuthority, true
}

// HasCertificateAuthority returns a boolean if a field has been set.
func (o *TrustStoreDnListInnerBasicConstraints) HasCertificateAuthority() bool {
	if o != nil && !IsNil(o.CertificateAuthority) {
		return true
	}

	return false
}

// SetCertificateAuthority gets a reference to the given bool and assigns it to the CertificateAuthority field.
func (o *TrustStoreDnListInnerBasicConstraints) SetCertificateAuthority(v bool) {
	o.CertificateAuthority = &v
}

func (o TrustStoreDnListInnerBasicConstraints) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrustStoreDnListInnerBasicConstraints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertificateAuthority) {
		toSerialize["certificateAuthority"] = o.CertificateAuthority
	}
	return toSerialize, nil
}

type NullableTrustStoreDnListInnerBasicConstraints struct {
	value *TrustStoreDnListInnerBasicConstraints
	isSet bool
}

func (v NullableTrustStoreDnListInnerBasicConstraints) Get() *TrustStoreDnListInnerBasicConstraints {
	return v.value
}

func (v *NullableTrustStoreDnListInnerBasicConstraints) Set(val *TrustStoreDnListInnerBasicConstraints) {
	v.value = val
	v.isSet = true
}

func (v NullableTrustStoreDnListInnerBasicConstraints) IsSet() bool {
	return v.isSet
}

func (v *NullableTrustStoreDnListInnerBasicConstraints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrustStoreDnListInnerBasicConstraints(val *TrustStoreDnListInnerBasicConstraints) *NullableTrustStoreDnListInnerBasicConstraints {
	return &NullableTrustStoreDnListInnerBasicConstraints{value: val, isSet: true}
}

func (v NullableTrustStoreDnListInnerBasicConstraints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrustStoreDnListInnerBasicConstraints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


