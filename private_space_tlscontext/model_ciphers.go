/*
Private Space TLS Context API

Description of the Private Space TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space_tlscontext

import (
	"encoding/json"
)

// checks if the Ciphers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ciphers{}

// Ciphers struct for Ciphers
type Ciphers struct {
	Aes128GcmSha256 *bool `json:"aes128GcmSha256,omitempty"`
	Aes128Sha256 *bool `json:"aes128Sha256,omitempty"`
	Aes256GcmSha384 *bool `json:"aes256GcmSha384,omitempty"`
	Aes256Sha256 *bool `json:"aes256Sha256,omitempty"`
	DheRsaAes128Sha256 *bool `json:"dheRsaAes128Sha256,omitempty"`
	DheRsaAes256GcmSha384 *bool `json:"dheRsaAes256GcmSha384,omitempty"`
	DheRsaAes256Sha256 *bool `json:"dheRsaAes256Sha256,omitempty"`
	EcdheEcdsaAes128GcmSha256 *bool `json:"ecdheEcdsaAes128GcmSha256,omitempty"`
	EcdheEcdsaAes256GcmSha384 *bool `json:"ecdheEcdsaAes256GcmSha384,omitempty"`
	EcdheRsaAes128GcmSha256 *bool `json:"ecdheRsaAes128GcmSha256,omitempty"`
	EcdheRsaAes256GcmSha384 *bool `json:"ecdheRsaAes256GcmSha384,omitempty"`
	EcdheEcdsaChacha20Poly1305 *bool `json:"ecdheEcdsaChacha20Poly1305,omitempty"`
	EcdheRsaChacha20Poly1305 *bool `json:"ecdheRsaChacha20Poly1305,omitempty"`
	DheRsaChacha20Poly1305 *bool `json:"dheRsaChacha20Poly1305,omitempty"`
	TlsAes256GcmSha384 *bool `json:"tlsAes256GcmSha384,omitempty"`
	TlsChacha20Poly1305Sha256 *bool `json:"tlsChacha20Poly1305Sha256,omitempty"`
	TlsAes128GcmSha256 *bool `json:"tlsAes128GcmSha256,omitempty"`
}

// NewCiphers instantiates a new Ciphers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCiphers() *Ciphers {
	this := Ciphers{}
	return &this
}

// NewCiphersWithDefaults instantiates a new Ciphers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCiphersWithDefaults() *Ciphers {
	this := Ciphers{}
	return &this
}

// GetAes128GcmSha256 returns the Aes128GcmSha256 field value if set, zero value otherwise.
func (o *Ciphers) GetAes128GcmSha256() bool {
	if o == nil || IsNil(o.Aes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.Aes128GcmSha256
}

// GetAes128GcmSha256Ok returns a tuple with the Aes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.Aes128GcmSha256) {
		return nil, false
	}
	return o.Aes128GcmSha256, true
}

// HasAes128GcmSha256 returns a boolean if a field has been set.
func (o *Ciphers) HasAes128GcmSha256() bool {
	if o != nil && !IsNil(o.Aes128GcmSha256) {
		return true
	}

	return false
}

// SetAes128GcmSha256 gets a reference to the given bool and assigns it to the Aes128GcmSha256 field.
func (o *Ciphers) SetAes128GcmSha256(v bool) {
	o.Aes128GcmSha256 = &v
}

// GetAes128Sha256 returns the Aes128Sha256 field value if set, zero value otherwise.
func (o *Ciphers) GetAes128Sha256() bool {
	if o == nil || IsNil(o.Aes128Sha256) {
		var ret bool
		return ret
	}
	return *o.Aes128Sha256
}

// GetAes128Sha256Ok returns a tuple with the Aes128Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetAes128Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.Aes128Sha256) {
		return nil, false
	}
	return o.Aes128Sha256, true
}

// HasAes128Sha256 returns a boolean if a field has been set.
func (o *Ciphers) HasAes128Sha256() bool {
	if o != nil && !IsNil(o.Aes128Sha256) {
		return true
	}

	return false
}

// SetAes128Sha256 gets a reference to the given bool and assigns it to the Aes128Sha256 field.
func (o *Ciphers) SetAes128Sha256(v bool) {
	o.Aes128Sha256 = &v
}

// GetAes256GcmSha384 returns the Aes256GcmSha384 field value if set, zero value otherwise.
func (o *Ciphers) GetAes256GcmSha384() bool {
	if o == nil || IsNil(o.Aes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.Aes256GcmSha384
}

// GetAes256GcmSha384Ok returns a tuple with the Aes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.Aes256GcmSha384) {
		return nil, false
	}
	return o.Aes256GcmSha384, true
}

// HasAes256GcmSha384 returns a boolean if a field has been set.
func (o *Ciphers) HasAes256GcmSha384() bool {
	if o != nil && !IsNil(o.Aes256GcmSha384) {
		return true
	}

	return false
}

// SetAes256GcmSha384 gets a reference to the given bool and assigns it to the Aes256GcmSha384 field.
func (o *Ciphers) SetAes256GcmSha384(v bool) {
	o.Aes256GcmSha384 = &v
}

// GetAes256Sha256 returns the Aes256Sha256 field value if set, zero value otherwise.
func (o *Ciphers) GetAes256Sha256() bool {
	if o == nil || IsNil(o.Aes256Sha256) {
		var ret bool
		return ret
	}
	return *o.Aes256Sha256
}

// GetAes256Sha256Ok returns a tuple with the Aes256Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetAes256Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.Aes256Sha256) {
		return nil, false
	}
	return o.Aes256Sha256, true
}

// HasAes256Sha256 returns a boolean if a field has been set.
func (o *Ciphers) HasAes256Sha256() bool {
	if o != nil && !IsNil(o.Aes256Sha256) {
		return true
	}

	return false
}

// SetAes256Sha256 gets a reference to the given bool and assigns it to the Aes256Sha256 field.
func (o *Ciphers) SetAes256Sha256(v bool) {
	o.Aes256Sha256 = &v
}

// GetDheRsaAes128Sha256 returns the DheRsaAes128Sha256 field value if set, zero value otherwise.
func (o *Ciphers) GetDheRsaAes128Sha256() bool {
	if o == nil || IsNil(o.DheRsaAes128Sha256) {
		var ret bool
		return ret
	}
	return *o.DheRsaAes128Sha256
}

// GetDheRsaAes128Sha256Ok returns a tuple with the DheRsaAes128Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetDheRsaAes128Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaAes128Sha256) {
		return nil, false
	}
	return o.DheRsaAes128Sha256, true
}

// HasDheRsaAes128Sha256 returns a boolean if a field has been set.
func (o *Ciphers) HasDheRsaAes128Sha256() bool {
	if o != nil && !IsNil(o.DheRsaAes128Sha256) {
		return true
	}

	return false
}

// SetDheRsaAes128Sha256 gets a reference to the given bool and assigns it to the DheRsaAes128Sha256 field.
func (o *Ciphers) SetDheRsaAes128Sha256(v bool) {
	o.DheRsaAes128Sha256 = &v
}

// GetDheRsaAes256GcmSha384 returns the DheRsaAes256GcmSha384 field value if set, zero value otherwise.
func (o *Ciphers) GetDheRsaAes256GcmSha384() bool {
	if o == nil || IsNil(o.DheRsaAes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.DheRsaAes256GcmSha384
}

// GetDheRsaAes256GcmSha384Ok returns a tuple with the DheRsaAes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetDheRsaAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaAes256GcmSha384) {
		return nil, false
	}
	return o.DheRsaAes256GcmSha384, true
}

// HasDheRsaAes256GcmSha384 returns a boolean if a field has been set.
func (o *Ciphers) HasDheRsaAes256GcmSha384() bool {
	if o != nil && !IsNil(o.DheRsaAes256GcmSha384) {
		return true
	}

	return false
}

// SetDheRsaAes256GcmSha384 gets a reference to the given bool and assigns it to the DheRsaAes256GcmSha384 field.
func (o *Ciphers) SetDheRsaAes256GcmSha384(v bool) {
	o.DheRsaAes256GcmSha384 = &v
}

// GetDheRsaAes256Sha256 returns the DheRsaAes256Sha256 field value if set, zero value otherwise.
func (o *Ciphers) GetDheRsaAes256Sha256() bool {
	if o == nil || IsNil(o.DheRsaAes256Sha256) {
		var ret bool
		return ret
	}
	return *o.DheRsaAes256Sha256
}

// GetDheRsaAes256Sha256Ok returns a tuple with the DheRsaAes256Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetDheRsaAes256Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaAes256Sha256) {
		return nil, false
	}
	return o.DheRsaAes256Sha256, true
}

// HasDheRsaAes256Sha256 returns a boolean if a field has been set.
func (o *Ciphers) HasDheRsaAes256Sha256() bool {
	if o != nil && !IsNil(o.DheRsaAes256Sha256) {
		return true
	}

	return false
}

// SetDheRsaAes256Sha256 gets a reference to the given bool and assigns it to the DheRsaAes256Sha256 field.
func (o *Ciphers) SetDheRsaAes256Sha256(v bool) {
	o.DheRsaAes256Sha256 = &v
}

// GetEcdheEcdsaAes128GcmSha256 returns the EcdheEcdsaAes128GcmSha256 field value if set, zero value otherwise.
func (o *Ciphers) GetEcdheEcdsaAes128GcmSha256() bool {
	if o == nil || IsNil(o.EcdheEcdsaAes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.EcdheEcdsaAes128GcmSha256
}

// GetEcdheEcdsaAes128GcmSha256Ok returns a tuple with the EcdheEcdsaAes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetEcdheEcdsaAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheEcdsaAes128GcmSha256) {
		return nil, false
	}
	return o.EcdheEcdsaAes128GcmSha256, true
}

// HasEcdheEcdsaAes128GcmSha256 returns a boolean if a field has been set.
func (o *Ciphers) HasEcdheEcdsaAes128GcmSha256() bool {
	if o != nil && !IsNil(o.EcdheEcdsaAes128GcmSha256) {
		return true
	}

	return false
}

// SetEcdheEcdsaAes128GcmSha256 gets a reference to the given bool and assigns it to the EcdheEcdsaAes128GcmSha256 field.
func (o *Ciphers) SetEcdheEcdsaAes128GcmSha256(v bool) {
	o.EcdheEcdsaAes128GcmSha256 = &v
}

// GetEcdheEcdsaAes256GcmSha384 returns the EcdheEcdsaAes256GcmSha384 field value if set, zero value otherwise.
func (o *Ciphers) GetEcdheEcdsaAes256GcmSha384() bool {
	if o == nil || IsNil(o.EcdheEcdsaAes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.EcdheEcdsaAes256GcmSha384
}

// GetEcdheEcdsaAes256GcmSha384Ok returns a tuple with the EcdheEcdsaAes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetEcdheEcdsaAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheEcdsaAes256GcmSha384) {
		return nil, false
	}
	return o.EcdheEcdsaAes256GcmSha384, true
}

// HasEcdheEcdsaAes256GcmSha384 returns a boolean if a field has been set.
func (o *Ciphers) HasEcdheEcdsaAes256GcmSha384() bool {
	if o != nil && !IsNil(o.EcdheEcdsaAes256GcmSha384) {
		return true
	}

	return false
}

// SetEcdheEcdsaAes256GcmSha384 gets a reference to the given bool and assigns it to the EcdheEcdsaAes256GcmSha384 field.
func (o *Ciphers) SetEcdheEcdsaAes256GcmSha384(v bool) {
	o.EcdheEcdsaAes256GcmSha384 = &v
}

// GetEcdheRsaAes128GcmSha256 returns the EcdheRsaAes128GcmSha256 field value if set, zero value otherwise.
func (o *Ciphers) GetEcdheRsaAes128GcmSha256() bool {
	if o == nil || IsNil(o.EcdheRsaAes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.EcdheRsaAes128GcmSha256
}

// GetEcdheRsaAes128GcmSha256Ok returns a tuple with the EcdheRsaAes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetEcdheRsaAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheRsaAes128GcmSha256) {
		return nil, false
	}
	return o.EcdheRsaAes128GcmSha256, true
}

// HasEcdheRsaAes128GcmSha256 returns a boolean if a field has been set.
func (o *Ciphers) HasEcdheRsaAes128GcmSha256() bool {
	if o != nil && !IsNil(o.EcdheRsaAes128GcmSha256) {
		return true
	}

	return false
}

// SetEcdheRsaAes128GcmSha256 gets a reference to the given bool and assigns it to the EcdheRsaAes128GcmSha256 field.
func (o *Ciphers) SetEcdheRsaAes128GcmSha256(v bool) {
	o.EcdheRsaAes128GcmSha256 = &v
}

// GetEcdheRsaAes256GcmSha384 returns the EcdheRsaAes256GcmSha384 field value if set, zero value otherwise.
func (o *Ciphers) GetEcdheRsaAes256GcmSha384() bool {
	if o == nil || IsNil(o.EcdheRsaAes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.EcdheRsaAes256GcmSha384
}

// GetEcdheRsaAes256GcmSha384Ok returns a tuple with the EcdheRsaAes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetEcdheRsaAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheRsaAes256GcmSha384) {
		return nil, false
	}
	return o.EcdheRsaAes256GcmSha384, true
}

// HasEcdheRsaAes256GcmSha384 returns a boolean if a field has been set.
func (o *Ciphers) HasEcdheRsaAes256GcmSha384() bool {
	if o != nil && !IsNil(o.EcdheRsaAes256GcmSha384) {
		return true
	}

	return false
}

// SetEcdheRsaAes256GcmSha384 gets a reference to the given bool and assigns it to the EcdheRsaAes256GcmSha384 field.
func (o *Ciphers) SetEcdheRsaAes256GcmSha384(v bool) {
	o.EcdheRsaAes256GcmSha384 = &v
}

// GetEcdheEcdsaChacha20Poly1305 returns the EcdheEcdsaChacha20Poly1305 field value if set, zero value otherwise.
func (o *Ciphers) GetEcdheEcdsaChacha20Poly1305() bool {
	if o == nil || IsNil(o.EcdheEcdsaChacha20Poly1305) {
		var ret bool
		return ret
	}
	return *o.EcdheEcdsaChacha20Poly1305
}

// GetEcdheEcdsaChacha20Poly1305Ok returns a tuple with the EcdheEcdsaChacha20Poly1305 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetEcdheEcdsaChacha20Poly1305Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheEcdsaChacha20Poly1305) {
		return nil, false
	}
	return o.EcdheEcdsaChacha20Poly1305, true
}

// HasEcdheEcdsaChacha20Poly1305 returns a boolean if a field has been set.
func (o *Ciphers) HasEcdheEcdsaChacha20Poly1305() bool {
	if o != nil && !IsNil(o.EcdheEcdsaChacha20Poly1305) {
		return true
	}

	return false
}

// SetEcdheEcdsaChacha20Poly1305 gets a reference to the given bool and assigns it to the EcdheEcdsaChacha20Poly1305 field.
func (o *Ciphers) SetEcdheEcdsaChacha20Poly1305(v bool) {
	o.EcdheEcdsaChacha20Poly1305 = &v
}

// GetEcdheRsaChacha20Poly1305 returns the EcdheRsaChacha20Poly1305 field value if set, zero value otherwise.
func (o *Ciphers) GetEcdheRsaChacha20Poly1305() bool {
	if o == nil || IsNil(o.EcdheRsaChacha20Poly1305) {
		var ret bool
		return ret
	}
	return *o.EcdheRsaChacha20Poly1305
}

// GetEcdheRsaChacha20Poly1305Ok returns a tuple with the EcdheRsaChacha20Poly1305 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetEcdheRsaChacha20Poly1305Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheRsaChacha20Poly1305) {
		return nil, false
	}
	return o.EcdheRsaChacha20Poly1305, true
}

// HasEcdheRsaChacha20Poly1305 returns a boolean if a field has been set.
func (o *Ciphers) HasEcdheRsaChacha20Poly1305() bool {
	if o != nil && !IsNil(o.EcdheRsaChacha20Poly1305) {
		return true
	}

	return false
}

// SetEcdheRsaChacha20Poly1305 gets a reference to the given bool and assigns it to the EcdheRsaChacha20Poly1305 field.
func (o *Ciphers) SetEcdheRsaChacha20Poly1305(v bool) {
	o.EcdheRsaChacha20Poly1305 = &v
}

// GetDheRsaChacha20Poly1305 returns the DheRsaChacha20Poly1305 field value if set, zero value otherwise.
func (o *Ciphers) GetDheRsaChacha20Poly1305() bool {
	if o == nil || IsNil(o.DheRsaChacha20Poly1305) {
		var ret bool
		return ret
	}
	return *o.DheRsaChacha20Poly1305
}

// GetDheRsaChacha20Poly1305Ok returns a tuple with the DheRsaChacha20Poly1305 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetDheRsaChacha20Poly1305Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaChacha20Poly1305) {
		return nil, false
	}
	return o.DheRsaChacha20Poly1305, true
}

// HasDheRsaChacha20Poly1305 returns a boolean if a field has been set.
func (o *Ciphers) HasDheRsaChacha20Poly1305() bool {
	if o != nil && !IsNil(o.DheRsaChacha20Poly1305) {
		return true
	}

	return false
}

// SetDheRsaChacha20Poly1305 gets a reference to the given bool and assigns it to the DheRsaChacha20Poly1305 field.
func (o *Ciphers) SetDheRsaChacha20Poly1305(v bool) {
	o.DheRsaChacha20Poly1305 = &v
}

// GetTlsAes256GcmSha384 returns the TlsAes256GcmSha384 field value if set, zero value otherwise.
func (o *Ciphers) GetTlsAes256GcmSha384() bool {
	if o == nil || IsNil(o.TlsAes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.TlsAes256GcmSha384
}

// GetTlsAes256GcmSha384Ok returns a tuple with the TlsAes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetTlsAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.TlsAes256GcmSha384) {
		return nil, false
	}
	return o.TlsAes256GcmSha384, true
}

// HasTlsAes256GcmSha384 returns a boolean if a field has been set.
func (o *Ciphers) HasTlsAes256GcmSha384() bool {
	if o != nil && !IsNil(o.TlsAes256GcmSha384) {
		return true
	}

	return false
}

// SetTlsAes256GcmSha384 gets a reference to the given bool and assigns it to the TlsAes256GcmSha384 field.
func (o *Ciphers) SetTlsAes256GcmSha384(v bool) {
	o.TlsAes256GcmSha384 = &v
}

// GetTlsChacha20Poly1305Sha256 returns the TlsChacha20Poly1305Sha256 field value if set, zero value otherwise.
func (o *Ciphers) GetTlsChacha20Poly1305Sha256() bool {
	if o == nil || IsNil(o.TlsChacha20Poly1305Sha256) {
		var ret bool
		return ret
	}
	return *o.TlsChacha20Poly1305Sha256
}

// GetTlsChacha20Poly1305Sha256Ok returns a tuple with the TlsChacha20Poly1305Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetTlsChacha20Poly1305Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.TlsChacha20Poly1305Sha256) {
		return nil, false
	}
	return o.TlsChacha20Poly1305Sha256, true
}

// HasTlsChacha20Poly1305Sha256 returns a boolean if a field has been set.
func (o *Ciphers) HasTlsChacha20Poly1305Sha256() bool {
	if o != nil && !IsNil(o.TlsChacha20Poly1305Sha256) {
		return true
	}

	return false
}

// SetTlsChacha20Poly1305Sha256 gets a reference to the given bool and assigns it to the TlsChacha20Poly1305Sha256 field.
func (o *Ciphers) SetTlsChacha20Poly1305Sha256(v bool) {
	o.TlsChacha20Poly1305Sha256 = &v
}

// GetTlsAes128GcmSha256 returns the TlsAes128GcmSha256 field value if set, zero value otherwise.
func (o *Ciphers) GetTlsAes128GcmSha256() bool {
	if o == nil || IsNil(o.TlsAes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.TlsAes128GcmSha256
}

// GetTlsAes128GcmSha256Ok returns a tuple with the TlsAes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ciphers) GetTlsAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.TlsAes128GcmSha256) {
		return nil, false
	}
	return o.TlsAes128GcmSha256, true
}

// HasTlsAes128GcmSha256 returns a boolean if a field has been set.
func (o *Ciphers) HasTlsAes128GcmSha256() bool {
	if o != nil && !IsNil(o.TlsAes128GcmSha256) {
		return true
	}

	return false
}

// SetTlsAes128GcmSha256 gets a reference to the given bool and assigns it to the TlsAes128GcmSha256 field.
func (o *Ciphers) SetTlsAes128GcmSha256(v bool) {
	o.TlsAes128GcmSha256 = &v
}

func (o Ciphers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ciphers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aes128GcmSha256) {
		toSerialize["aes128GcmSha256"] = o.Aes128GcmSha256
	}
	if !IsNil(o.Aes128Sha256) {
		toSerialize["aes128Sha256"] = o.Aes128Sha256
	}
	if !IsNil(o.Aes256GcmSha384) {
		toSerialize["aes256GcmSha384"] = o.Aes256GcmSha384
	}
	if !IsNil(o.Aes256Sha256) {
		toSerialize["aes256Sha256"] = o.Aes256Sha256
	}
	if !IsNil(o.DheRsaAes128Sha256) {
		toSerialize["dheRsaAes128Sha256"] = o.DheRsaAes128Sha256
	}
	if !IsNil(o.DheRsaAes256GcmSha384) {
		toSerialize["dheRsaAes256GcmSha384"] = o.DheRsaAes256GcmSha384
	}
	if !IsNil(o.DheRsaAes256Sha256) {
		toSerialize["dheRsaAes256Sha256"] = o.DheRsaAes256Sha256
	}
	if !IsNil(o.EcdheEcdsaAes128GcmSha256) {
		toSerialize["ecdheEcdsaAes128GcmSha256"] = o.EcdheEcdsaAes128GcmSha256
	}
	if !IsNil(o.EcdheEcdsaAes256GcmSha384) {
		toSerialize["ecdheEcdsaAes256GcmSha384"] = o.EcdheEcdsaAes256GcmSha384
	}
	if !IsNil(o.EcdheRsaAes128GcmSha256) {
		toSerialize["ecdheRsaAes128GcmSha256"] = o.EcdheRsaAes128GcmSha256
	}
	if !IsNil(o.EcdheRsaAes256GcmSha384) {
		toSerialize["ecdheRsaAes256GcmSha384"] = o.EcdheRsaAes256GcmSha384
	}
	if !IsNil(o.EcdheEcdsaChacha20Poly1305) {
		toSerialize["ecdheEcdsaChacha20Poly1305"] = o.EcdheEcdsaChacha20Poly1305
	}
	if !IsNil(o.EcdheRsaChacha20Poly1305) {
		toSerialize["ecdheRsaChacha20Poly1305"] = o.EcdheRsaChacha20Poly1305
	}
	if !IsNil(o.DheRsaChacha20Poly1305) {
		toSerialize["dheRsaChacha20Poly1305"] = o.DheRsaChacha20Poly1305
	}
	if !IsNil(o.TlsAes256GcmSha384) {
		toSerialize["tlsAes256GcmSha384"] = o.TlsAes256GcmSha384
	}
	if !IsNil(o.TlsChacha20Poly1305Sha256) {
		toSerialize["tlsChacha20Poly1305Sha256"] = o.TlsChacha20Poly1305Sha256
	}
	if !IsNil(o.TlsAes128GcmSha256) {
		toSerialize["tlsAes128GcmSha256"] = o.TlsAes128GcmSha256
	}
	return toSerialize, nil
}

type NullableCiphers struct {
	value *Ciphers
	isSet bool
}

func (v NullableCiphers) Get() *Ciphers {
	return v.value
}

func (v *NullableCiphers) Set(val *Ciphers) {
	v.value = val
	v.isSet = true
}

func (v NullableCiphers) IsSet() bool {
	return v.isSet
}

func (v *NullableCiphers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCiphers(val *Ciphers) *NullableCiphers {
	return &NullableCiphers{value: val, isSet: true}
}

func (v NullableCiphers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCiphers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


