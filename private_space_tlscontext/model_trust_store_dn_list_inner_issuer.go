/*
Private Space TLS Context API

Description of the Private Space TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space_tlscontext

import (
	"encoding/json"
)

// checks if the TrustStoreDnListInnerIssuer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrustStoreDnListInnerIssuer{}

// TrustStoreDnListInnerIssuer struct for TrustStoreDnListInnerIssuer
type TrustStoreDnListInnerIssuer struct {
	CommonName *string `json:"commonName,omitempty"`
	CountryName *string `json:"countryName,omitempty"`
	LocalityName *string `json:"localityName,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	OrganizationUnit *string `json:"organizationUnit,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewTrustStoreDnListInnerIssuer instantiates a new TrustStoreDnListInnerIssuer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrustStoreDnListInnerIssuer() *TrustStoreDnListInnerIssuer {
	this := TrustStoreDnListInnerIssuer{}
	return &this
}

// NewTrustStoreDnListInnerIssuerWithDefaults instantiates a new TrustStoreDnListInnerIssuer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrustStoreDnListInnerIssuerWithDefaults() *TrustStoreDnListInnerIssuer {
	this := TrustStoreDnListInnerIssuer{}
	return &this
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *TrustStoreDnListInnerIssuer) GetCommonName() string {
	if o == nil || IsNil(o.CommonName) {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInnerIssuer) GetCommonNameOk() (*string, bool) {
	if o == nil || IsNil(o.CommonName) {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *TrustStoreDnListInnerIssuer) HasCommonName() bool {
	if o != nil && !IsNil(o.CommonName) {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *TrustStoreDnListInnerIssuer) SetCommonName(v string) {
	o.CommonName = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *TrustStoreDnListInnerIssuer) GetCountryName() string {
	if o == nil || IsNil(o.CountryName) {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInnerIssuer) GetCountryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CountryName) {
		return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *TrustStoreDnListInnerIssuer) HasCountryName() bool {
	if o != nil && !IsNil(o.CountryName) {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *TrustStoreDnListInnerIssuer) SetCountryName(v string) {
	o.CountryName = &v
}

// GetLocalityName returns the LocalityName field value if set, zero value otherwise.
func (o *TrustStoreDnListInnerIssuer) GetLocalityName() string {
	if o == nil || IsNil(o.LocalityName) {
		var ret string
		return ret
	}
	return *o.LocalityName
}

// GetLocalityNameOk returns a tuple with the LocalityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInnerIssuer) GetLocalityNameOk() (*string, bool) {
	if o == nil || IsNil(o.LocalityName) {
		return nil, false
	}
	return o.LocalityName, true
}

// HasLocalityName returns a boolean if a field has been set.
func (o *TrustStoreDnListInnerIssuer) HasLocalityName() bool {
	if o != nil && !IsNil(o.LocalityName) {
		return true
	}

	return false
}

// SetLocalityName gets a reference to the given string and assigns it to the LocalityName field.
func (o *TrustStoreDnListInnerIssuer) SetLocalityName(v string) {
	o.LocalityName = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *TrustStoreDnListInnerIssuer) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInnerIssuer) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *TrustStoreDnListInnerIssuer) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *TrustStoreDnListInnerIssuer) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationUnit returns the OrganizationUnit field value if set, zero value otherwise.
func (o *TrustStoreDnListInnerIssuer) GetOrganizationUnit() string {
	if o == nil || IsNil(o.OrganizationUnit) {
		var ret string
		return ret
	}
	return *o.OrganizationUnit
}

// GetOrganizationUnitOk returns a tuple with the OrganizationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInnerIssuer) GetOrganizationUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationUnit) {
		return nil, false
	}
	return o.OrganizationUnit, true
}

// HasOrganizationUnit returns a boolean if a field has been set.
func (o *TrustStoreDnListInnerIssuer) HasOrganizationUnit() bool {
	if o != nil && !IsNil(o.OrganizationUnit) {
		return true
	}

	return false
}

// SetOrganizationUnit gets a reference to the given string and assigns it to the OrganizationUnit field.
func (o *TrustStoreDnListInnerIssuer) SetOrganizationUnit(v string) {
	o.OrganizationUnit = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *TrustStoreDnListInnerIssuer) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreDnListInnerIssuer) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *TrustStoreDnListInnerIssuer) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *TrustStoreDnListInnerIssuer) SetState(v string) {
	o.State = &v
}

func (o TrustStoreDnListInnerIssuer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrustStoreDnListInnerIssuer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommonName) {
		toSerialize["commonName"] = o.CommonName
	}
	if !IsNil(o.CountryName) {
		toSerialize["countryName"] = o.CountryName
	}
	if !IsNil(o.LocalityName) {
		toSerialize["localityName"] = o.LocalityName
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationUnit) {
		toSerialize["organizationUnit"] = o.OrganizationUnit
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableTrustStoreDnListInnerIssuer struct {
	value *TrustStoreDnListInnerIssuer
	isSet bool
}

func (v NullableTrustStoreDnListInnerIssuer) Get() *TrustStoreDnListInnerIssuer {
	return v.value
}

func (v *NullableTrustStoreDnListInnerIssuer) Set(val *TrustStoreDnListInnerIssuer) {
	v.value = val
	v.isSet = true
}

func (v NullableTrustStoreDnListInnerIssuer) IsSet() bool {
	return v.isSet
}

func (v *NullableTrustStoreDnListInnerIssuer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrustStoreDnListInnerIssuer(val *TrustStoreDnListInnerIssuer) *NullableTrustStoreDnListInnerIssuer {
	return &NullableTrustStoreDnListInnerIssuer{value: val, isSet: true}
}

func (v NullableTrustStoreDnListInnerIssuer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrustStoreDnListInnerIssuer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


