/*
Private Space TLS Context API

Description of the Private Space TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space_tlscontext

import (
	"encoding/json"
)

// checks if the TlsContextPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TlsContextPostBody{}

// TlsContextPostBody struct for TlsContextPostBody
type TlsContextPostBody struct {
	Name *string `json:"name,omitempty"`
	TlsConfig *TlsContextPostBodyTlsConfig `json:"tlsConfig,omitempty"`
	Ciphers *Ciphers `json:"ciphers,omitempty"`
}

// NewTlsContextPostBody instantiates a new TlsContextPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsContextPostBody() *TlsContextPostBody {
	this := TlsContextPostBody{}
	return &this
}

// NewTlsContextPostBodyWithDefaults instantiates a new TlsContextPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsContextPostBodyWithDefaults() *TlsContextPostBody {
	this := TlsContextPostBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TlsContextPostBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextPostBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TlsContextPostBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TlsContextPostBody) SetName(v string) {
	o.Name = &v
}

// GetTlsConfig returns the TlsConfig field value if set, zero value otherwise.
func (o *TlsContextPostBody) GetTlsConfig() TlsContextPostBodyTlsConfig {
	if o == nil || IsNil(o.TlsConfig) {
		var ret TlsContextPostBodyTlsConfig
		return ret
	}
	return *o.TlsConfig
}

// GetTlsConfigOk returns a tuple with the TlsConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextPostBody) GetTlsConfigOk() (*TlsContextPostBodyTlsConfig, bool) {
	if o == nil || IsNil(o.TlsConfig) {
		return nil, false
	}
	return o.TlsConfig, true
}

// HasTlsConfig returns a boolean if a field has been set.
func (o *TlsContextPostBody) HasTlsConfig() bool {
	if o != nil && !IsNil(o.TlsConfig) {
		return true
	}

	return false
}

// SetTlsConfig gets a reference to the given TlsContextPostBodyTlsConfig and assigns it to the TlsConfig field.
func (o *TlsContextPostBody) SetTlsConfig(v TlsContextPostBodyTlsConfig) {
	o.TlsConfig = &v
}

// GetCiphers returns the Ciphers field value if set, zero value otherwise.
func (o *TlsContextPostBody) GetCiphers() Ciphers {
	if o == nil || IsNil(o.Ciphers) {
		var ret Ciphers
		return ret
	}
	return *o.Ciphers
}

// GetCiphersOk returns a tuple with the Ciphers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextPostBody) GetCiphersOk() (*Ciphers, bool) {
	if o == nil || IsNil(o.Ciphers) {
		return nil, false
	}
	return o.Ciphers, true
}

// HasCiphers returns a boolean if a field has been set.
func (o *TlsContextPostBody) HasCiphers() bool {
	if o != nil && !IsNil(o.Ciphers) {
		return true
	}

	return false
}

// SetCiphers gets a reference to the given Ciphers and assigns it to the Ciphers field.
func (o *TlsContextPostBody) SetCiphers(v Ciphers) {
	o.Ciphers = &v
}

func (o TlsContextPostBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TlsContextPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TlsConfig) {
		toSerialize["tlsConfig"] = o.TlsConfig
	}
	if !IsNil(o.Ciphers) {
		toSerialize["ciphers"] = o.Ciphers
	}
	return toSerialize, nil
}

type NullableTlsContextPostBody struct {
	value *TlsContextPostBody
	isSet bool
}

func (v NullableTlsContextPostBody) Get() *TlsContextPostBody {
	return v.value
}

func (v *NullableTlsContextPostBody) Set(val *TlsContextPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsContextPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsContextPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsContextPostBody(val *TlsContextPostBody) *NullableTlsContextPostBody {
	return &NullableTlsContextPostBody{value: val, isSet: true}
}

func (v NullableTlsContextPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsContextPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


