/*
API Manager Contract API

API Manager Contract API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_contract

import (
	"encoding/json"
)

// checks if the GetContractsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetContractsResponse{}

// GetContractsResponse struct for GetContractsResponse
type GetContractsResponse struct {
	Total *int32 `json:"total,omitempty"`
	Contracts []Contract `json:"contracts,omitempty"`
}

// NewGetContractsResponse instantiates a new GetContractsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetContractsResponse() *GetContractsResponse {
	this := GetContractsResponse{}
	return &this
}

// NewGetContractsResponseWithDefaults instantiates a new GetContractsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetContractsResponseWithDefaults() *GetContractsResponse {
	this := GetContractsResponse{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetContractsResponse) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContractsResponse) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetContractsResponse) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetContractsResponse) SetTotal(v int32) {
	o.Total = &v
}

// GetContracts returns the Contracts field value if set, zero value otherwise.
func (o *GetContractsResponse) GetContracts() []Contract {
	if o == nil || IsNil(o.Contracts) {
		var ret []Contract
		return ret
	}
	return o.Contracts
}

// GetContractsOk returns a tuple with the Contracts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetContractsResponse) GetContractsOk() ([]Contract, bool) {
	if o == nil || IsNil(o.Contracts) {
		return nil, false
	}
	return o.Contracts, true
}

// HasContracts returns a boolean if a field has been set.
func (o *GetContractsResponse) HasContracts() bool {
	if o != nil && !IsNil(o.Contracts) {
		return true
	}

	return false
}

// SetContracts gets a reference to the given []Contract and assigns it to the Contracts field.
func (o *GetContractsResponse) SetContracts(v []Contract) {
	o.Contracts = v
}

func (o GetContractsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetContractsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Contracts) {
		toSerialize["contracts"] = o.Contracts
	}
	return toSerialize, nil
}

type NullableGetContractsResponse struct {
	value *GetContractsResponse
	isSet bool
}

func (v NullableGetContractsResponse) Get() *GetContractsResponse {
	return v.value
}

func (v *NullableGetContractsResponse) Set(val *GetContractsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetContractsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetContractsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetContractsResponse(val *GetContractsResponse) *NullableGetContractsResponse {
	return &NullableGetContractsResponse{value: val, isSet: true}
}

func (v NullableGetContractsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetContractsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


