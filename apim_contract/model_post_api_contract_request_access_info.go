/*
API Manager Contract API

API Manager Contract API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_contract

import (
	"encoding/json"
)

// checks if the PostApiContractRequestAccessInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostApiContractRequestAccessInfo{}

// PostApiContractRequestAccessInfo struct for PostApiContractRequestAccessInfo
type PostApiContractRequestAccessInfo struct {
	Reason *string `json:"reason,omitempty"`
}

// NewPostApiContractRequestAccessInfo instantiates a new PostApiContractRequestAccessInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostApiContractRequestAccessInfo() *PostApiContractRequestAccessInfo {
	this := PostApiContractRequestAccessInfo{}
	return &this
}

// NewPostApiContractRequestAccessInfoWithDefaults instantiates a new PostApiContractRequestAccessInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostApiContractRequestAccessInfoWithDefaults() *PostApiContractRequestAccessInfo {
	this := PostApiContractRequestAccessInfo{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *PostApiContractRequestAccessInfo) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostApiContractRequestAccessInfo) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *PostApiContractRequestAccessInfo) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *PostApiContractRequestAccessInfo) SetReason(v string) {
	o.Reason = &v
}

func (o PostApiContractRequestAccessInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostApiContractRequestAccessInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullablePostApiContractRequestAccessInfo struct {
	value *PostApiContractRequestAccessInfo
	isSet bool
}

func (v NullablePostApiContractRequestAccessInfo) Get() *PostApiContractRequestAccessInfo {
	return v.value
}

func (v *NullablePostApiContractRequestAccessInfo) Set(val *PostApiContractRequestAccessInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePostApiContractRequestAccessInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePostApiContractRequestAccessInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostApiContractRequestAccessInfo(val *PostApiContractRequestAccessInfo) *NullablePostApiContractRequestAccessInfo {
	return &NullablePostApiContractRequestAccessInfo{value: val, isSet: true}
}

func (v NullablePostApiContractRequestAccessInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostApiContractRequestAccessInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


