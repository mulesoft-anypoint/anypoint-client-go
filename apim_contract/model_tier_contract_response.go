/*
API Manager Contract API

API Manager Contract API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_contract

import (
	"encoding/json"
)

// checks if the TierContractResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TierContractResponse{}

// TierContractResponse struct for TierContractResponse
type TierContractResponse struct {
	Audit *Audit `json:"audit,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Limits []TierContractResponseLimitsInner `json:"limits,omitempty"`
	Status *string `json:"status,omitempty"`
	AutoApprove *bool `json:"autoApprove,omitempty"`
}

// NewTierContractResponse instantiates a new TierContractResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTierContractResponse() *TierContractResponse {
	this := TierContractResponse{}
	return &this
}

// NewTierContractResponseWithDefaults instantiates a new TierContractResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTierContractResponseWithDefaults() *TierContractResponse {
	this := TierContractResponse{}
	return &this
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *TierContractResponse) GetAudit() Audit {
	if o == nil || IsNil(o.Audit) {
		var ret Audit
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TierContractResponse) GetAuditOk() (*Audit, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *TierContractResponse) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given Audit and assigns it to the Audit field.
func (o *TierContractResponse) SetAudit(v Audit) {
	o.Audit = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TierContractResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TierContractResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TierContractResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TierContractResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TierContractResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TierContractResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TierContractResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TierContractResponse) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TierContractResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TierContractResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TierContractResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TierContractResponse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TierContractResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TierContractResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *TierContractResponse) GetLimits() []TierContractResponseLimitsInner {
	if o == nil || IsNil(o.Limits) {
		var ret []TierContractResponseLimitsInner
		return ret
	}
	return o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TierContractResponse) GetLimitsOk() ([]TierContractResponseLimitsInner, bool) {
	if o == nil || IsNil(o.Limits) {
		return nil, false
	}
	return o.Limits, true
}

// HasLimits returns a boolean if a field has been set.
func (o *TierContractResponse) HasLimits() bool {
	if o != nil && !IsNil(o.Limits) {
		return true
	}

	return false
}

// SetLimits gets a reference to the given []TierContractResponseLimitsInner and assigns it to the Limits field.
func (o *TierContractResponse) SetLimits(v []TierContractResponseLimitsInner) {
	o.Limits = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TierContractResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TierContractResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TierContractResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TierContractResponse) SetStatus(v string) {
	o.Status = &v
}

// GetAutoApprove returns the AutoApprove field value if set, zero value otherwise.
func (o *TierContractResponse) GetAutoApprove() bool {
	if o == nil || IsNil(o.AutoApprove) {
		var ret bool
		return ret
	}
	return *o.AutoApprove
}

// GetAutoApproveOk returns a tuple with the AutoApprove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TierContractResponse) GetAutoApproveOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoApprove) {
		return nil, false
	}
	return o.AutoApprove, true
}

// HasAutoApprove returns a boolean if a field has been set.
func (o *TierContractResponse) HasAutoApprove() bool {
	if o != nil && !IsNil(o.AutoApprove) {
		return true
	}

	return false
}

// SetAutoApprove gets a reference to the given bool and assigns it to the AutoApprove field.
func (o *TierContractResponse) SetAutoApprove(v bool) {
	o.AutoApprove = &v
}

func (o TierContractResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TierContractResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Limits) {
		toSerialize["limits"] = o.Limits
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.AutoApprove) {
		toSerialize["autoApprove"] = o.AutoApprove
	}
	return toSerialize, nil
}

type NullableTierContractResponse struct {
	value *TierContractResponse
	isSet bool
}

func (v NullableTierContractResponse) Get() *TierContractResponse {
	return v.value
}

func (v *NullableTierContractResponse) Set(val *TierContractResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTierContractResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTierContractResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTierContractResponse(val *TierContractResponse) *NullableTierContractResponse {
	return &NullableTierContractResponse{value: val, isSet: true}
}

func (v NullableTierContractResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTierContractResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


