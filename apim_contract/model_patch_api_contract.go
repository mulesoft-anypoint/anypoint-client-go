/*
API Manager Contract API

API Manager Contract API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_contract

import (
	"encoding/json"
)

// checks if the PatchApiContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchApiContract{}

// PatchApiContract struct for PatchApiContract
type PatchApiContract struct {
	RequestedTierId *int32 `json:"requestedTierId,omitempty"`
	TierId *int32 `json:"tierId,omitempty"`
}

// NewPatchApiContract instantiates a new PatchApiContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchApiContract() *PatchApiContract {
	this := PatchApiContract{}
	return &this
}

// NewPatchApiContractWithDefaults instantiates a new PatchApiContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchApiContractWithDefaults() *PatchApiContract {
	this := PatchApiContract{}
	return &this
}

// GetRequestedTierId returns the RequestedTierId field value if set, zero value otherwise.
func (o *PatchApiContract) GetRequestedTierId() int32 {
	if o == nil || IsNil(o.RequestedTierId) {
		var ret int32
		return ret
	}
	return *o.RequestedTierId
}

// GetRequestedTierIdOk returns a tuple with the RequestedTierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchApiContract) GetRequestedTierIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RequestedTierId) {
		return nil, false
	}
	return o.RequestedTierId, true
}

// HasRequestedTierId returns a boolean if a field has been set.
func (o *PatchApiContract) HasRequestedTierId() bool {
	if o != nil && !IsNil(o.RequestedTierId) {
		return true
	}

	return false
}

// SetRequestedTierId gets a reference to the given int32 and assigns it to the RequestedTierId field.
func (o *PatchApiContract) SetRequestedTierId(v int32) {
	o.RequestedTierId = &v
}

// GetTierId returns the TierId field value if set, zero value otherwise.
func (o *PatchApiContract) GetTierId() int32 {
	if o == nil || IsNil(o.TierId) {
		var ret int32
		return ret
	}
	return *o.TierId
}

// GetTierIdOk returns a tuple with the TierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchApiContract) GetTierIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TierId) {
		return nil, false
	}
	return o.TierId, true
}

// HasTierId returns a boolean if a field has been set.
func (o *PatchApiContract) HasTierId() bool {
	if o != nil && !IsNil(o.TierId) {
		return true
	}

	return false
}

// SetTierId gets a reference to the given int32 and assigns it to the TierId field.
func (o *PatchApiContract) SetTierId(v int32) {
	o.TierId = &v
}

func (o PatchApiContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchApiContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestedTierId) {
		toSerialize["requestedTierId"] = o.RequestedTierId
	}
	if !IsNil(o.TierId) {
		toSerialize["tierId"] = o.TierId
	}
	return toSerialize, nil
}

type NullablePatchApiContract struct {
	value *PatchApiContract
	isSet bool
}

func (v NullablePatchApiContract) Get() *PatchApiContract {
	return v.value
}

func (v *NullablePatchApiContract) Set(val *PatchApiContract) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchApiContract) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchApiContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchApiContract(val *PatchApiContract) *NullablePatchApiContract {
	return &NullablePatchApiContract{value: val, isSet: true}
}

func (v NullablePatchApiContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchApiContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


