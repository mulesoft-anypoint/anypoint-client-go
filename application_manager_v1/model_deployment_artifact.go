/*
Deployment v1

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Cloudhub 1.0 targets only. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v1

import (
	"encoding/json"
)

// checks if the DeploymentArtifact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentArtifact{}

// DeploymentArtifact Details about the artifact associated with the deployment.
type DeploymentArtifact struct {
	// The timestamp (in milliseconds) when the artifact was last updated.
	LastUpdateTime NullableInt64 `json:"lastUpdateTime,omitempty"`
	// The creation timestamp (in milliseconds); may be null.
	CreateTime NullableInt64 `json:"createTime,omitempty"`
	// The name of the artifact.
	Name *string `json:"name,omitempty"`
	// The file name of the artifact.
	FileName *string `json:"fileName,omitempty"`
}

// NewDeploymentArtifact instantiates a new DeploymentArtifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentArtifact() *DeploymentArtifact {
	this := DeploymentArtifact{}
	return &this
}

// NewDeploymentArtifactWithDefaults instantiates a new DeploymentArtifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentArtifactWithDefaults() *DeploymentArtifact {
	this := DeploymentArtifact{}
	return &this
}

// GetLastUpdateTime returns the LastUpdateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentArtifact) GetLastUpdateTime() int64 {
	if o == nil || IsNil(o.LastUpdateTime.Get()) {
		var ret int64
		return ret
	}
	return *o.LastUpdateTime.Get()
}

// GetLastUpdateTimeOk returns a tuple with the LastUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentArtifact) GetLastUpdateTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdateTime.Get(), o.LastUpdateTime.IsSet()
}

// HasLastUpdateTime returns a boolean if a field has been set.
func (o *DeploymentArtifact) HasLastUpdateTime() bool {
	if o != nil && o.LastUpdateTime.IsSet() {
		return true
	}

	return false
}

// SetLastUpdateTime gets a reference to the given NullableInt64 and assigns it to the LastUpdateTime field.
func (o *DeploymentArtifact) SetLastUpdateTime(v int64) {
	o.LastUpdateTime.Set(&v)
}
// SetLastUpdateTimeNil sets the value for LastUpdateTime to be an explicit nil
func (o *DeploymentArtifact) SetLastUpdateTimeNil() {
	o.LastUpdateTime.Set(nil)
}

// UnsetLastUpdateTime ensures that no value is present for LastUpdateTime, not even an explicit nil
func (o *DeploymentArtifact) UnsetLastUpdateTime() {
	o.LastUpdateTime.Unset()
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentArtifact) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime.Get()) {
		var ret int64
		return ret
	}
	return *o.CreateTime.Get()
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentArtifact) GetCreateTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreateTime.Get(), o.CreateTime.IsSet()
}

// HasCreateTime returns a boolean if a field has been set.
func (o *DeploymentArtifact) HasCreateTime() bool {
	if o != nil && o.CreateTime.IsSet() {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given NullableInt64 and assigns it to the CreateTime field.
func (o *DeploymentArtifact) SetCreateTime(v int64) {
	o.CreateTime.Set(&v)
}
// SetCreateTimeNil sets the value for CreateTime to be an explicit nil
func (o *DeploymentArtifact) SetCreateTimeNil() {
	o.CreateTime.Set(nil)
}

// UnsetCreateTime ensures that no value is present for CreateTime, not even an explicit nil
func (o *DeploymentArtifact) UnsetCreateTime() {
	o.CreateTime.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DeploymentArtifact) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentArtifact) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DeploymentArtifact) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DeploymentArtifact) SetName(v string) {
	o.Name = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *DeploymentArtifact) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentArtifact) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *DeploymentArtifact) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *DeploymentArtifact) SetFileName(v string) {
	o.FileName = &v
}

func (o DeploymentArtifact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentArtifact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LastUpdateTime.IsSet() {
		toSerialize["lastUpdateTime"] = o.LastUpdateTime.Get()
	}
	if o.CreateTime.IsSet() {
		toSerialize["createTime"] = o.CreateTime.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	return toSerialize, nil
}

type NullableDeploymentArtifact struct {
	value *DeploymentArtifact
	isSet bool
}

func (v NullableDeploymentArtifact) Get() *DeploymentArtifact {
	return v.value
}

func (v *NullableDeploymentArtifact) Set(val *DeploymentArtifact) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentArtifact) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentArtifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentArtifact(val *DeploymentArtifact) *NullableDeploymentArtifact {
	return &NullableDeploymentArtifact{value: val, isSet: true}
}

func (v NullableDeploymentArtifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentArtifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


