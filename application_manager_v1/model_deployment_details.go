/*
Deployment v1

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Cloudhub 1.0 targets only. 

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v1

import (
	"encoding/json"
)

// checks if the DeploymentDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentDetails{}

// DeploymentDetails Additional details about the deployment.
type DeploymentDetails struct {
	// The domain name associated with the deployment. only present for CH1.
	Domain *string `json:"domain,omitempty"`
	// The deployment update status, only present for CH1.
	DeploymentUpdateStatus *string `json:"deploymentUpdateStatus,omitempty"`
}

// NewDeploymentDetails instantiates a new DeploymentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentDetails() *DeploymentDetails {
	this := DeploymentDetails{}
	return &this
}

// NewDeploymentDetailsWithDefaults instantiates a new DeploymentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentDetailsWithDefaults() *DeploymentDetails {
	this := DeploymentDetails{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DeploymentDetails) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentDetails) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DeploymentDetails) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DeploymentDetails) SetDomain(v string) {
	o.Domain = &v
}

// GetDeploymentUpdateStatus returns the DeploymentUpdateStatus field value if set, zero value otherwise.
func (o *DeploymentDetails) GetDeploymentUpdateStatus() string {
	if o == nil || IsNil(o.DeploymentUpdateStatus) {
		var ret string
		return ret
	}
	return *o.DeploymentUpdateStatus
}

// GetDeploymentUpdateStatusOk returns a tuple with the DeploymentUpdateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentDetails) GetDeploymentUpdateStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentUpdateStatus) {
		return nil, false
	}
	return o.DeploymentUpdateStatus, true
}

// HasDeploymentUpdateStatus returns a boolean if a field has been set.
func (o *DeploymentDetails) HasDeploymentUpdateStatus() bool {
	if o != nil && !IsNil(o.DeploymentUpdateStatus) {
		return true
	}

	return false
}

// SetDeploymentUpdateStatus gets a reference to the given string and assigns it to the DeploymentUpdateStatus field.
func (o *DeploymentDetails) SetDeploymentUpdateStatus(v string) {
	o.DeploymentUpdateStatus = &v
}

func (o DeploymentDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.DeploymentUpdateStatus) {
		toSerialize["deploymentUpdateStatus"] = o.DeploymentUpdateStatus
	}
	return toSerialize, nil
}

type NullableDeploymentDetails struct {
	value *DeploymentDetails
	isSet bool
}

func (v NullableDeploymentDetails) Get() *DeploymentDetails {
	return v.value
}

func (v *NullableDeploymentDetails) Set(val *DeploymentDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentDetails(val *DeploymentDetails) *NullableDeploymentDetails {
	return &NullableDeploymentDetails{value: val, isSet: true}
}

func (v NullableDeploymentDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


