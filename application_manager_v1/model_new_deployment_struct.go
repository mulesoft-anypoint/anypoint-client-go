/*
Application Manager v1

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Cloudhub 1.0 targets only. 

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v1

import (
	"encoding/json"
)

// checks if the NewDeploymentStruct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewDeploymentStruct{}

// NewDeploymentStruct struct for NewDeploymentStruct
type NewDeploymentStruct struct {
	Domain *string `json:"domain,omitempty"`
	MuleVersion *NewDeploymentStructMuleVersion `json:"muleVersion,omitempty"`
	Region *string `json:"region,omitempty"`
	MonitoringEnabled *bool `json:"monitoringEnabled,omitempty"`
	MonitoringAutoRestart *bool `json:"monitoringAutoRestart,omitempty"`
	Workers *NewDeploymentStructWorkers `json:"workers,omitempty"`
	// Application properties
	Properties map[string]interface{} `json:"properties,omitempty"`
	// Additional option on the properties, like security configuratoin for each prop
	PropertiesOptions *map[string]NewDeploymentStructPropertiesOptionsValue `json:"propertiesOptions,omitempty"`
	LogLevels []NewDeploymentStructLogLevelsInner `json:"logLevels,omitempty"`
	SecureDataGatewayEnabled *bool `json:"secureDataGatewayEnabled,omitempty"`
	StaticIPsEnabled *bool `json:"staticIPsEnabled,omitempty"`
	IpAddresses []string `json:"ipAddresses,omitempty"`
	LoggingCustomLog4JEnabled *bool `json:"loggingCustomLog4JEnabled,omitempty"`
	LoggingNgEnabled *bool `json:"loggingNgEnabled,omitempty"`
	PersistentQueues *bool `json:"persistentQueues,omitempty"`
	PersistentQueuesEncrypted *bool `json:"persistentQueuesEncrypted,omitempty"`
	// if set to false, Object Store v2 will be used.
	ObjectStoreV1 *bool `json:"objectStoreV1,omitempty"`
	Runtime *NewDeploymentStructRuntime `json:"runtime,omitempty"`
}

// NewNewDeploymentStruct instantiates a new NewDeploymentStruct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewDeploymentStruct() *NewDeploymentStruct {
	this := NewDeploymentStruct{}
	return &this
}

// NewNewDeploymentStructWithDefaults instantiates a new NewDeploymentStruct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewDeploymentStructWithDefaults() *NewDeploymentStruct {
	this := NewDeploymentStruct{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *NewDeploymentStruct) SetDomain(v string) {
	o.Domain = &v
}

// GetMuleVersion returns the MuleVersion field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetMuleVersion() NewDeploymentStructMuleVersion {
	if o == nil || IsNil(o.MuleVersion) {
		var ret NewDeploymentStructMuleVersion
		return ret
	}
	return *o.MuleVersion
}

// GetMuleVersionOk returns a tuple with the MuleVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetMuleVersionOk() (*NewDeploymentStructMuleVersion, bool) {
	if o == nil || IsNil(o.MuleVersion) {
		return nil, false
	}
	return o.MuleVersion, true
}

// HasMuleVersion returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasMuleVersion() bool {
	if o != nil && !IsNil(o.MuleVersion) {
		return true
	}

	return false
}

// SetMuleVersion gets a reference to the given NewDeploymentStructMuleVersion and assigns it to the MuleVersion field.
func (o *NewDeploymentStruct) SetMuleVersion(v NewDeploymentStructMuleVersion) {
	o.MuleVersion = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *NewDeploymentStruct) SetRegion(v string) {
	o.Region = &v
}

// GetMonitoringEnabled returns the MonitoringEnabled field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetMonitoringEnabled() bool {
	if o == nil || IsNil(o.MonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.MonitoringEnabled
}

// GetMonitoringEnabledOk returns a tuple with the MonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MonitoringEnabled) {
		return nil, false
	}
	return o.MonitoringEnabled, true
}

// HasMonitoringEnabled returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasMonitoringEnabled() bool {
	if o != nil && !IsNil(o.MonitoringEnabled) {
		return true
	}

	return false
}

// SetMonitoringEnabled gets a reference to the given bool and assigns it to the MonitoringEnabled field.
func (o *NewDeploymentStruct) SetMonitoringEnabled(v bool) {
	o.MonitoringEnabled = &v
}

// GetMonitoringAutoRestart returns the MonitoringAutoRestart field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetMonitoringAutoRestart() bool {
	if o == nil || IsNil(o.MonitoringAutoRestart) {
		var ret bool
		return ret
	}
	return *o.MonitoringAutoRestart
}

// GetMonitoringAutoRestartOk returns a tuple with the MonitoringAutoRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetMonitoringAutoRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.MonitoringAutoRestart) {
		return nil, false
	}
	return o.MonitoringAutoRestart, true
}

// HasMonitoringAutoRestart returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasMonitoringAutoRestart() bool {
	if o != nil && !IsNil(o.MonitoringAutoRestart) {
		return true
	}

	return false
}

// SetMonitoringAutoRestart gets a reference to the given bool and assigns it to the MonitoringAutoRestart field.
func (o *NewDeploymentStruct) SetMonitoringAutoRestart(v bool) {
	o.MonitoringAutoRestart = &v
}

// GetWorkers returns the Workers field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetWorkers() NewDeploymentStructWorkers {
	if o == nil || IsNil(o.Workers) {
		var ret NewDeploymentStructWorkers
		return ret
	}
	return *o.Workers
}

// GetWorkersOk returns a tuple with the Workers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetWorkersOk() (*NewDeploymentStructWorkers, bool) {
	if o == nil || IsNil(o.Workers) {
		return nil, false
	}
	return o.Workers, true
}

// HasWorkers returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasWorkers() bool {
	if o != nil && !IsNil(o.Workers) {
		return true
	}

	return false
}

// SetWorkers gets a reference to the given NewDeploymentStructWorkers and assigns it to the Workers field.
func (o *NewDeploymentStruct) SetWorkers(v NewDeploymentStructWorkers) {
	o.Workers = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *NewDeploymentStruct) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

// GetPropertiesOptions returns the PropertiesOptions field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetPropertiesOptions() map[string]NewDeploymentStructPropertiesOptionsValue {
	if o == nil || IsNil(o.PropertiesOptions) {
		var ret map[string]NewDeploymentStructPropertiesOptionsValue
		return ret
	}
	return *o.PropertiesOptions
}

// GetPropertiesOptionsOk returns a tuple with the PropertiesOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetPropertiesOptionsOk() (*map[string]NewDeploymentStructPropertiesOptionsValue, bool) {
	if o == nil || IsNil(o.PropertiesOptions) {
		return nil, false
	}
	return o.PropertiesOptions, true
}

// HasPropertiesOptions returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasPropertiesOptions() bool {
	if o != nil && !IsNil(o.PropertiesOptions) {
		return true
	}

	return false
}

// SetPropertiesOptions gets a reference to the given map[string]NewDeploymentStructPropertiesOptionsValue and assigns it to the PropertiesOptions field.
func (o *NewDeploymentStruct) SetPropertiesOptions(v map[string]NewDeploymentStructPropertiesOptionsValue) {
	o.PropertiesOptions = &v
}

// GetLogLevels returns the LogLevels field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetLogLevels() []NewDeploymentStructLogLevelsInner {
	if o == nil || IsNil(o.LogLevels) {
		var ret []NewDeploymentStructLogLevelsInner
		return ret
	}
	return o.LogLevels
}

// GetLogLevelsOk returns a tuple with the LogLevels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetLogLevelsOk() ([]NewDeploymentStructLogLevelsInner, bool) {
	if o == nil || IsNil(o.LogLevels) {
		return nil, false
	}
	return o.LogLevels, true
}

// HasLogLevels returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasLogLevels() bool {
	if o != nil && !IsNil(o.LogLevels) {
		return true
	}

	return false
}

// SetLogLevels gets a reference to the given []NewDeploymentStructLogLevelsInner and assigns it to the LogLevels field.
func (o *NewDeploymentStruct) SetLogLevels(v []NewDeploymentStructLogLevelsInner) {
	o.LogLevels = v
}

// GetSecureDataGatewayEnabled returns the SecureDataGatewayEnabled field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetSecureDataGatewayEnabled() bool {
	if o == nil || IsNil(o.SecureDataGatewayEnabled) {
		var ret bool
		return ret
	}
	return *o.SecureDataGatewayEnabled
}

// GetSecureDataGatewayEnabledOk returns a tuple with the SecureDataGatewayEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetSecureDataGatewayEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SecureDataGatewayEnabled) {
		return nil, false
	}
	return o.SecureDataGatewayEnabled, true
}

// HasSecureDataGatewayEnabled returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasSecureDataGatewayEnabled() bool {
	if o != nil && !IsNil(o.SecureDataGatewayEnabled) {
		return true
	}

	return false
}

// SetSecureDataGatewayEnabled gets a reference to the given bool and assigns it to the SecureDataGatewayEnabled field.
func (o *NewDeploymentStruct) SetSecureDataGatewayEnabled(v bool) {
	o.SecureDataGatewayEnabled = &v
}

// GetStaticIPsEnabled returns the StaticIPsEnabled field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetStaticIPsEnabled() bool {
	if o == nil || IsNil(o.StaticIPsEnabled) {
		var ret bool
		return ret
	}
	return *o.StaticIPsEnabled
}

// GetStaticIPsEnabledOk returns a tuple with the StaticIPsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetStaticIPsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.StaticIPsEnabled) {
		return nil, false
	}
	return o.StaticIPsEnabled, true
}

// HasStaticIPsEnabled returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasStaticIPsEnabled() bool {
	if o != nil && !IsNil(o.StaticIPsEnabled) {
		return true
	}

	return false
}

// SetStaticIPsEnabled gets a reference to the given bool and assigns it to the StaticIPsEnabled field.
func (o *NewDeploymentStruct) SetStaticIPsEnabled(v bool) {
	o.StaticIPsEnabled = &v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetIpAddresses() []string {
	if o == nil || IsNil(o.IpAddresses) {
		var ret []string
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAddresses) {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasIpAddresses() bool {
	if o != nil && !IsNil(o.IpAddresses) {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []string and assigns it to the IpAddresses field.
func (o *NewDeploymentStruct) SetIpAddresses(v []string) {
	o.IpAddresses = v
}

// GetLoggingCustomLog4JEnabled returns the LoggingCustomLog4JEnabled field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetLoggingCustomLog4JEnabled() bool {
	if o == nil || IsNil(o.LoggingCustomLog4JEnabled) {
		var ret bool
		return ret
	}
	return *o.LoggingCustomLog4JEnabled
}

// GetLoggingCustomLog4JEnabledOk returns a tuple with the LoggingCustomLog4JEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetLoggingCustomLog4JEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoggingCustomLog4JEnabled) {
		return nil, false
	}
	return o.LoggingCustomLog4JEnabled, true
}

// HasLoggingCustomLog4JEnabled returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasLoggingCustomLog4JEnabled() bool {
	if o != nil && !IsNil(o.LoggingCustomLog4JEnabled) {
		return true
	}

	return false
}

// SetLoggingCustomLog4JEnabled gets a reference to the given bool and assigns it to the LoggingCustomLog4JEnabled field.
func (o *NewDeploymentStruct) SetLoggingCustomLog4JEnabled(v bool) {
	o.LoggingCustomLog4JEnabled = &v
}

// GetLoggingNgEnabled returns the LoggingNgEnabled field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetLoggingNgEnabled() bool {
	if o == nil || IsNil(o.LoggingNgEnabled) {
		var ret bool
		return ret
	}
	return *o.LoggingNgEnabled
}

// GetLoggingNgEnabledOk returns a tuple with the LoggingNgEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetLoggingNgEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoggingNgEnabled) {
		return nil, false
	}
	return o.LoggingNgEnabled, true
}

// HasLoggingNgEnabled returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasLoggingNgEnabled() bool {
	if o != nil && !IsNil(o.LoggingNgEnabled) {
		return true
	}

	return false
}

// SetLoggingNgEnabled gets a reference to the given bool and assigns it to the LoggingNgEnabled field.
func (o *NewDeploymentStruct) SetLoggingNgEnabled(v bool) {
	o.LoggingNgEnabled = &v
}

// GetPersistentQueues returns the PersistentQueues field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetPersistentQueues() bool {
	if o == nil || IsNil(o.PersistentQueues) {
		var ret bool
		return ret
	}
	return *o.PersistentQueues
}

// GetPersistentQueuesOk returns a tuple with the PersistentQueues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetPersistentQueuesOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentQueues) {
		return nil, false
	}
	return o.PersistentQueues, true
}

// HasPersistentQueues returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasPersistentQueues() bool {
	if o != nil && !IsNil(o.PersistentQueues) {
		return true
	}

	return false
}

// SetPersistentQueues gets a reference to the given bool and assigns it to the PersistentQueues field.
func (o *NewDeploymentStruct) SetPersistentQueues(v bool) {
	o.PersistentQueues = &v
}

// GetPersistentQueuesEncrypted returns the PersistentQueuesEncrypted field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetPersistentQueuesEncrypted() bool {
	if o == nil || IsNil(o.PersistentQueuesEncrypted) {
		var ret bool
		return ret
	}
	return *o.PersistentQueuesEncrypted
}

// GetPersistentQueuesEncryptedOk returns a tuple with the PersistentQueuesEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetPersistentQueuesEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentQueuesEncrypted) {
		return nil, false
	}
	return o.PersistentQueuesEncrypted, true
}

// HasPersistentQueuesEncrypted returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasPersistentQueuesEncrypted() bool {
	if o != nil && !IsNil(o.PersistentQueuesEncrypted) {
		return true
	}

	return false
}

// SetPersistentQueuesEncrypted gets a reference to the given bool and assigns it to the PersistentQueuesEncrypted field.
func (o *NewDeploymentStruct) SetPersistentQueuesEncrypted(v bool) {
	o.PersistentQueuesEncrypted = &v
}

// GetObjectStoreV1 returns the ObjectStoreV1 field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetObjectStoreV1() bool {
	if o == nil || IsNil(o.ObjectStoreV1) {
		var ret bool
		return ret
	}
	return *o.ObjectStoreV1
}

// GetObjectStoreV1Ok returns a tuple with the ObjectStoreV1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetObjectStoreV1Ok() (*bool, bool) {
	if o == nil || IsNil(o.ObjectStoreV1) {
		return nil, false
	}
	return o.ObjectStoreV1, true
}

// HasObjectStoreV1 returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasObjectStoreV1() bool {
	if o != nil && !IsNil(o.ObjectStoreV1) {
		return true
	}

	return false
}

// SetObjectStoreV1 gets a reference to the given bool and assigns it to the ObjectStoreV1 field.
func (o *NewDeploymentStruct) SetObjectStoreV1(v bool) {
	o.ObjectStoreV1 = &v
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *NewDeploymentStruct) GetRuntime() NewDeploymentStructRuntime {
	if o == nil || IsNil(o.Runtime) {
		var ret NewDeploymentStructRuntime
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewDeploymentStruct) GetRuntimeOk() (*NewDeploymentStructRuntime, bool) {
	if o == nil || IsNil(o.Runtime) {
		return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *NewDeploymentStruct) HasRuntime() bool {
	if o != nil && !IsNil(o.Runtime) {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given NewDeploymentStructRuntime and assigns it to the Runtime field.
func (o *NewDeploymentStruct) SetRuntime(v NewDeploymentStructRuntime) {
	o.Runtime = &v
}

func (o NewDeploymentStruct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewDeploymentStruct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.MuleVersion) {
		toSerialize["muleVersion"] = o.MuleVersion
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.MonitoringEnabled) {
		toSerialize["monitoringEnabled"] = o.MonitoringEnabled
	}
	if !IsNil(o.MonitoringAutoRestart) {
		toSerialize["monitoringAutoRestart"] = o.MonitoringAutoRestart
	}
	if !IsNil(o.Workers) {
		toSerialize["workers"] = o.Workers
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.PropertiesOptions) {
		toSerialize["propertiesOptions"] = o.PropertiesOptions
	}
	if !IsNil(o.LogLevels) {
		toSerialize["logLevels"] = o.LogLevels
	}
	if !IsNil(o.SecureDataGatewayEnabled) {
		toSerialize["secureDataGatewayEnabled"] = o.SecureDataGatewayEnabled
	}
	if !IsNil(o.StaticIPsEnabled) {
		toSerialize["staticIPsEnabled"] = o.StaticIPsEnabled
	}
	if !IsNil(o.IpAddresses) {
		toSerialize["ipAddresses"] = o.IpAddresses
	}
	if !IsNil(o.LoggingCustomLog4JEnabled) {
		toSerialize["loggingCustomLog4JEnabled"] = o.LoggingCustomLog4JEnabled
	}
	if !IsNil(o.LoggingNgEnabled) {
		toSerialize["loggingNgEnabled"] = o.LoggingNgEnabled
	}
	if !IsNil(o.PersistentQueues) {
		toSerialize["persistentQueues"] = o.PersistentQueues
	}
	if !IsNil(o.PersistentQueuesEncrypted) {
		toSerialize["persistentQueuesEncrypted"] = o.PersistentQueuesEncrypted
	}
	if !IsNil(o.ObjectStoreV1) {
		toSerialize["objectStoreV1"] = o.ObjectStoreV1
	}
	if !IsNil(o.Runtime) {
		toSerialize["runtime"] = o.Runtime
	}
	return toSerialize, nil
}

type NullableNewDeploymentStruct struct {
	value *NewDeploymentStruct
	isSet bool
}

func (v NullableNewDeploymentStruct) Get() *NewDeploymentStruct {
	return v.value
}

func (v *NullableNewDeploymentStruct) Set(val *NewDeploymentStruct) {
	v.value = val
	v.isSet = true
}

func (v NullableNewDeploymentStruct) IsSet() bool {
	return v.isSet
}

func (v *NullableNewDeploymentStruct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewDeploymentStruct(val *NewDeploymentStruct) *NullableNewDeploymentStruct {
	return &NullableNewDeploymentStruct{value: val, isSet: true}
}

func (v NullableNewDeploymentStruct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewDeploymentStruct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


