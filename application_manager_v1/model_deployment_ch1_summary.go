/*
Deployment v1

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Cloudhub 1.0 targets only. 

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v1

import (
	"encoding/json"
)

// checks if the DeploymentCH1Summary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentCH1Summary{}

// DeploymentCH1Summary struct for DeploymentCH1Summary
type DeploymentCH1Summary struct {
	Region *string `json:"region,omitempty"`
	VersionId *string `json:"versionId,omitempty"`
	LoggingNgEnabled *bool `json:"loggingNgEnabled,omitempty"`
	LoggingCustomLog4JEnabled *bool `json:"loggingCustomLog4JEnabled,omitempty"`
	UpdateRuntimeConfig *bool `json:"updateRuntimeConfig,omitempty"`
	DeploymentErrorMessage *string `json:"deploymentErrorMessage,omitempty"`
	Domain *string `json:"domain,omitempty"`
	FullDomain *string `json:"fullDomain,omitempty"`
	Properties *map[string]string `json:"properties,omitempty"`
	PropertiesOptions *map[string]NewDeploymentStructPropertiesOptionsValue `json:"propertiesOptions,omitempty"`
	Status *string `json:"status,omitempty"`
	Workers *Workers `json:"workers,omitempty"`
	LastUpdateTime *int64 `json:"lastUpdateTime,omitempty"`
	FileName *string `json:"fileName,omitempty"`
	PersistentQueues *bool `json:"persistentQueues,omitempty"`
	PersistentQueuesEncryptionEnabled *bool `json:"persistentQueuesEncryptionEnabled,omitempty"`
	PersistentQueuesEncrypted *bool `json:"persistentQueuesEncrypted,omitempty"`
	MonitoringEnabled *bool `json:"monitoringEnabled,omitempty"`
	MonitoringAutoRestart *bool `json:"monitoringAutoRestart,omitempty"`
	StaticIPsEnabled *bool `json:"staticIPsEnabled,omitempty"`
	HasFile *bool `json:"hasFile,omitempty"`
	SecureDataGatewayEnabled *bool `json:"secureDataGatewayEnabled,omitempty"`
	DeploymentGroup *DeploymentGroup `json:"deploymentGroup,omitempty"`
	TrackingSettings *TrackingSettings `json:"trackingSettings,omitempty"`
	LogLevels []LogLevel `json:"logLevels,omitempty"`
	IpAddresses []IpAddress `json:"ipAddresses,omitempty"`
	MuleVersion *MuleVersion `json:"muleVersion,omitempty"`
	PreviousMuleVersion *MuleVersion `json:"previousMuleVersion,omitempty"`
}

// NewDeploymentCH1Summary instantiates a new DeploymentCH1Summary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentCH1Summary() *DeploymentCH1Summary {
	this := DeploymentCH1Summary{}
	return &this
}

// NewDeploymentCH1SummaryWithDefaults instantiates a new DeploymentCH1Summary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentCH1SummaryWithDefaults() *DeploymentCH1Summary {
	this := DeploymentCH1Summary{}
	return &this
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *DeploymentCH1Summary) SetRegion(v string) {
	o.Region = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *DeploymentCH1Summary) SetVersionId(v string) {
	o.VersionId = &v
}

// GetLoggingNgEnabled returns the LoggingNgEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetLoggingNgEnabled() bool {
	if o == nil || IsNil(o.LoggingNgEnabled) {
		var ret bool
		return ret
	}
	return *o.LoggingNgEnabled
}

// GetLoggingNgEnabledOk returns a tuple with the LoggingNgEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetLoggingNgEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoggingNgEnabled) {
		return nil, false
	}
	return o.LoggingNgEnabled, true
}

// HasLoggingNgEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasLoggingNgEnabled() bool {
	if o != nil && !IsNil(o.LoggingNgEnabled) {
		return true
	}

	return false
}

// SetLoggingNgEnabled gets a reference to the given bool and assigns it to the LoggingNgEnabled field.
func (o *DeploymentCH1Summary) SetLoggingNgEnabled(v bool) {
	o.LoggingNgEnabled = &v
}

// GetLoggingCustomLog4JEnabled returns the LoggingCustomLog4JEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetLoggingCustomLog4JEnabled() bool {
	if o == nil || IsNil(o.LoggingCustomLog4JEnabled) {
		var ret bool
		return ret
	}
	return *o.LoggingCustomLog4JEnabled
}

// GetLoggingCustomLog4JEnabledOk returns a tuple with the LoggingCustomLog4JEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetLoggingCustomLog4JEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoggingCustomLog4JEnabled) {
		return nil, false
	}
	return o.LoggingCustomLog4JEnabled, true
}

// HasLoggingCustomLog4JEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasLoggingCustomLog4JEnabled() bool {
	if o != nil && !IsNil(o.LoggingCustomLog4JEnabled) {
		return true
	}

	return false
}

// SetLoggingCustomLog4JEnabled gets a reference to the given bool and assigns it to the LoggingCustomLog4JEnabled field.
func (o *DeploymentCH1Summary) SetLoggingCustomLog4JEnabled(v bool) {
	o.LoggingCustomLog4JEnabled = &v
}

// GetUpdateRuntimeConfig returns the UpdateRuntimeConfig field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetUpdateRuntimeConfig() bool {
	if o == nil || IsNil(o.UpdateRuntimeConfig) {
		var ret bool
		return ret
	}
	return *o.UpdateRuntimeConfig
}

// GetUpdateRuntimeConfigOk returns a tuple with the UpdateRuntimeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetUpdateRuntimeConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateRuntimeConfig) {
		return nil, false
	}
	return o.UpdateRuntimeConfig, true
}

// HasUpdateRuntimeConfig returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasUpdateRuntimeConfig() bool {
	if o != nil && !IsNil(o.UpdateRuntimeConfig) {
		return true
	}

	return false
}

// SetUpdateRuntimeConfig gets a reference to the given bool and assigns it to the UpdateRuntimeConfig field.
func (o *DeploymentCH1Summary) SetUpdateRuntimeConfig(v bool) {
	o.UpdateRuntimeConfig = &v
}

// GetDeploymentErrorMessage returns the DeploymentErrorMessage field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetDeploymentErrorMessage() string {
	if o == nil || IsNil(o.DeploymentErrorMessage) {
		var ret string
		return ret
	}
	return *o.DeploymentErrorMessage
}

// GetDeploymentErrorMessageOk returns a tuple with the DeploymentErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetDeploymentErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentErrorMessage) {
		return nil, false
	}
	return o.DeploymentErrorMessage, true
}

// HasDeploymentErrorMessage returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasDeploymentErrorMessage() bool {
	if o != nil && !IsNil(o.DeploymentErrorMessage) {
		return true
	}

	return false
}

// SetDeploymentErrorMessage gets a reference to the given string and assigns it to the DeploymentErrorMessage field.
func (o *DeploymentCH1Summary) SetDeploymentErrorMessage(v string) {
	o.DeploymentErrorMessage = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DeploymentCH1Summary) SetDomain(v string) {
	o.Domain = &v
}

// GetFullDomain returns the FullDomain field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetFullDomain() string {
	if o == nil || IsNil(o.FullDomain) {
		var ret string
		return ret
	}
	return *o.FullDomain
}

// GetFullDomainOk returns a tuple with the FullDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetFullDomainOk() (*string, bool) {
	if o == nil || IsNil(o.FullDomain) {
		return nil, false
	}
	return o.FullDomain, true
}

// HasFullDomain returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasFullDomain() bool {
	if o != nil && !IsNil(o.FullDomain) {
		return true
	}

	return false
}

// SetFullDomain gets a reference to the given string and assigns it to the FullDomain field.
func (o *DeploymentCH1Summary) SetFullDomain(v string) {
	o.FullDomain = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetProperties() map[string]string {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *DeploymentCH1Summary) SetProperties(v map[string]string) {
	o.Properties = &v
}

// GetPropertiesOptions returns the PropertiesOptions field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetPropertiesOptions() map[string]NewDeploymentStructPropertiesOptionsValue {
	if o == nil || IsNil(o.PropertiesOptions) {
		var ret map[string]NewDeploymentStructPropertiesOptionsValue
		return ret
	}
	return *o.PropertiesOptions
}

// GetPropertiesOptionsOk returns a tuple with the PropertiesOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetPropertiesOptionsOk() (*map[string]NewDeploymentStructPropertiesOptionsValue, bool) {
	if o == nil || IsNil(o.PropertiesOptions) {
		return nil, false
	}
	return o.PropertiesOptions, true
}

// HasPropertiesOptions returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasPropertiesOptions() bool {
	if o != nil && !IsNil(o.PropertiesOptions) {
		return true
	}

	return false
}

// SetPropertiesOptions gets a reference to the given map[string]NewDeploymentStructPropertiesOptionsValue and assigns it to the PropertiesOptions field.
func (o *DeploymentCH1Summary) SetPropertiesOptions(v map[string]NewDeploymentStructPropertiesOptionsValue) {
	o.PropertiesOptions = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DeploymentCH1Summary) SetStatus(v string) {
	o.Status = &v
}

// GetWorkers returns the Workers field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetWorkers() Workers {
	if o == nil || IsNil(o.Workers) {
		var ret Workers
		return ret
	}
	return *o.Workers
}

// GetWorkersOk returns a tuple with the Workers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetWorkersOk() (*Workers, bool) {
	if o == nil || IsNil(o.Workers) {
		return nil, false
	}
	return o.Workers, true
}

// HasWorkers returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasWorkers() bool {
	if o != nil && !IsNil(o.Workers) {
		return true
	}

	return false
}

// SetWorkers gets a reference to the given Workers and assigns it to the Workers field.
func (o *DeploymentCH1Summary) SetWorkers(v Workers) {
	o.Workers = &v
}

// GetLastUpdateTime returns the LastUpdateTime field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetLastUpdateTime() int64 {
	if o == nil || IsNil(o.LastUpdateTime) {
		var ret int64
		return ret
	}
	return *o.LastUpdateTime
}

// GetLastUpdateTimeOk returns a tuple with the LastUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetLastUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdateTime) {
		return nil, false
	}
	return o.LastUpdateTime, true
}

// HasLastUpdateTime returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasLastUpdateTime() bool {
	if o != nil && !IsNil(o.LastUpdateTime) {
		return true
	}

	return false
}

// SetLastUpdateTime gets a reference to the given int64 and assigns it to the LastUpdateTime field.
func (o *DeploymentCH1Summary) SetLastUpdateTime(v int64) {
	o.LastUpdateTime = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *DeploymentCH1Summary) SetFileName(v string) {
	o.FileName = &v
}

// GetPersistentQueues returns the PersistentQueues field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetPersistentQueues() bool {
	if o == nil || IsNil(o.PersistentQueues) {
		var ret bool
		return ret
	}
	return *o.PersistentQueues
}

// GetPersistentQueuesOk returns a tuple with the PersistentQueues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetPersistentQueuesOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentQueues) {
		return nil, false
	}
	return o.PersistentQueues, true
}

// HasPersistentQueues returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasPersistentQueues() bool {
	if o != nil && !IsNil(o.PersistentQueues) {
		return true
	}

	return false
}

// SetPersistentQueues gets a reference to the given bool and assigns it to the PersistentQueues field.
func (o *DeploymentCH1Summary) SetPersistentQueues(v bool) {
	o.PersistentQueues = &v
}

// GetPersistentQueuesEncryptionEnabled returns the PersistentQueuesEncryptionEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetPersistentQueuesEncryptionEnabled() bool {
	if o == nil || IsNil(o.PersistentQueuesEncryptionEnabled) {
		var ret bool
		return ret
	}
	return *o.PersistentQueuesEncryptionEnabled
}

// GetPersistentQueuesEncryptionEnabledOk returns a tuple with the PersistentQueuesEncryptionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetPersistentQueuesEncryptionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentQueuesEncryptionEnabled) {
		return nil, false
	}
	return o.PersistentQueuesEncryptionEnabled, true
}

// HasPersistentQueuesEncryptionEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasPersistentQueuesEncryptionEnabled() bool {
	if o != nil && !IsNil(o.PersistentQueuesEncryptionEnabled) {
		return true
	}

	return false
}

// SetPersistentQueuesEncryptionEnabled gets a reference to the given bool and assigns it to the PersistentQueuesEncryptionEnabled field.
func (o *DeploymentCH1Summary) SetPersistentQueuesEncryptionEnabled(v bool) {
	o.PersistentQueuesEncryptionEnabled = &v
}

// GetPersistentQueuesEncrypted returns the PersistentQueuesEncrypted field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetPersistentQueuesEncrypted() bool {
	if o == nil || IsNil(o.PersistentQueuesEncrypted) {
		var ret bool
		return ret
	}
	return *o.PersistentQueuesEncrypted
}

// GetPersistentQueuesEncryptedOk returns a tuple with the PersistentQueuesEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetPersistentQueuesEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentQueuesEncrypted) {
		return nil, false
	}
	return o.PersistentQueuesEncrypted, true
}

// HasPersistentQueuesEncrypted returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasPersistentQueuesEncrypted() bool {
	if o != nil && !IsNil(o.PersistentQueuesEncrypted) {
		return true
	}

	return false
}

// SetPersistentQueuesEncrypted gets a reference to the given bool and assigns it to the PersistentQueuesEncrypted field.
func (o *DeploymentCH1Summary) SetPersistentQueuesEncrypted(v bool) {
	o.PersistentQueuesEncrypted = &v
}

// GetMonitoringEnabled returns the MonitoringEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetMonitoringEnabled() bool {
	if o == nil || IsNil(o.MonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.MonitoringEnabled
}

// GetMonitoringEnabledOk returns a tuple with the MonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MonitoringEnabled) {
		return nil, false
	}
	return o.MonitoringEnabled, true
}

// HasMonitoringEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasMonitoringEnabled() bool {
	if o != nil && !IsNil(o.MonitoringEnabled) {
		return true
	}

	return false
}

// SetMonitoringEnabled gets a reference to the given bool and assigns it to the MonitoringEnabled field.
func (o *DeploymentCH1Summary) SetMonitoringEnabled(v bool) {
	o.MonitoringEnabled = &v
}

// GetMonitoringAutoRestart returns the MonitoringAutoRestart field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetMonitoringAutoRestart() bool {
	if o == nil || IsNil(o.MonitoringAutoRestart) {
		var ret bool
		return ret
	}
	return *o.MonitoringAutoRestart
}

// GetMonitoringAutoRestartOk returns a tuple with the MonitoringAutoRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetMonitoringAutoRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.MonitoringAutoRestart) {
		return nil, false
	}
	return o.MonitoringAutoRestart, true
}

// HasMonitoringAutoRestart returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasMonitoringAutoRestart() bool {
	if o != nil && !IsNil(o.MonitoringAutoRestart) {
		return true
	}

	return false
}

// SetMonitoringAutoRestart gets a reference to the given bool and assigns it to the MonitoringAutoRestart field.
func (o *DeploymentCH1Summary) SetMonitoringAutoRestart(v bool) {
	o.MonitoringAutoRestart = &v
}

// GetStaticIPsEnabled returns the StaticIPsEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetStaticIPsEnabled() bool {
	if o == nil || IsNil(o.StaticIPsEnabled) {
		var ret bool
		return ret
	}
	return *o.StaticIPsEnabled
}

// GetStaticIPsEnabledOk returns a tuple with the StaticIPsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetStaticIPsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.StaticIPsEnabled) {
		return nil, false
	}
	return o.StaticIPsEnabled, true
}

// HasStaticIPsEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasStaticIPsEnabled() bool {
	if o != nil && !IsNil(o.StaticIPsEnabled) {
		return true
	}

	return false
}

// SetStaticIPsEnabled gets a reference to the given bool and assigns it to the StaticIPsEnabled field.
func (o *DeploymentCH1Summary) SetStaticIPsEnabled(v bool) {
	o.StaticIPsEnabled = &v
}

// GetHasFile returns the HasFile field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetHasFile() bool {
	if o == nil || IsNil(o.HasFile) {
		var ret bool
		return ret
	}
	return *o.HasFile
}

// GetHasFileOk returns a tuple with the HasFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetHasFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasFile) {
		return nil, false
	}
	return o.HasFile, true
}

// HasHasFile returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasHasFile() bool {
	if o != nil && !IsNil(o.HasFile) {
		return true
	}

	return false
}

// SetHasFile gets a reference to the given bool and assigns it to the HasFile field.
func (o *DeploymentCH1Summary) SetHasFile(v bool) {
	o.HasFile = &v
}

// GetSecureDataGatewayEnabled returns the SecureDataGatewayEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetSecureDataGatewayEnabled() bool {
	if o == nil || IsNil(o.SecureDataGatewayEnabled) {
		var ret bool
		return ret
	}
	return *o.SecureDataGatewayEnabled
}

// GetSecureDataGatewayEnabledOk returns a tuple with the SecureDataGatewayEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetSecureDataGatewayEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SecureDataGatewayEnabled) {
		return nil, false
	}
	return o.SecureDataGatewayEnabled, true
}

// HasSecureDataGatewayEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasSecureDataGatewayEnabled() bool {
	if o != nil && !IsNil(o.SecureDataGatewayEnabled) {
		return true
	}

	return false
}

// SetSecureDataGatewayEnabled gets a reference to the given bool and assigns it to the SecureDataGatewayEnabled field.
func (o *DeploymentCH1Summary) SetSecureDataGatewayEnabled(v bool) {
	o.SecureDataGatewayEnabled = &v
}

// GetDeploymentGroup returns the DeploymentGroup field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetDeploymentGroup() DeploymentGroup {
	if o == nil || IsNil(o.DeploymentGroup) {
		var ret DeploymentGroup
		return ret
	}
	return *o.DeploymentGroup
}

// GetDeploymentGroupOk returns a tuple with the DeploymentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetDeploymentGroupOk() (*DeploymentGroup, bool) {
	if o == nil || IsNil(o.DeploymentGroup) {
		return nil, false
	}
	return o.DeploymentGroup, true
}

// HasDeploymentGroup returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasDeploymentGroup() bool {
	if o != nil && !IsNil(o.DeploymentGroup) {
		return true
	}

	return false
}

// SetDeploymentGroup gets a reference to the given DeploymentGroup and assigns it to the DeploymentGroup field.
func (o *DeploymentCH1Summary) SetDeploymentGroup(v DeploymentGroup) {
	o.DeploymentGroup = &v
}

// GetTrackingSettings returns the TrackingSettings field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetTrackingSettings() TrackingSettings {
	if o == nil || IsNil(o.TrackingSettings) {
		var ret TrackingSettings
		return ret
	}
	return *o.TrackingSettings
}

// GetTrackingSettingsOk returns a tuple with the TrackingSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetTrackingSettingsOk() (*TrackingSettings, bool) {
	if o == nil || IsNil(o.TrackingSettings) {
		return nil, false
	}
	return o.TrackingSettings, true
}

// HasTrackingSettings returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasTrackingSettings() bool {
	if o != nil && !IsNil(o.TrackingSettings) {
		return true
	}

	return false
}

// SetTrackingSettings gets a reference to the given TrackingSettings and assigns it to the TrackingSettings field.
func (o *DeploymentCH1Summary) SetTrackingSettings(v TrackingSettings) {
	o.TrackingSettings = &v
}

// GetLogLevels returns the LogLevels field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetLogLevels() []LogLevel {
	if o == nil || IsNil(o.LogLevels) {
		var ret []LogLevel
		return ret
	}
	return o.LogLevels
}

// GetLogLevelsOk returns a tuple with the LogLevels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetLogLevelsOk() ([]LogLevel, bool) {
	if o == nil || IsNil(o.LogLevels) {
		return nil, false
	}
	return o.LogLevels, true
}

// HasLogLevels returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasLogLevels() bool {
	if o != nil && !IsNil(o.LogLevels) {
		return true
	}

	return false
}

// SetLogLevels gets a reference to the given []LogLevel and assigns it to the LogLevels field.
func (o *DeploymentCH1Summary) SetLogLevels(v []LogLevel) {
	o.LogLevels = v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetIpAddresses() []IpAddress {
	if o == nil || IsNil(o.IpAddresses) {
		var ret []IpAddress
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetIpAddressesOk() ([]IpAddress, bool) {
	if o == nil || IsNil(o.IpAddresses) {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasIpAddresses() bool {
	if o != nil && !IsNil(o.IpAddresses) {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []IpAddress and assigns it to the IpAddresses field.
func (o *DeploymentCH1Summary) SetIpAddresses(v []IpAddress) {
	o.IpAddresses = v
}

// GetMuleVersion returns the MuleVersion field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetMuleVersion() MuleVersion {
	if o == nil || IsNil(o.MuleVersion) {
		var ret MuleVersion
		return ret
	}
	return *o.MuleVersion
}

// GetMuleVersionOk returns a tuple with the MuleVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetMuleVersionOk() (*MuleVersion, bool) {
	if o == nil || IsNil(o.MuleVersion) {
		return nil, false
	}
	return o.MuleVersion, true
}

// HasMuleVersion returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasMuleVersion() bool {
	if o != nil && !IsNil(o.MuleVersion) {
		return true
	}

	return false
}

// SetMuleVersion gets a reference to the given MuleVersion and assigns it to the MuleVersion field.
func (o *DeploymentCH1Summary) SetMuleVersion(v MuleVersion) {
	o.MuleVersion = &v
}

// GetPreviousMuleVersion returns the PreviousMuleVersion field value if set, zero value otherwise.
func (o *DeploymentCH1Summary) GetPreviousMuleVersion() MuleVersion {
	if o == nil || IsNil(o.PreviousMuleVersion) {
		var ret MuleVersion
		return ret
	}
	return *o.PreviousMuleVersion
}

// GetPreviousMuleVersionOk returns a tuple with the PreviousMuleVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Summary) GetPreviousMuleVersionOk() (*MuleVersion, bool) {
	if o == nil || IsNil(o.PreviousMuleVersion) {
		return nil, false
	}
	return o.PreviousMuleVersion, true
}

// HasPreviousMuleVersion returns a boolean if a field has been set.
func (o *DeploymentCH1Summary) HasPreviousMuleVersion() bool {
	if o != nil && !IsNil(o.PreviousMuleVersion) {
		return true
	}

	return false
}

// SetPreviousMuleVersion gets a reference to the given MuleVersion and assigns it to the PreviousMuleVersion field.
func (o *DeploymentCH1Summary) SetPreviousMuleVersion(v MuleVersion) {
	o.PreviousMuleVersion = &v
}

func (o DeploymentCH1Summary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentCH1Summary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.VersionId) {
		toSerialize["versionId"] = o.VersionId
	}
	if !IsNil(o.LoggingNgEnabled) {
		toSerialize["loggingNgEnabled"] = o.LoggingNgEnabled
	}
	if !IsNil(o.LoggingCustomLog4JEnabled) {
		toSerialize["loggingCustomLog4JEnabled"] = o.LoggingCustomLog4JEnabled
	}
	if !IsNil(o.UpdateRuntimeConfig) {
		toSerialize["updateRuntimeConfig"] = o.UpdateRuntimeConfig
	}
	if !IsNil(o.DeploymentErrorMessage) {
		toSerialize["deploymentErrorMessage"] = o.DeploymentErrorMessage
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.FullDomain) {
		toSerialize["fullDomain"] = o.FullDomain
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.PropertiesOptions) {
		toSerialize["propertiesOptions"] = o.PropertiesOptions
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Workers) {
		toSerialize["workers"] = o.Workers
	}
	if !IsNil(o.LastUpdateTime) {
		toSerialize["lastUpdateTime"] = o.LastUpdateTime
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.PersistentQueues) {
		toSerialize["persistentQueues"] = o.PersistentQueues
	}
	if !IsNil(o.PersistentQueuesEncryptionEnabled) {
		toSerialize["persistentQueuesEncryptionEnabled"] = o.PersistentQueuesEncryptionEnabled
	}
	if !IsNil(o.PersistentQueuesEncrypted) {
		toSerialize["persistentQueuesEncrypted"] = o.PersistentQueuesEncrypted
	}
	if !IsNil(o.MonitoringEnabled) {
		toSerialize["monitoringEnabled"] = o.MonitoringEnabled
	}
	if !IsNil(o.MonitoringAutoRestart) {
		toSerialize["monitoringAutoRestart"] = o.MonitoringAutoRestart
	}
	if !IsNil(o.StaticIPsEnabled) {
		toSerialize["staticIPsEnabled"] = o.StaticIPsEnabled
	}
	if !IsNil(o.HasFile) {
		toSerialize["hasFile"] = o.HasFile
	}
	if !IsNil(o.SecureDataGatewayEnabled) {
		toSerialize["secureDataGatewayEnabled"] = o.SecureDataGatewayEnabled
	}
	if !IsNil(o.DeploymentGroup) {
		toSerialize["deploymentGroup"] = o.DeploymentGroup
	}
	if !IsNil(o.TrackingSettings) {
		toSerialize["trackingSettings"] = o.TrackingSettings
	}
	if !IsNil(o.LogLevels) {
		toSerialize["logLevels"] = o.LogLevels
	}
	if !IsNil(o.IpAddresses) {
		toSerialize["ipAddresses"] = o.IpAddresses
	}
	if !IsNil(o.MuleVersion) {
		toSerialize["muleVersion"] = o.MuleVersion
	}
	if !IsNil(o.PreviousMuleVersion) {
		toSerialize["previousMuleVersion"] = o.PreviousMuleVersion
	}
	return toSerialize, nil
}

type NullableDeploymentCH1Summary struct {
	value *DeploymentCH1Summary
	isSet bool
}

func (v NullableDeploymentCH1Summary) Get() *DeploymentCH1Summary {
	return v.value
}

func (v *NullableDeploymentCH1Summary) Set(val *DeploymentCH1Summary) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentCH1Summary) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentCH1Summary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentCH1Summary(val *DeploymentCH1Summary) *NullableDeploymentCH1Summary {
	return &NullableDeploymentCH1Summary{value: val, isSet: true}
}

func (v NullableDeploymentCH1Summary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentCH1Summary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


