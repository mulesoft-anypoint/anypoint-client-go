/*
Deployment v1

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Cloudhub 1.0 targets only. 

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v1

import (
	"encoding/json"
)

// checks if the DeploymentCH1Details type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentCH1Details{}

// DeploymentCH1Details Response schema for deploying an app to CH1
type DeploymentCH1Details struct {
	// The short domain name of the application.
	Domain *string `json:"domain,omitempty"`
	// The full domain name including the CH1 suffix.
	FullDomain *string `json:"fullDomain,omitempty"`
	// A description of the application.
	Description *string `json:"description,omitempty"`
	// Deployment properties specific to the app configuration.
	Properties map[string]interface{} `json:"properties,omitempty"`
	// Options for the deployment properties, such as security flags.
	PropertiesOptions map[string]interface{} `json:"propertiesOptions,omitempty"`
	// Current status of the deployed application (e.g. STARTED).
	Status *string `json:"status,omitempty"`
	Workers *Workers `json:"workers,omitempty"`
	// Timestamp (in milliseconds) when the application was last updated.
	LastUpdateTime *int64 `json:"lastUpdateTime,omitempty"`
	// The name of the deployed application file.
	FileName *string `json:"fileName,omitempty"`
	MuleVersion *MuleVersion `json:"muleVersion,omitempty"`
	PreviousMuleVersion *MuleVersion `json:"previousMuleVersion,omitempty"`
	// The number of tenants associated with the deployment.
	Tenants *int32 `json:"tenants,omitempty"`
	// Identifier of the user who deployed the application.
	UserId *string `json:"userId,omitempty"`
	// Username of the deploying user.
	UserName *string `json:"userName,omitempty"`
	VpnConfig *DeploymentCH1DetailsVpnConfig `json:"vpnConfig,omitempty"`
	DeploymentGroup *DeploymentGroup `json:"deploymentGroup,omitempty"`
	// Indicates whether persistent queues are enabled.
	PersistentQueues *bool `json:"persistentQueues,omitempty"`
	// Indicates whether encryption for persistent queues is enabled.
	PersistentQueuesEncryptionEnabled *bool `json:"persistentQueuesEncryptionEnabled,omitempty"`
	// Indicates whether the persistent queues are encrypted.
	PersistentQueuesEncrypted *bool `json:"persistentQueuesEncrypted,omitempty"`
	// Specifies if monitoring is enabled for the application.
	MonitoringEnabled *bool `json:"monitoringEnabled,omitempty"`
	// Specifies if the application is set to auto-restart when monitoring triggers.
	MonitoringAutoRestart *bool `json:"monitoringAutoRestart,omitempty"`
	// Indicates whether static IPs are enabled for the deployment.
	StaticIPsEnabled *bool `json:"staticIPsEnabled,omitempty"`
	// Indicates if the deployment supports multiple tenants.
	Multitenanted *bool `json:"multitenanted,omitempty"`
	// Indicates whether a deployment file exists for the application.
	HasFile *bool `json:"hasFile,omitempty"`
	// Specifies if a secure data gateway is enabled for the deployment.
	SecureDataGatewayEnabled *bool `json:"secureDataGatewayEnabled,omitempty"`
	// Indicates if VPN is enabled for the deployment.
	VpnEnabled *bool `json:"vpnEnabled,omitempty"`
	TrackingSettings *TrackingSettings `json:"trackingSettings,omitempty"`
	// List of log level configurations for the application.
	LogLevels []LogLevel `json:"logLevels,omitempty"`
	// List of IP addresses associated with the deployment.
	IpAddresses []IpAddress `json:"ipAddresses,omitempty"`
}

// NewDeploymentCH1Details instantiates a new DeploymentCH1Details object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentCH1Details() *DeploymentCH1Details {
	this := DeploymentCH1Details{}
	return &this
}

// NewDeploymentCH1DetailsWithDefaults instantiates a new DeploymentCH1Details object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentCH1DetailsWithDefaults() *DeploymentCH1Details {
	this := DeploymentCH1Details{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DeploymentCH1Details) SetDomain(v string) {
	o.Domain = &v
}

// GetFullDomain returns the FullDomain field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetFullDomain() string {
	if o == nil || IsNil(o.FullDomain) {
		var ret string
		return ret
	}
	return *o.FullDomain
}

// GetFullDomainOk returns a tuple with the FullDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetFullDomainOk() (*string, bool) {
	if o == nil || IsNil(o.FullDomain) {
		return nil, false
	}
	return o.FullDomain, true
}

// HasFullDomain returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasFullDomain() bool {
	if o != nil && !IsNil(o.FullDomain) {
		return true
	}

	return false
}

// SetFullDomain gets a reference to the given string and assigns it to the FullDomain field.
func (o *DeploymentCH1Details) SetFullDomain(v string) {
	o.FullDomain = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DeploymentCH1Details) SetDescription(v string) {
	o.Description = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *DeploymentCH1Details) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

// GetPropertiesOptions returns the PropertiesOptions field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetPropertiesOptions() map[string]interface{} {
	if o == nil || IsNil(o.PropertiesOptions) {
		var ret map[string]interface{}
		return ret
	}
	return o.PropertiesOptions
}

// GetPropertiesOptionsOk returns a tuple with the PropertiesOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetPropertiesOptionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PropertiesOptions) {
		return map[string]interface{}{}, false
	}
	return o.PropertiesOptions, true
}

// HasPropertiesOptions returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasPropertiesOptions() bool {
	if o != nil && !IsNil(o.PropertiesOptions) {
		return true
	}

	return false
}

// SetPropertiesOptions gets a reference to the given map[string]interface{} and assigns it to the PropertiesOptions field.
func (o *DeploymentCH1Details) SetPropertiesOptions(v map[string]interface{}) {
	o.PropertiesOptions = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DeploymentCH1Details) SetStatus(v string) {
	o.Status = &v
}

// GetWorkers returns the Workers field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetWorkers() Workers {
	if o == nil || IsNil(o.Workers) {
		var ret Workers
		return ret
	}
	return *o.Workers
}

// GetWorkersOk returns a tuple with the Workers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetWorkersOk() (*Workers, bool) {
	if o == nil || IsNil(o.Workers) {
		return nil, false
	}
	return o.Workers, true
}

// HasWorkers returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasWorkers() bool {
	if o != nil && !IsNil(o.Workers) {
		return true
	}

	return false
}

// SetWorkers gets a reference to the given Workers and assigns it to the Workers field.
func (o *DeploymentCH1Details) SetWorkers(v Workers) {
	o.Workers = &v
}

// GetLastUpdateTime returns the LastUpdateTime field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetLastUpdateTime() int64 {
	if o == nil || IsNil(o.LastUpdateTime) {
		var ret int64
		return ret
	}
	return *o.LastUpdateTime
}

// GetLastUpdateTimeOk returns a tuple with the LastUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetLastUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdateTime) {
		return nil, false
	}
	return o.LastUpdateTime, true
}

// HasLastUpdateTime returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasLastUpdateTime() bool {
	if o != nil && !IsNil(o.LastUpdateTime) {
		return true
	}

	return false
}

// SetLastUpdateTime gets a reference to the given int64 and assigns it to the LastUpdateTime field.
func (o *DeploymentCH1Details) SetLastUpdateTime(v int64) {
	o.LastUpdateTime = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *DeploymentCH1Details) SetFileName(v string) {
	o.FileName = &v
}

// GetMuleVersion returns the MuleVersion field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetMuleVersion() MuleVersion {
	if o == nil || IsNil(o.MuleVersion) {
		var ret MuleVersion
		return ret
	}
	return *o.MuleVersion
}

// GetMuleVersionOk returns a tuple with the MuleVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetMuleVersionOk() (*MuleVersion, bool) {
	if o == nil || IsNil(o.MuleVersion) {
		return nil, false
	}
	return o.MuleVersion, true
}

// HasMuleVersion returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasMuleVersion() bool {
	if o != nil && !IsNil(o.MuleVersion) {
		return true
	}

	return false
}

// SetMuleVersion gets a reference to the given MuleVersion and assigns it to the MuleVersion field.
func (o *DeploymentCH1Details) SetMuleVersion(v MuleVersion) {
	o.MuleVersion = &v
}

// GetPreviousMuleVersion returns the PreviousMuleVersion field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetPreviousMuleVersion() MuleVersion {
	if o == nil || IsNil(o.PreviousMuleVersion) {
		var ret MuleVersion
		return ret
	}
	return *o.PreviousMuleVersion
}

// GetPreviousMuleVersionOk returns a tuple with the PreviousMuleVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetPreviousMuleVersionOk() (*MuleVersion, bool) {
	if o == nil || IsNil(o.PreviousMuleVersion) {
		return nil, false
	}
	return o.PreviousMuleVersion, true
}

// HasPreviousMuleVersion returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasPreviousMuleVersion() bool {
	if o != nil && !IsNil(o.PreviousMuleVersion) {
		return true
	}

	return false
}

// SetPreviousMuleVersion gets a reference to the given MuleVersion and assigns it to the PreviousMuleVersion field.
func (o *DeploymentCH1Details) SetPreviousMuleVersion(v MuleVersion) {
	o.PreviousMuleVersion = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetTenants() int32 {
	if o == nil || IsNil(o.Tenants) {
		var ret int32
		return ret
	}
	return *o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetTenantsOk() (*int32, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given int32 and assigns it to the Tenants field.
func (o *DeploymentCH1Details) SetTenants(v int32) {
	o.Tenants = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *DeploymentCH1Details) SetUserId(v string) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *DeploymentCH1Details) SetUserName(v string) {
	o.UserName = &v
}

// GetVpnConfig returns the VpnConfig field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetVpnConfig() DeploymentCH1DetailsVpnConfig {
	if o == nil || IsNil(o.VpnConfig) {
		var ret DeploymentCH1DetailsVpnConfig
		return ret
	}
	return *o.VpnConfig
}

// GetVpnConfigOk returns a tuple with the VpnConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetVpnConfigOk() (*DeploymentCH1DetailsVpnConfig, bool) {
	if o == nil || IsNil(o.VpnConfig) {
		return nil, false
	}
	return o.VpnConfig, true
}

// HasVpnConfig returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasVpnConfig() bool {
	if o != nil && !IsNil(o.VpnConfig) {
		return true
	}

	return false
}

// SetVpnConfig gets a reference to the given DeploymentCH1DetailsVpnConfig and assigns it to the VpnConfig field.
func (o *DeploymentCH1Details) SetVpnConfig(v DeploymentCH1DetailsVpnConfig) {
	o.VpnConfig = &v
}

// GetDeploymentGroup returns the DeploymentGroup field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetDeploymentGroup() DeploymentGroup {
	if o == nil || IsNil(o.DeploymentGroup) {
		var ret DeploymentGroup
		return ret
	}
	return *o.DeploymentGroup
}

// GetDeploymentGroupOk returns a tuple with the DeploymentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetDeploymentGroupOk() (*DeploymentGroup, bool) {
	if o == nil || IsNil(o.DeploymentGroup) {
		return nil, false
	}
	return o.DeploymentGroup, true
}

// HasDeploymentGroup returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasDeploymentGroup() bool {
	if o != nil && !IsNil(o.DeploymentGroup) {
		return true
	}

	return false
}

// SetDeploymentGroup gets a reference to the given DeploymentGroup and assigns it to the DeploymentGroup field.
func (o *DeploymentCH1Details) SetDeploymentGroup(v DeploymentGroup) {
	o.DeploymentGroup = &v
}

// GetPersistentQueues returns the PersistentQueues field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetPersistentQueues() bool {
	if o == nil || IsNil(o.PersistentQueues) {
		var ret bool
		return ret
	}
	return *o.PersistentQueues
}

// GetPersistentQueuesOk returns a tuple with the PersistentQueues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetPersistentQueuesOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentQueues) {
		return nil, false
	}
	return o.PersistentQueues, true
}

// HasPersistentQueues returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasPersistentQueues() bool {
	if o != nil && !IsNil(o.PersistentQueues) {
		return true
	}

	return false
}

// SetPersistentQueues gets a reference to the given bool and assigns it to the PersistentQueues field.
func (o *DeploymentCH1Details) SetPersistentQueues(v bool) {
	o.PersistentQueues = &v
}

// GetPersistentQueuesEncryptionEnabled returns the PersistentQueuesEncryptionEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetPersistentQueuesEncryptionEnabled() bool {
	if o == nil || IsNil(o.PersistentQueuesEncryptionEnabled) {
		var ret bool
		return ret
	}
	return *o.PersistentQueuesEncryptionEnabled
}

// GetPersistentQueuesEncryptionEnabledOk returns a tuple with the PersistentQueuesEncryptionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetPersistentQueuesEncryptionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentQueuesEncryptionEnabled) {
		return nil, false
	}
	return o.PersistentQueuesEncryptionEnabled, true
}

// HasPersistentQueuesEncryptionEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasPersistentQueuesEncryptionEnabled() bool {
	if o != nil && !IsNil(o.PersistentQueuesEncryptionEnabled) {
		return true
	}

	return false
}

// SetPersistentQueuesEncryptionEnabled gets a reference to the given bool and assigns it to the PersistentQueuesEncryptionEnabled field.
func (o *DeploymentCH1Details) SetPersistentQueuesEncryptionEnabled(v bool) {
	o.PersistentQueuesEncryptionEnabled = &v
}

// GetPersistentQueuesEncrypted returns the PersistentQueuesEncrypted field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetPersistentQueuesEncrypted() bool {
	if o == nil || IsNil(o.PersistentQueuesEncrypted) {
		var ret bool
		return ret
	}
	return *o.PersistentQueuesEncrypted
}

// GetPersistentQueuesEncryptedOk returns a tuple with the PersistentQueuesEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetPersistentQueuesEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistentQueuesEncrypted) {
		return nil, false
	}
	return o.PersistentQueuesEncrypted, true
}

// HasPersistentQueuesEncrypted returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasPersistentQueuesEncrypted() bool {
	if o != nil && !IsNil(o.PersistentQueuesEncrypted) {
		return true
	}

	return false
}

// SetPersistentQueuesEncrypted gets a reference to the given bool and assigns it to the PersistentQueuesEncrypted field.
func (o *DeploymentCH1Details) SetPersistentQueuesEncrypted(v bool) {
	o.PersistentQueuesEncrypted = &v
}

// GetMonitoringEnabled returns the MonitoringEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetMonitoringEnabled() bool {
	if o == nil || IsNil(o.MonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.MonitoringEnabled
}

// GetMonitoringEnabledOk returns a tuple with the MonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MonitoringEnabled) {
		return nil, false
	}
	return o.MonitoringEnabled, true
}

// HasMonitoringEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasMonitoringEnabled() bool {
	if o != nil && !IsNil(o.MonitoringEnabled) {
		return true
	}

	return false
}

// SetMonitoringEnabled gets a reference to the given bool and assigns it to the MonitoringEnabled field.
func (o *DeploymentCH1Details) SetMonitoringEnabled(v bool) {
	o.MonitoringEnabled = &v
}

// GetMonitoringAutoRestart returns the MonitoringAutoRestart field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetMonitoringAutoRestart() bool {
	if o == nil || IsNil(o.MonitoringAutoRestart) {
		var ret bool
		return ret
	}
	return *o.MonitoringAutoRestart
}

// GetMonitoringAutoRestartOk returns a tuple with the MonitoringAutoRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetMonitoringAutoRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.MonitoringAutoRestart) {
		return nil, false
	}
	return o.MonitoringAutoRestart, true
}

// HasMonitoringAutoRestart returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasMonitoringAutoRestart() bool {
	if o != nil && !IsNil(o.MonitoringAutoRestart) {
		return true
	}

	return false
}

// SetMonitoringAutoRestart gets a reference to the given bool and assigns it to the MonitoringAutoRestart field.
func (o *DeploymentCH1Details) SetMonitoringAutoRestart(v bool) {
	o.MonitoringAutoRestart = &v
}

// GetStaticIPsEnabled returns the StaticIPsEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetStaticIPsEnabled() bool {
	if o == nil || IsNil(o.StaticIPsEnabled) {
		var ret bool
		return ret
	}
	return *o.StaticIPsEnabled
}

// GetStaticIPsEnabledOk returns a tuple with the StaticIPsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetStaticIPsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.StaticIPsEnabled) {
		return nil, false
	}
	return o.StaticIPsEnabled, true
}

// HasStaticIPsEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasStaticIPsEnabled() bool {
	if o != nil && !IsNil(o.StaticIPsEnabled) {
		return true
	}

	return false
}

// SetStaticIPsEnabled gets a reference to the given bool and assigns it to the StaticIPsEnabled field.
func (o *DeploymentCH1Details) SetStaticIPsEnabled(v bool) {
	o.StaticIPsEnabled = &v
}

// GetMultitenanted returns the Multitenanted field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetMultitenanted() bool {
	if o == nil || IsNil(o.Multitenanted) {
		var ret bool
		return ret
	}
	return *o.Multitenanted
}

// GetMultitenantedOk returns a tuple with the Multitenanted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetMultitenantedOk() (*bool, bool) {
	if o == nil || IsNil(o.Multitenanted) {
		return nil, false
	}
	return o.Multitenanted, true
}

// HasMultitenanted returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasMultitenanted() bool {
	if o != nil && !IsNil(o.Multitenanted) {
		return true
	}

	return false
}

// SetMultitenanted gets a reference to the given bool and assigns it to the Multitenanted field.
func (o *DeploymentCH1Details) SetMultitenanted(v bool) {
	o.Multitenanted = &v
}

// GetHasFile returns the HasFile field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetHasFile() bool {
	if o == nil || IsNil(o.HasFile) {
		var ret bool
		return ret
	}
	return *o.HasFile
}

// GetHasFileOk returns a tuple with the HasFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetHasFileOk() (*bool, bool) {
	if o == nil || IsNil(o.HasFile) {
		return nil, false
	}
	return o.HasFile, true
}

// HasHasFile returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasHasFile() bool {
	if o != nil && !IsNil(o.HasFile) {
		return true
	}

	return false
}

// SetHasFile gets a reference to the given bool and assigns it to the HasFile field.
func (o *DeploymentCH1Details) SetHasFile(v bool) {
	o.HasFile = &v
}

// GetSecureDataGatewayEnabled returns the SecureDataGatewayEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetSecureDataGatewayEnabled() bool {
	if o == nil || IsNil(o.SecureDataGatewayEnabled) {
		var ret bool
		return ret
	}
	return *o.SecureDataGatewayEnabled
}

// GetSecureDataGatewayEnabledOk returns a tuple with the SecureDataGatewayEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetSecureDataGatewayEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SecureDataGatewayEnabled) {
		return nil, false
	}
	return o.SecureDataGatewayEnabled, true
}

// HasSecureDataGatewayEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasSecureDataGatewayEnabled() bool {
	if o != nil && !IsNil(o.SecureDataGatewayEnabled) {
		return true
	}

	return false
}

// SetSecureDataGatewayEnabled gets a reference to the given bool and assigns it to the SecureDataGatewayEnabled field.
func (o *DeploymentCH1Details) SetSecureDataGatewayEnabled(v bool) {
	o.SecureDataGatewayEnabled = &v
}

// GetVpnEnabled returns the VpnEnabled field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetVpnEnabled() bool {
	if o == nil || IsNil(o.VpnEnabled) {
		var ret bool
		return ret
	}
	return *o.VpnEnabled
}

// GetVpnEnabledOk returns a tuple with the VpnEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetVpnEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.VpnEnabled) {
		return nil, false
	}
	return o.VpnEnabled, true
}

// HasVpnEnabled returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasVpnEnabled() bool {
	if o != nil && !IsNil(o.VpnEnabled) {
		return true
	}

	return false
}

// SetVpnEnabled gets a reference to the given bool and assigns it to the VpnEnabled field.
func (o *DeploymentCH1Details) SetVpnEnabled(v bool) {
	o.VpnEnabled = &v
}

// GetTrackingSettings returns the TrackingSettings field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetTrackingSettings() TrackingSettings {
	if o == nil || IsNil(o.TrackingSettings) {
		var ret TrackingSettings
		return ret
	}
	return *o.TrackingSettings
}

// GetTrackingSettingsOk returns a tuple with the TrackingSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetTrackingSettingsOk() (*TrackingSettings, bool) {
	if o == nil || IsNil(o.TrackingSettings) {
		return nil, false
	}
	return o.TrackingSettings, true
}

// HasTrackingSettings returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasTrackingSettings() bool {
	if o != nil && !IsNil(o.TrackingSettings) {
		return true
	}

	return false
}

// SetTrackingSettings gets a reference to the given TrackingSettings and assigns it to the TrackingSettings field.
func (o *DeploymentCH1Details) SetTrackingSettings(v TrackingSettings) {
	o.TrackingSettings = &v
}

// GetLogLevels returns the LogLevels field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetLogLevels() []LogLevel {
	if o == nil || IsNil(o.LogLevels) {
		var ret []LogLevel
		return ret
	}
	return o.LogLevels
}

// GetLogLevelsOk returns a tuple with the LogLevels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetLogLevelsOk() ([]LogLevel, bool) {
	if o == nil || IsNil(o.LogLevels) {
		return nil, false
	}
	return o.LogLevels, true
}

// HasLogLevels returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasLogLevels() bool {
	if o != nil && !IsNil(o.LogLevels) {
		return true
	}

	return false
}

// SetLogLevels gets a reference to the given []LogLevel and assigns it to the LogLevels field.
func (o *DeploymentCH1Details) SetLogLevels(v []LogLevel) {
	o.LogLevels = v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *DeploymentCH1Details) GetIpAddresses() []IpAddress {
	if o == nil || IsNil(o.IpAddresses) {
		var ret []IpAddress
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCH1Details) GetIpAddressesOk() ([]IpAddress, bool) {
	if o == nil || IsNil(o.IpAddresses) {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *DeploymentCH1Details) HasIpAddresses() bool {
	if o != nil && !IsNil(o.IpAddresses) {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []IpAddress and assigns it to the IpAddresses field.
func (o *DeploymentCH1Details) SetIpAddresses(v []IpAddress) {
	o.IpAddresses = v
}

func (o DeploymentCH1Details) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentCH1Details) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.FullDomain) {
		toSerialize["fullDomain"] = o.FullDomain
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.PropertiesOptions) {
		toSerialize["propertiesOptions"] = o.PropertiesOptions
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Workers) {
		toSerialize["workers"] = o.Workers
	}
	if !IsNil(o.LastUpdateTime) {
		toSerialize["lastUpdateTime"] = o.LastUpdateTime
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.MuleVersion) {
		toSerialize["muleVersion"] = o.MuleVersion
	}
	if !IsNil(o.PreviousMuleVersion) {
		toSerialize["previousMuleVersion"] = o.PreviousMuleVersion
	}
	if !IsNil(o.Tenants) {
		toSerialize["tenants"] = o.Tenants
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.VpnConfig) {
		toSerialize["vpnConfig"] = o.VpnConfig
	}
	if !IsNil(o.DeploymentGroup) {
		toSerialize["deploymentGroup"] = o.DeploymentGroup
	}
	if !IsNil(o.PersistentQueues) {
		toSerialize["persistentQueues"] = o.PersistentQueues
	}
	if !IsNil(o.PersistentQueuesEncryptionEnabled) {
		toSerialize["persistentQueuesEncryptionEnabled"] = o.PersistentQueuesEncryptionEnabled
	}
	if !IsNil(o.PersistentQueuesEncrypted) {
		toSerialize["persistentQueuesEncrypted"] = o.PersistentQueuesEncrypted
	}
	if !IsNil(o.MonitoringEnabled) {
		toSerialize["monitoringEnabled"] = o.MonitoringEnabled
	}
	if !IsNil(o.MonitoringAutoRestart) {
		toSerialize["monitoringAutoRestart"] = o.MonitoringAutoRestart
	}
	if !IsNil(o.StaticIPsEnabled) {
		toSerialize["staticIPsEnabled"] = o.StaticIPsEnabled
	}
	if !IsNil(o.Multitenanted) {
		toSerialize["multitenanted"] = o.Multitenanted
	}
	if !IsNil(o.HasFile) {
		toSerialize["hasFile"] = o.HasFile
	}
	if !IsNil(o.SecureDataGatewayEnabled) {
		toSerialize["secureDataGatewayEnabled"] = o.SecureDataGatewayEnabled
	}
	if !IsNil(o.VpnEnabled) {
		toSerialize["vpnEnabled"] = o.VpnEnabled
	}
	if !IsNil(o.TrackingSettings) {
		toSerialize["trackingSettings"] = o.TrackingSettings
	}
	if !IsNil(o.LogLevels) {
		toSerialize["logLevels"] = o.LogLevels
	}
	if !IsNil(o.IpAddresses) {
		toSerialize["ipAddresses"] = o.IpAddresses
	}
	return toSerialize, nil
}

type NullableDeploymentCH1Details struct {
	value *DeploymentCH1Details
	isSet bool
}

func (v NullableDeploymentCH1Details) Get() *DeploymentCH1Details {
	return v.value
}

func (v *NullableDeploymentCH1Details) Set(val *DeploymentCH1Details) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentCH1Details) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentCH1Details) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentCH1Details(val *DeploymentCH1Details) *NullableDeploymentCH1Details {
	return &NullableDeploymentCH1Details{value: val, isSet: true}
}

func (v NullableDeploymentCH1Details) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentCH1Details) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


