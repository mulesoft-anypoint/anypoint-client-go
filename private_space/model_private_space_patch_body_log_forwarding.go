/*
Private Space API

Description of the Private Space API

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space

import (
	"encoding/json"
)

// checks if the PrivateSpacePatchBodyLogForwarding type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpacePatchBodyLogForwarding{}

// PrivateSpacePatchBodyLogForwarding struct for PrivateSpacePatchBodyLogForwarding
type PrivateSpacePatchBodyLogForwarding struct {
	// The desired action to push logs to Anypoint monitoring.
	AnypointMonitoring *bool `json:"anypointMonitoring,omitempty"`
}

// NewPrivateSpacePatchBodyLogForwarding instantiates a new PrivateSpacePatchBodyLogForwarding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpacePatchBodyLogForwarding() *PrivateSpacePatchBodyLogForwarding {
	this := PrivateSpacePatchBodyLogForwarding{}
	return &this
}

// NewPrivateSpacePatchBodyLogForwardingWithDefaults instantiates a new PrivateSpacePatchBodyLogForwarding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpacePatchBodyLogForwardingWithDefaults() *PrivateSpacePatchBodyLogForwarding {
	this := PrivateSpacePatchBodyLogForwarding{}
	return &this
}

// GetAnypointMonitoring returns the AnypointMonitoring field value if set, zero value otherwise.
func (o *PrivateSpacePatchBodyLogForwarding) GetAnypointMonitoring() bool {
	if o == nil || IsNil(o.AnypointMonitoring) {
		var ret bool
		return ret
	}
	return *o.AnypointMonitoring
}

// GetAnypointMonitoringOk returns a tuple with the AnypointMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBodyLogForwarding) GetAnypointMonitoringOk() (*bool, bool) {
	if o == nil || IsNil(o.AnypointMonitoring) {
		return nil, false
	}
	return o.AnypointMonitoring, true
}

// HasAnypointMonitoring returns a boolean if a field has been set.
func (o *PrivateSpacePatchBodyLogForwarding) HasAnypointMonitoring() bool {
	if o != nil && !IsNil(o.AnypointMonitoring) {
		return true
	}

	return false
}

// SetAnypointMonitoring gets a reference to the given bool and assigns it to the AnypointMonitoring field.
func (o *PrivateSpacePatchBodyLogForwarding) SetAnypointMonitoring(v bool) {
	o.AnypointMonitoring = &v
}

func (o PrivateSpacePatchBodyLogForwarding) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpacePatchBodyLogForwarding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnypointMonitoring) {
		toSerialize["anypointMonitoring"] = o.AnypointMonitoring
	}
	return toSerialize, nil
}

type NullablePrivateSpacePatchBodyLogForwarding struct {
	value *PrivateSpacePatchBodyLogForwarding
	isSet bool
}

func (v NullablePrivateSpacePatchBodyLogForwarding) Get() *PrivateSpacePatchBodyLogForwarding {
	return v.value
}

func (v *NullablePrivateSpacePatchBodyLogForwarding) Set(val *PrivateSpacePatchBodyLogForwarding) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpacePatchBodyLogForwarding) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpacePatchBodyLogForwarding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpacePatchBodyLogForwarding(val *PrivateSpacePatchBodyLogForwarding) *NullablePrivateSpacePatchBodyLogForwarding {
	return &NullablePrivateSpacePatchBodyLogForwarding{value: val, isSet: true}
}

func (v NullablePrivateSpacePatchBodyLogForwarding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpacePatchBodyLogForwarding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


