/*
Private Space API

Description of the Private Space API

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space

import (
	"encoding/json"
)

// checks if the PrivateSpaceIamRoles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpaceIamRoles{}

// PrivateSpaceIamRoles struct for PrivateSpaceIamRoles
type PrivateSpaceIamRoles struct {
	Roles []string `json:"roles,omitempty"`
	// The ID of the organization in GUID format.
	OrganizationId *string `json:"organizationId,omitempty"`
	// The ID of the private space in GUID format.
	SpaceId *string `json:"spaceId,omitempty"`
}

// NewPrivateSpaceIamRoles instantiates a new PrivateSpaceIamRoles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpaceIamRoles() *PrivateSpaceIamRoles {
	this := PrivateSpaceIamRoles{}
	return &this
}

// NewPrivateSpaceIamRolesWithDefaults instantiates a new PrivateSpaceIamRoles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceIamRolesWithDefaults() *PrivateSpaceIamRoles {
	this := PrivateSpaceIamRoles{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *PrivateSpaceIamRoles) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceIamRoles) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *PrivateSpaceIamRoles) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *PrivateSpaceIamRoles) SetRoles(v []string) {
	o.Roles = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *PrivateSpaceIamRoles) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceIamRoles) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *PrivateSpaceIamRoles) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *PrivateSpaceIamRoles) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *PrivateSpaceIamRoles) GetSpaceId() string {
	if o == nil || IsNil(o.SpaceId) {
		var ret string
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceIamRoles) GetSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceId) {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *PrivateSpaceIamRoles) HasSpaceId() bool {
	if o != nil && !IsNil(o.SpaceId) {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given string and assigns it to the SpaceId field.
func (o *PrivateSpaceIamRoles) SetSpaceId(v string) {
	o.SpaceId = &v
}

func (o PrivateSpaceIamRoles) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpaceIamRoles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.SpaceId) {
		toSerialize["spaceId"] = o.SpaceId
	}
	return toSerialize, nil
}

type NullablePrivateSpaceIamRoles struct {
	value *PrivateSpaceIamRoles
	isSet bool
}

func (v NullablePrivateSpaceIamRoles) Get() *PrivateSpaceIamRoles {
	return v.value
}

func (v *NullablePrivateSpaceIamRoles) Set(val *PrivateSpaceIamRoles) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpaceIamRoles) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpaceIamRoles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpaceIamRoles(val *PrivateSpaceIamRoles) *NullablePrivateSpaceIamRoles {
	return &NullablePrivateSpaceIamRoles{value: val, isSet: true}
}

func (v NullablePrivateSpaceIamRoles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpaceIamRoles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


