/*
Private Space API

Description of the Private Space API

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space

import (
	"encoding/json"
)

// checks if the GlobalSpaceStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalSpaceStatus{}

// GlobalSpaceStatus Global Status object for the space.
type GlobalSpaceStatus struct {
	Space PrivateSpaceComponentStatus `json:"space,omitempty"`
	// The status of the space cluster component.
	Cluster []GlobalSpaceStatusClusterInner `json:"cluster,omitempty"`
	Network PrivateSpaceComponentStatus `json:"network,omitempty"`
}

// NewGlobalSpaceStatus instantiates a new GlobalSpaceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalSpaceStatus() *GlobalSpaceStatus {
	this := GlobalSpaceStatus{}
	return &this
}

// NewGlobalSpaceStatusWithDefaults instantiates a new GlobalSpaceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalSpaceStatusWithDefaults() *GlobalSpaceStatus {
	this := GlobalSpaceStatus{}
	return &this
}

// GetSpace returns the Space field value if set, zero value otherwise.
func (o *GlobalSpaceStatus) GetSpace() PrivateSpaceComponentStatus {
	if o == nil || IsNil(o.Space) {
		var ret PrivateSpaceComponentStatus
		return ret
	}
	return o.Space
}

// GetSpaceOk returns a tuple with the Space field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSpaceStatus) GetSpaceOk() (PrivateSpaceComponentStatus, bool) {
	if o == nil || IsNil(o.Space) {
		return PrivateSpaceComponentStatus{}, false
	}
	return o.Space, true
}

// HasSpace returns a boolean if a field has been set.
func (o *GlobalSpaceStatus) HasSpace() bool {
	if o != nil && !IsNil(o.Space) {
		return true
	}

	return false
}

// SetSpace gets a reference to the given PrivateSpaceComponentStatus and assigns it to the Space field.
func (o *GlobalSpaceStatus) SetSpace(v PrivateSpaceComponentStatus) {
	o.Space = v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *GlobalSpaceStatus) GetCluster() []GlobalSpaceStatusClusterInner {
	if o == nil || IsNil(o.Cluster) {
		var ret []GlobalSpaceStatusClusterInner
		return ret
	}
	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSpaceStatus) GetClusterOk() ([]GlobalSpaceStatusClusterInner, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *GlobalSpaceStatus) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given []GlobalSpaceStatusClusterInner and assigns it to the Cluster field.
func (o *GlobalSpaceStatus) SetCluster(v []GlobalSpaceStatusClusterInner) {
	o.Cluster = v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *GlobalSpaceStatus) GetNetwork() PrivateSpaceComponentStatus {
	if o == nil || IsNil(o.Network) {
		var ret PrivateSpaceComponentStatus
		return ret
	}
	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalSpaceStatus) GetNetworkOk() (PrivateSpaceComponentStatus, bool) {
	if o == nil || IsNil(o.Network) {
		return PrivateSpaceComponentStatus{}, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *GlobalSpaceStatus) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given PrivateSpaceComponentStatus and assigns it to the Network field.
func (o *GlobalSpaceStatus) SetNetwork(v PrivateSpaceComponentStatus) {
	o.Network = v
}

func (o GlobalSpaceStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalSpaceStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Space) {
		toSerialize["space"] = o.Space
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	return toSerialize, nil
}

type NullableGlobalSpaceStatus struct {
	value *GlobalSpaceStatus
	isSet bool
}

func (v NullableGlobalSpaceStatus) Get() *GlobalSpaceStatus {
	return v.value
}

func (v *NullableGlobalSpaceStatus) Set(val *GlobalSpaceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalSpaceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalSpaceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalSpaceStatus(val *GlobalSpaceStatus) *NullableGlobalSpaceStatus {
	return &NullableGlobalSpaceStatus{value: val, isSet: true}
}

func (v NullableGlobalSpaceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalSpaceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


