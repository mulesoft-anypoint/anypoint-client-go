/*
Private Space API

Description of the Private Space API

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space

import (
	"encoding/json"
)

// checks if the PrivateSpacePatchBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpacePatchBody{}

// PrivateSpacePatchBody struct for PrivateSpacePatchBody
type PrivateSpacePatchBody struct {
	Environments *PrivateSpaceAssociatedEnvironments `json:"environments,omitempty"`
	Network *PrivateSpaceNetworkEditable `json:"network,omitempty"`
	// The list of firewall rules for the Private Space network.
	FirewallRules []FirewallRule `json:"firewallRules,omitempty"`
	LogForwarding *PrivateSpacePatchBodyLogForwarding `json:"logForwarding,omitempty"`
	IngressConfiguration *IngressConfiguration `json:"ingressConfiguration,omitempty"`
	// If true, application deployed to this space will have the Private Space IAM role attached to the service account.
	EnableIAMRole *bool `json:"enableIAMRole,omitempty"`
	// If true, egress is enabled for the private space.
	EnableEgress *bool `json:"enableEgress,omitempty"`
	// If true, network isolation is enabled for the private space.
	EnableNetworkIsolation *bool `json:"enableNetworkIsolation,omitempty"`
}

// NewPrivateSpacePatchBody instantiates a new PrivateSpacePatchBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpacePatchBody() *PrivateSpacePatchBody {
	this := PrivateSpacePatchBody{}
	return &this
}

// NewPrivateSpacePatchBodyWithDefaults instantiates a new PrivateSpacePatchBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpacePatchBodyWithDefaults() *PrivateSpacePatchBody {
	this := PrivateSpacePatchBody{}
	return &this
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *PrivateSpacePatchBody) GetEnvironments() PrivateSpaceAssociatedEnvironments {
	if o == nil || IsNil(o.Environments) {
		var ret PrivateSpaceAssociatedEnvironments
		return ret
	}
	return *o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBody) GetEnvironmentsOk() (*PrivateSpaceAssociatedEnvironments, bool) {
	if o == nil || IsNil(o.Environments) {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *PrivateSpacePatchBody) HasEnvironments() bool {
	if o != nil && !IsNil(o.Environments) {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given PrivateSpaceAssociatedEnvironments and assigns it to the Environments field.
func (o *PrivateSpacePatchBody) SetEnvironments(v PrivateSpaceAssociatedEnvironments) {
	o.Environments = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *PrivateSpacePatchBody) GetNetwork() PrivateSpaceNetworkEditable {
	if o == nil || IsNil(o.Network) {
		var ret PrivateSpaceNetworkEditable
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBody) GetNetworkOk() (*PrivateSpaceNetworkEditable, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *PrivateSpacePatchBody) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given PrivateSpaceNetworkEditable and assigns it to the Network field.
func (o *PrivateSpacePatchBody) SetNetwork(v PrivateSpaceNetworkEditable) {
	o.Network = &v
}

// GetFirewallRules returns the FirewallRules field value if set, zero value otherwise.
func (o *PrivateSpacePatchBody) GetFirewallRules() []FirewallRule {
	if o == nil || IsNil(o.FirewallRules) {
		var ret []FirewallRule
		return ret
	}
	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBody) GetFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil || IsNil(o.FirewallRules) {
		return nil, false
	}
	return o.FirewallRules, true
}

// HasFirewallRules returns a boolean if a field has been set.
func (o *PrivateSpacePatchBody) HasFirewallRules() bool {
	if o != nil && !IsNil(o.FirewallRules) {
		return true
	}

	return false
}

// SetFirewallRules gets a reference to the given []FirewallRule and assigns it to the FirewallRules field.
func (o *PrivateSpacePatchBody) SetFirewallRules(v []FirewallRule) {
	o.FirewallRules = v
}

// GetLogForwarding returns the LogForwarding field value if set, zero value otherwise.
func (o *PrivateSpacePatchBody) GetLogForwarding() PrivateSpacePatchBodyLogForwarding {
	if o == nil || IsNil(o.LogForwarding) {
		var ret PrivateSpacePatchBodyLogForwarding
		return ret
	}
	return *o.LogForwarding
}

// GetLogForwardingOk returns a tuple with the LogForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBody) GetLogForwardingOk() (*PrivateSpacePatchBodyLogForwarding, bool) {
	if o == nil || IsNil(o.LogForwarding) {
		return nil, false
	}
	return o.LogForwarding, true
}

// HasLogForwarding returns a boolean if a field has been set.
func (o *PrivateSpacePatchBody) HasLogForwarding() bool {
	if o != nil && !IsNil(o.LogForwarding) {
		return true
	}

	return false
}

// SetLogForwarding gets a reference to the given PrivateSpacePatchBodyLogForwarding and assigns it to the LogForwarding field.
func (o *PrivateSpacePatchBody) SetLogForwarding(v PrivateSpacePatchBodyLogForwarding) {
	o.LogForwarding = &v
}

// GetIngressConfiguration returns the IngressConfiguration field value if set, zero value otherwise.
func (o *PrivateSpacePatchBody) GetIngressConfiguration() IngressConfiguration {
	if o == nil || IsNil(o.IngressConfiguration) {
		var ret IngressConfiguration
		return ret
	}
	return *o.IngressConfiguration
}

// GetIngressConfigurationOk returns a tuple with the IngressConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBody) GetIngressConfigurationOk() (*IngressConfiguration, bool) {
	if o == nil || IsNil(o.IngressConfiguration) {
		return nil, false
	}
	return o.IngressConfiguration, true
}

// HasIngressConfiguration returns a boolean if a field has been set.
func (o *PrivateSpacePatchBody) HasIngressConfiguration() bool {
	if o != nil && !IsNil(o.IngressConfiguration) {
		return true
	}

	return false
}

// SetIngressConfiguration gets a reference to the given IngressConfiguration and assigns it to the IngressConfiguration field.
func (o *PrivateSpacePatchBody) SetIngressConfiguration(v IngressConfiguration) {
	o.IngressConfiguration = &v
}

// GetEnableIAMRole returns the EnableIAMRole field value if set, zero value otherwise.
func (o *PrivateSpacePatchBody) GetEnableIAMRole() bool {
	if o == nil || IsNil(o.EnableIAMRole) {
		var ret bool
		return ret
	}
	return *o.EnableIAMRole
}

// GetEnableIAMRoleOk returns a tuple with the EnableIAMRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBody) GetEnableIAMRoleOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableIAMRole) {
		return nil, false
	}
	return o.EnableIAMRole, true
}

// HasEnableIAMRole returns a boolean if a field has been set.
func (o *PrivateSpacePatchBody) HasEnableIAMRole() bool {
	if o != nil && !IsNil(o.EnableIAMRole) {
		return true
	}

	return false
}

// SetEnableIAMRole gets a reference to the given bool and assigns it to the EnableIAMRole field.
func (o *PrivateSpacePatchBody) SetEnableIAMRole(v bool) {
	o.EnableIAMRole = &v
}

// GetEnableEgress returns the EnableEgress field value if set, zero value otherwise.
func (o *PrivateSpacePatchBody) GetEnableEgress() bool {
	if o == nil || IsNil(o.EnableEgress) {
		var ret bool
		return ret
	}
	return *o.EnableEgress
}

// GetEnableEgressOk returns a tuple with the EnableEgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBody) GetEnableEgressOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableEgress) {
		return nil, false
	}
	return o.EnableEgress, true
}

// HasEnableEgress returns a boolean if a field has been set.
func (o *PrivateSpacePatchBody) HasEnableEgress() bool {
	if o != nil && !IsNil(o.EnableEgress) {
		return true
	}

	return false
}

// SetEnableEgress gets a reference to the given bool and assigns it to the EnableEgress field.
func (o *PrivateSpacePatchBody) SetEnableEgress(v bool) {
	o.EnableEgress = &v
}

// GetEnableNetworkIsolation returns the EnableNetworkIsolation field value if set, zero value otherwise.
func (o *PrivateSpacePatchBody) GetEnableNetworkIsolation() bool {
	if o == nil || IsNil(o.EnableNetworkIsolation) {
		var ret bool
		return ret
	}
	return *o.EnableNetworkIsolation
}

// GetEnableNetworkIsolationOk returns a tuple with the EnableNetworkIsolation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpacePatchBody) GetEnableNetworkIsolationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableNetworkIsolation) {
		return nil, false
	}
	return o.EnableNetworkIsolation, true
}

// HasEnableNetworkIsolation returns a boolean if a field has been set.
func (o *PrivateSpacePatchBody) HasEnableNetworkIsolation() bool {
	if o != nil && !IsNil(o.EnableNetworkIsolation) {
		return true
	}

	return false
}

// SetEnableNetworkIsolation gets a reference to the given bool and assigns it to the EnableNetworkIsolation field.
func (o *PrivateSpacePatchBody) SetEnableNetworkIsolation(v bool) {
	o.EnableNetworkIsolation = &v
}

func (o PrivateSpacePatchBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpacePatchBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Environments) {
		toSerialize["environments"] = o.Environments
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.FirewallRules) {
		toSerialize["firewallRules"] = o.FirewallRules
	}
	if !IsNil(o.LogForwarding) {
		toSerialize["logForwarding"] = o.LogForwarding
	}
	if !IsNil(o.IngressConfiguration) {
		toSerialize["ingressConfiguration"] = o.IngressConfiguration
	}
	if !IsNil(o.EnableIAMRole) {
		toSerialize["enableIAMRole"] = o.EnableIAMRole
	}
	if !IsNil(o.EnableEgress) {
		toSerialize["enableEgress"] = o.EnableEgress
	}
	if !IsNil(o.EnableNetworkIsolation) {
		toSerialize["enableNetworkIsolation"] = o.EnableNetworkIsolation
	}
	return toSerialize, nil
}

type NullablePrivateSpacePatchBody struct {
	value *PrivateSpacePatchBody
	isSet bool
}

func (v NullablePrivateSpacePatchBody) Get() *PrivateSpacePatchBody {
	return v.value
}

func (v *NullablePrivateSpacePatchBody) Set(val *PrivateSpacePatchBody) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpacePatchBody) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpacePatchBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpacePatchBody(val *PrivateSpacePatchBody) *NullablePrivateSpacePatchBody {
	return &NullablePrivateSpacePatchBody{value: val, isSet: true}
}

func (v NullablePrivateSpacePatchBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpacePatchBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


