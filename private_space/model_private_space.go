/*
Private Space API

Description of the Private Space API

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space

import (
	"encoding/json"
)

// checks if the PrivateSpace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpace{}

// PrivateSpace struct for PrivateSpace
type PrivateSpace struct {
	// The ID of the private space in GUID format.
	Id *string `json:"id,omitempty"`
	// The name of the private space.
	Name *string `json:"name,omitempty"`
	// The version of the private space.
	Version *string `json:"version,omitempty"`
	// The ID of the organization in GUID format.
	OrganizationId *string `json:"organizationId,omitempty"`
	// The root organization ID of the private space in GUID format.
	RootOrganizationId *string `json:"rootOrganizationId,omitempty"`
	// The status of the private space.
	Status *string `json:"status,omitempty"`
	// The last reported infra status message.
	StatusMessage *string `json:"statusMessage,omitempty"`
	Provisioning *PrivateSpaceProvisioning `json:"provisioning,omitempty"`
	// The region of the private space.
	Region *string `json:"region,omitempty"`
	Environments *PrivateSpaceAssociatedEnvironments `json:"environments,omitempty"`
	Network *PrivateSpaceNetwork `json:"network,omitempty"`
	// The list of firewall rules for the Private Space network.
	FirewallRules []FirewallRule `json:"firewallRules,omitempty"`
	IngressConfiguration *IngressConfiguration `json:"ingressConfiguration,omitempty"`
	// If true, application deployed to this space will have the Private Space IAM role attached to the service account.
	EnableIAMRole *bool `json:"enableIAMRole,omitempty"`
	// If true, egress is enabled for the private space.
	EnableEgress *bool `json:"enableEgress,omitempty"`
	// If true, network isolation is enabled for the private space.
	EnableNetworkIsolation *bool `json:"enableNetworkIsolation,omitempty"`
	GlobalSpaceStatus *GlobalSpaceStatus `json:"globalSpaceStatus,omitempty"`
	// The number of MuleSoft applications deployed to the private space.
	MuleAppDeploymentCount *int32 `json:"muleAppDeploymentCount,omitempty"`
	// The number of days left for the relaxed quota.
	DaysLeftForRelaxedQuota *int32 `json:"daysLeftForRelaxedQuota,omitempty"`
	// If true, a VPC migration is in progress for the private space.
	VpcMigrationInProgress *bool `json:"vpcMigrationInProgress,omitempty"`
}

// NewPrivateSpace instantiates a new PrivateSpace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpace() *PrivateSpace {
	this := PrivateSpace{}
	return &this
}

// NewPrivateSpaceWithDefaults instantiates a new PrivateSpace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceWithDefaults() *PrivateSpace {
	this := PrivateSpace{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PrivateSpace) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PrivateSpace) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PrivateSpace) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PrivateSpace) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PrivateSpace) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PrivateSpace) SetName(v string) {
	o.Name = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PrivateSpace) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PrivateSpace) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PrivateSpace) SetVersion(v string) {
	o.Version = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *PrivateSpace) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *PrivateSpace) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *PrivateSpace) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetRootOrganizationId returns the RootOrganizationId field value if set, zero value otherwise.
func (o *PrivateSpace) GetRootOrganizationId() string {
	if o == nil || IsNil(o.RootOrganizationId) {
		var ret string
		return ret
	}
	return *o.RootOrganizationId
}

// GetRootOrganizationIdOk returns a tuple with the RootOrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetRootOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.RootOrganizationId) {
		return nil, false
	}
	return o.RootOrganizationId, true
}

// HasRootOrganizationId returns a boolean if a field has been set.
func (o *PrivateSpace) HasRootOrganizationId() bool {
	if o != nil && !IsNil(o.RootOrganizationId) {
		return true
	}

	return false
}

// SetRootOrganizationId gets a reference to the given string and assigns it to the RootOrganizationId field.
func (o *PrivateSpace) SetRootOrganizationId(v string) {
	o.RootOrganizationId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PrivateSpace) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PrivateSpace) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PrivateSpace) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *PrivateSpace) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *PrivateSpace) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *PrivateSpace) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetProvisioning returns the Provisioning field value if set, zero value otherwise.
func (o *PrivateSpace) GetProvisioning() PrivateSpaceProvisioning {
	if o == nil || IsNil(o.Provisioning) {
		var ret PrivateSpaceProvisioning
		return ret
	}
	return *o.Provisioning
}

// GetProvisioningOk returns a tuple with the Provisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetProvisioningOk() (*PrivateSpaceProvisioning, bool) {
	if o == nil || IsNil(o.Provisioning) {
		return nil, false
	}
	return o.Provisioning, true
}

// HasProvisioning returns a boolean if a field has been set.
func (o *PrivateSpace) HasProvisioning() bool {
	if o != nil && !IsNil(o.Provisioning) {
		return true
	}

	return false
}

// SetProvisioning gets a reference to the given PrivateSpaceProvisioning and assigns it to the Provisioning field.
func (o *PrivateSpace) SetProvisioning(v PrivateSpaceProvisioning) {
	o.Provisioning = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PrivateSpace) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PrivateSpace) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PrivateSpace) SetRegion(v string) {
	o.Region = &v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *PrivateSpace) GetEnvironments() PrivateSpaceAssociatedEnvironments {
	if o == nil || IsNil(o.Environments) {
		var ret PrivateSpaceAssociatedEnvironments
		return ret
	}
	return *o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetEnvironmentsOk() (*PrivateSpaceAssociatedEnvironments, bool) {
	if o == nil || IsNil(o.Environments) {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *PrivateSpace) HasEnvironments() bool {
	if o != nil && !IsNil(o.Environments) {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given PrivateSpaceAssociatedEnvironments and assigns it to the Environments field.
func (o *PrivateSpace) SetEnvironments(v PrivateSpaceAssociatedEnvironments) {
	o.Environments = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *PrivateSpace) GetNetwork() PrivateSpaceNetwork {
	if o == nil || IsNil(o.Network) {
		var ret PrivateSpaceNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetNetworkOk() (*PrivateSpaceNetwork, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *PrivateSpace) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given PrivateSpaceNetwork and assigns it to the Network field.
func (o *PrivateSpace) SetNetwork(v PrivateSpaceNetwork) {
	o.Network = &v
}

// GetFirewallRules returns the FirewallRules field value if set, zero value otherwise.
func (o *PrivateSpace) GetFirewallRules() []FirewallRule {
	if o == nil || IsNil(o.FirewallRules) {
		var ret []FirewallRule
		return ret
	}
	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil || IsNil(o.FirewallRules) {
		return nil, false
	}
	return o.FirewallRules, true
}

// HasFirewallRules returns a boolean if a field has been set.
func (o *PrivateSpace) HasFirewallRules() bool {
	if o != nil && !IsNil(o.FirewallRules) {
		return true
	}

	return false
}

// SetFirewallRules gets a reference to the given []FirewallRule and assigns it to the FirewallRules field.
func (o *PrivateSpace) SetFirewallRules(v []FirewallRule) {
	o.FirewallRules = v
}

// GetIngressConfiguration returns the IngressConfiguration field value if set, zero value otherwise.
func (o *PrivateSpace) GetIngressConfiguration() IngressConfiguration {
	if o == nil || IsNil(o.IngressConfiguration) {
		var ret IngressConfiguration
		return ret
	}
	return *o.IngressConfiguration
}

// GetIngressConfigurationOk returns a tuple with the IngressConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetIngressConfigurationOk() (*IngressConfiguration, bool) {
	if o == nil || IsNil(o.IngressConfiguration) {
		return nil, false
	}
	return o.IngressConfiguration, true
}

// HasIngressConfiguration returns a boolean if a field has been set.
func (o *PrivateSpace) HasIngressConfiguration() bool {
	if o != nil && !IsNil(o.IngressConfiguration) {
		return true
	}

	return false
}

// SetIngressConfiguration gets a reference to the given IngressConfiguration and assigns it to the IngressConfiguration field.
func (o *PrivateSpace) SetIngressConfiguration(v IngressConfiguration) {
	o.IngressConfiguration = &v
}

// GetEnableIAMRole returns the EnableIAMRole field value if set, zero value otherwise.
func (o *PrivateSpace) GetEnableIAMRole() bool {
	if o == nil || IsNil(o.EnableIAMRole) {
		var ret bool
		return ret
	}
	return *o.EnableIAMRole
}

// GetEnableIAMRoleOk returns a tuple with the EnableIAMRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetEnableIAMRoleOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableIAMRole) {
		return nil, false
	}
	return o.EnableIAMRole, true
}

// HasEnableIAMRole returns a boolean if a field has been set.
func (o *PrivateSpace) HasEnableIAMRole() bool {
	if o != nil && !IsNil(o.EnableIAMRole) {
		return true
	}

	return false
}

// SetEnableIAMRole gets a reference to the given bool and assigns it to the EnableIAMRole field.
func (o *PrivateSpace) SetEnableIAMRole(v bool) {
	o.EnableIAMRole = &v
}

// GetEnableEgress returns the EnableEgress field value if set, zero value otherwise.
func (o *PrivateSpace) GetEnableEgress() bool {
	if o == nil || IsNil(o.EnableEgress) {
		var ret bool
		return ret
	}
	return *o.EnableEgress
}

// GetEnableEgressOk returns a tuple with the EnableEgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetEnableEgressOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableEgress) {
		return nil, false
	}
	return o.EnableEgress, true
}

// HasEnableEgress returns a boolean if a field has been set.
func (o *PrivateSpace) HasEnableEgress() bool {
	if o != nil && !IsNil(o.EnableEgress) {
		return true
	}

	return false
}

// SetEnableEgress gets a reference to the given bool and assigns it to the EnableEgress field.
func (o *PrivateSpace) SetEnableEgress(v bool) {
	o.EnableEgress = &v
}

// GetEnableNetworkIsolation returns the EnableNetworkIsolation field value if set, zero value otherwise.
func (o *PrivateSpace) GetEnableNetworkIsolation() bool {
	if o == nil || IsNil(o.EnableNetworkIsolation) {
		var ret bool
		return ret
	}
	return *o.EnableNetworkIsolation
}

// GetEnableNetworkIsolationOk returns a tuple with the EnableNetworkIsolation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetEnableNetworkIsolationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableNetworkIsolation) {
		return nil, false
	}
	return o.EnableNetworkIsolation, true
}

// HasEnableNetworkIsolation returns a boolean if a field has been set.
func (o *PrivateSpace) HasEnableNetworkIsolation() bool {
	if o != nil && !IsNil(o.EnableNetworkIsolation) {
		return true
	}

	return false
}

// SetEnableNetworkIsolation gets a reference to the given bool and assigns it to the EnableNetworkIsolation field.
func (o *PrivateSpace) SetEnableNetworkIsolation(v bool) {
	o.EnableNetworkIsolation = &v
}

// GetGlobalSpaceStatus returns the GlobalSpaceStatus field value if set, zero value otherwise.
func (o *PrivateSpace) GetGlobalSpaceStatus() GlobalSpaceStatus {
	if o == nil || IsNil(o.GlobalSpaceStatus) {
		var ret GlobalSpaceStatus
		return ret
	}
	return *o.GlobalSpaceStatus
}

// GetGlobalSpaceStatusOk returns a tuple with the GlobalSpaceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetGlobalSpaceStatusOk() (*GlobalSpaceStatus, bool) {
	if o == nil || IsNil(o.GlobalSpaceStatus) {
		return nil, false
	}
	return o.GlobalSpaceStatus, true
}

// HasGlobalSpaceStatus returns a boolean if a field has been set.
func (o *PrivateSpace) HasGlobalSpaceStatus() bool {
	if o != nil && !IsNil(o.GlobalSpaceStatus) {
		return true
	}

	return false
}

// SetGlobalSpaceStatus gets a reference to the given GlobalSpaceStatus and assigns it to the GlobalSpaceStatus field.
func (o *PrivateSpace) SetGlobalSpaceStatus(v GlobalSpaceStatus) {
	o.GlobalSpaceStatus = &v
}

// GetMuleAppDeploymentCount returns the MuleAppDeploymentCount field value if set, zero value otherwise.
func (o *PrivateSpace) GetMuleAppDeploymentCount() int32 {
	if o == nil || IsNil(o.MuleAppDeploymentCount) {
		var ret int32
		return ret
	}
	return *o.MuleAppDeploymentCount
}

// GetMuleAppDeploymentCountOk returns a tuple with the MuleAppDeploymentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetMuleAppDeploymentCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MuleAppDeploymentCount) {
		return nil, false
	}
	return o.MuleAppDeploymentCount, true
}

// HasMuleAppDeploymentCount returns a boolean if a field has been set.
func (o *PrivateSpace) HasMuleAppDeploymentCount() bool {
	if o != nil && !IsNil(o.MuleAppDeploymentCount) {
		return true
	}

	return false
}

// SetMuleAppDeploymentCount gets a reference to the given int32 and assigns it to the MuleAppDeploymentCount field.
func (o *PrivateSpace) SetMuleAppDeploymentCount(v int32) {
	o.MuleAppDeploymentCount = &v
}

// GetDaysLeftForRelaxedQuota returns the DaysLeftForRelaxedQuota field value if set, zero value otherwise.
func (o *PrivateSpace) GetDaysLeftForRelaxedQuota() int32 {
	if o == nil || IsNil(o.DaysLeftForRelaxedQuota) {
		var ret int32
		return ret
	}
	return *o.DaysLeftForRelaxedQuota
}

// GetDaysLeftForRelaxedQuotaOk returns a tuple with the DaysLeftForRelaxedQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetDaysLeftForRelaxedQuotaOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysLeftForRelaxedQuota) {
		return nil, false
	}
	return o.DaysLeftForRelaxedQuota, true
}

// HasDaysLeftForRelaxedQuota returns a boolean if a field has been set.
func (o *PrivateSpace) HasDaysLeftForRelaxedQuota() bool {
	if o != nil && !IsNil(o.DaysLeftForRelaxedQuota) {
		return true
	}

	return false
}

// SetDaysLeftForRelaxedQuota gets a reference to the given int32 and assigns it to the DaysLeftForRelaxedQuota field.
func (o *PrivateSpace) SetDaysLeftForRelaxedQuota(v int32) {
	o.DaysLeftForRelaxedQuota = &v
}

// GetVpcMigrationInProgress returns the VpcMigrationInProgress field value if set, zero value otherwise.
func (o *PrivateSpace) GetVpcMigrationInProgress() bool {
	if o == nil || IsNil(o.VpcMigrationInProgress) {
		var ret bool
		return ret
	}
	return *o.VpcMigrationInProgress
}

// GetVpcMigrationInProgressOk returns a tuple with the VpcMigrationInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpace) GetVpcMigrationInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.VpcMigrationInProgress) {
		return nil, false
	}
	return o.VpcMigrationInProgress, true
}

// HasVpcMigrationInProgress returns a boolean if a field has been set.
func (o *PrivateSpace) HasVpcMigrationInProgress() bool {
	if o != nil && !IsNil(o.VpcMigrationInProgress) {
		return true
	}

	return false
}

// SetVpcMigrationInProgress gets a reference to the given bool and assigns it to the VpcMigrationInProgress field.
func (o *PrivateSpace) SetVpcMigrationInProgress(v bool) {
	o.VpcMigrationInProgress = &v
}

func (o PrivateSpace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.RootOrganizationId) {
		toSerialize["rootOrganizationId"] = o.RootOrganizationId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if !IsNil(o.Provisioning) {
		toSerialize["provisioning"] = o.Provisioning
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Environments) {
		toSerialize["environments"] = o.Environments
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.FirewallRules) {
		toSerialize["firewallRules"] = o.FirewallRules
	}
	if !IsNil(o.IngressConfiguration) {
		toSerialize["ingressConfiguration"] = o.IngressConfiguration
	}
	if !IsNil(o.EnableIAMRole) {
		toSerialize["enableIAMRole"] = o.EnableIAMRole
	}
	if !IsNil(o.EnableEgress) {
		toSerialize["enableEgress"] = o.EnableEgress
	}
	if !IsNil(o.EnableNetworkIsolation) {
		toSerialize["enableNetworkIsolation"] = o.EnableNetworkIsolation
	}
	if !IsNil(o.GlobalSpaceStatus) {
		toSerialize["globalSpaceStatus"] = o.GlobalSpaceStatus
	}
	if !IsNil(o.MuleAppDeploymentCount) {
		toSerialize["muleAppDeploymentCount"] = o.MuleAppDeploymentCount
	}
	if !IsNil(o.DaysLeftForRelaxedQuota) {
		toSerialize["daysLeftForRelaxedQuota"] = o.DaysLeftForRelaxedQuota
	}
	if !IsNil(o.VpcMigrationInProgress) {
		toSerialize["vpcMigrationInProgress"] = o.VpcMigrationInProgress
	}
	return toSerialize, nil
}

type NullablePrivateSpace struct {
	value *PrivateSpace
	isSet bool
}

func (v NullablePrivateSpace) Get() *PrivateSpace {
	return v.value
}

func (v *NullablePrivateSpace) Set(val *PrivateSpace) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpace) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpace(val *PrivateSpace) *NullablePrivateSpace {
	return &NullablePrivateSpace{value: val, isSet: true}
}

func (v NullablePrivateSpace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


