/*
Private Space API

Description of the Private Space API

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space

import (
	"encoding/json"
)

// checks if the PrivateSpaceAssociatedEnvironments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpaceAssociatedEnvironments{}

// PrivateSpaceAssociatedEnvironments Environment association for the Private Space.
type PrivateSpaceAssociatedEnvironments struct {
	// The type of environments. Possible values are all, sandbox, production.
	Type *string `json:"type,omitempty"`
	BusinessGroups []string `json:"businessGroups,omitempty"`
}

// NewPrivateSpaceAssociatedEnvironments instantiates a new PrivateSpaceAssociatedEnvironments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpaceAssociatedEnvironments() *PrivateSpaceAssociatedEnvironments {
	this := PrivateSpaceAssociatedEnvironments{}
	return &this
}

// NewPrivateSpaceAssociatedEnvironmentsWithDefaults instantiates a new PrivateSpaceAssociatedEnvironments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceAssociatedEnvironmentsWithDefaults() *PrivateSpaceAssociatedEnvironments {
	this := PrivateSpaceAssociatedEnvironments{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PrivateSpaceAssociatedEnvironments) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceAssociatedEnvironments) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PrivateSpaceAssociatedEnvironments) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PrivateSpaceAssociatedEnvironments) SetType(v string) {
	o.Type = &v
}

// GetBusinessGroups returns the BusinessGroups field value if set, zero value otherwise.
func (o *PrivateSpaceAssociatedEnvironments) GetBusinessGroups() []string {
	if o == nil || IsNil(o.BusinessGroups) {
		var ret []string
		return ret
	}
	return o.BusinessGroups
}

// GetBusinessGroupsOk returns a tuple with the BusinessGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceAssociatedEnvironments) GetBusinessGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.BusinessGroups) {
		return nil, false
	}
	return o.BusinessGroups, true
}

// HasBusinessGroups returns a boolean if a field has been set.
func (o *PrivateSpaceAssociatedEnvironments) HasBusinessGroups() bool {
	if o != nil && !IsNil(o.BusinessGroups) {
		return true
	}

	return false
}

// SetBusinessGroups gets a reference to the given []string and assigns it to the BusinessGroups field.
func (o *PrivateSpaceAssociatedEnvironments) SetBusinessGroups(v []string) {
	o.BusinessGroups = v
}

func (o PrivateSpaceAssociatedEnvironments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpaceAssociatedEnvironments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.BusinessGroups) {
		toSerialize["businessGroups"] = o.BusinessGroups
	}
	return toSerialize, nil
}

type NullablePrivateSpaceAssociatedEnvironments struct {
	value *PrivateSpaceAssociatedEnvironments
	isSet bool
}

func (v NullablePrivateSpaceAssociatedEnvironments) Get() *PrivateSpaceAssociatedEnvironments {
	return v.value
}

func (v *NullablePrivateSpaceAssociatedEnvironments) Set(val *PrivateSpaceAssociatedEnvironments) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpaceAssociatedEnvironments) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpaceAssociatedEnvironments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpaceAssociatedEnvironments(val *PrivateSpaceAssociatedEnvironments) *NullablePrivateSpaceAssociatedEnvironments {
	return &NullablePrivateSpaceAssociatedEnvironments{value: val, isSet: true}
}

func (v NullablePrivateSpaceAssociatedEnvironments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpaceAssociatedEnvironments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


