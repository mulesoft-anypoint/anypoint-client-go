/*
Private Space API

Description of the Private Space API

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package private_space

import (
	"encoding/json"
)

// checks if the PrivateSpaceSummaryPageable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateSpaceSummaryPageable{}

// PrivateSpaceSummaryPageable struct for PrivateSpaceSummaryPageable
type PrivateSpaceSummaryPageable struct {
	Sort *PrivateSpaceSummaryPageableSort `json:"sort,omitempty"`
	PageNumber *int32 `json:"pageNumber,omitempty"`
	Offset *int32 `json:"offset,omitempty"`
	PageSize *int32 `json:"pageSize,omitempty"`
	Paged *bool `json:"paged,omitempty"`
	Unpaged *bool `json:"unpaged,omitempty"`
}

// NewPrivateSpaceSummaryPageable instantiates a new PrivateSpaceSummaryPageable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateSpaceSummaryPageable() *PrivateSpaceSummaryPageable {
	this := PrivateSpaceSummaryPageable{}
	return &this
}

// NewPrivateSpaceSummaryPageableWithDefaults instantiates a new PrivateSpaceSummaryPageable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateSpaceSummaryPageableWithDefaults() *PrivateSpaceSummaryPageable {
	this := PrivateSpaceSummaryPageable{}
	return &this
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *PrivateSpaceSummaryPageable) GetSort() PrivateSpaceSummaryPageableSort {
	if o == nil || IsNil(o.Sort) {
		var ret PrivateSpaceSummaryPageableSort
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceSummaryPageable) GetSortOk() (*PrivateSpaceSummaryPageableSort, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *PrivateSpaceSummaryPageable) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given PrivateSpaceSummaryPageableSort and assigns it to the Sort field.
func (o *PrivateSpaceSummaryPageable) SetSort(v PrivateSpaceSummaryPageableSort) {
	o.Sort = &v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *PrivateSpaceSummaryPageable) GetPageNumber() int32 {
	if o == nil || IsNil(o.PageNumber) {
		var ret int32
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceSummaryPageable) GetPageNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *PrivateSpaceSummaryPageable) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int32 and assigns it to the PageNumber field.
func (o *PrivateSpaceSummaryPageable) SetPageNumber(v int32) {
	o.PageNumber = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *PrivateSpaceSummaryPageable) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceSummaryPageable) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *PrivateSpaceSummaryPageable) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *PrivateSpaceSummaryPageable) SetOffset(v int32) {
	o.Offset = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *PrivateSpaceSummaryPageable) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceSummaryPageable) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *PrivateSpaceSummaryPageable) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *PrivateSpaceSummaryPageable) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPaged returns the Paged field value if set, zero value otherwise.
func (o *PrivateSpaceSummaryPageable) GetPaged() bool {
	if o == nil || IsNil(o.Paged) {
		var ret bool
		return ret
	}
	return *o.Paged
}

// GetPagedOk returns a tuple with the Paged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceSummaryPageable) GetPagedOk() (*bool, bool) {
	if o == nil || IsNil(o.Paged) {
		return nil, false
	}
	return o.Paged, true
}

// HasPaged returns a boolean if a field has been set.
func (o *PrivateSpaceSummaryPageable) HasPaged() bool {
	if o != nil && !IsNil(o.Paged) {
		return true
	}

	return false
}

// SetPaged gets a reference to the given bool and assigns it to the Paged field.
func (o *PrivateSpaceSummaryPageable) SetPaged(v bool) {
	o.Paged = &v
}

// GetUnpaged returns the Unpaged field value if set, zero value otherwise.
func (o *PrivateSpaceSummaryPageable) GetUnpaged() bool {
	if o == nil || IsNil(o.Unpaged) {
		var ret bool
		return ret
	}
	return *o.Unpaged
}

// GetUnpagedOk returns a tuple with the Unpaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateSpaceSummaryPageable) GetUnpagedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unpaged) {
		return nil, false
	}
	return o.Unpaged, true
}

// HasUnpaged returns a boolean if a field has been set.
func (o *PrivateSpaceSummaryPageable) HasUnpaged() bool {
	if o != nil && !IsNil(o.Unpaged) {
		return true
	}

	return false
}

// SetUnpaged gets a reference to the given bool and assigns it to the Unpaged field.
func (o *PrivateSpaceSummaryPageable) SetUnpaged(v bool) {
	o.Unpaged = &v
}

func (o PrivateSpaceSummaryPageable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateSpaceSummaryPageable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.PageNumber) {
		toSerialize["pageNumber"] = o.PageNumber
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.Paged) {
		toSerialize["paged"] = o.Paged
	}
	if !IsNil(o.Unpaged) {
		toSerialize["unpaged"] = o.Unpaged
	}
	return toSerialize, nil
}

type NullablePrivateSpaceSummaryPageable struct {
	value *PrivateSpaceSummaryPageable
	isSet bool
}

func (v NullablePrivateSpaceSummaryPageable) Get() *PrivateSpaceSummaryPageable {
	return v.value
}

func (v *NullablePrivateSpaceSummaryPageable) Set(val *PrivateSpaceSummaryPageable) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateSpaceSummaryPageable) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateSpaceSummaryPageable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateSpaceSummaryPageable(val *PrivateSpaceSummaryPageable) *NullablePrivateSpaceSummaryPageable {
	return &NullablePrivateSpaceSummaryPageable{value: val, isSet: true}
}

func (v NullablePrivateSpaceSummaryPageable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateSpaceSummaryPageable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


